{
  "requesterUsername": "SlowBubble",
  "requesterAvatarIconUri": {
    "$mid": 1,
    "path": "/u/14957720",
    "scheme": "https",
    "authority": "avatars.githubusercontent.com",
    "query": "v=4"
  },
  "responderUsername": "GitHub Copilot",
  "responderAvatarIconUri": {
    "id": "copilot"
  },
  "initialLocation": "editing-session",
  "requests": [
    {
      "requestId": "request_3251c132-8c40-44f5-a0ef-d5276a01f663",
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 54
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 55
            },
            "text": "Put a menu button on the side of the youtube-container",
            "kind": "text"
          }
        ],
        "text": "Put a menu button on the side of the youtube-container"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "scheme": "file"
            },
            "id": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "name": "gradebook_ui.ts",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "I'll help you add a menu button to the side of the youtube container. Here's how we'll do it:\n\n1. Add CSS to position the menu button\n2. Add the menu button HTML element\n3. Style it with a simple hamburger icon\n\n### [gradebook_ui.ts](file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts)\n\nAdd menu button HTML and CSS to the template literal in loadOrCreateProjectInUi:\n\n```typescript\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "scheme": "file"
          }
        },
        {
          "value": "// ...existing code...\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <button id='menu-button'>â˜°</button>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n      <div><button id='add-youtube-btn'>Add youtube video</button></div>\n    `;\n// ...existing code...\n```\n\nThe changes position the menu button to the right of the YouTube player using flexbox. You can add click handlers and menu functionality by accessing the button with `querySelector('#menu-button')` if needed.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "scheme": "file"
          },
          "edits": [
            [],
            [
              {
                "text": "import { matchKey } from \"../key-match/key_match\";",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { GradebookMgr } from \"./gradebook_mgr\";",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { EphemeralBanner } from \"../ephemeral-banner\";",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { Time } from \"./models/Time\";",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "// Top-level UI to handle everything",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "export class GradebookUi extends HTMLElement {",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private inputStartTime: Time | null = null;",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private gradebookMgr = new GradebookMgr;",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private matchSheetUi: MatchSheetUi = new MatchSheetUi;",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private banner: EphemeralBanner = new EphemeralBanner;",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  connectedCallback() {",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.innerHTML = `Loading project data.`;",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // IFrame steals the focus on click; is polling the best we can do?",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    setInterval(() => {",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        const elt = document.activeElement as HTMLIFrameElement;",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        elt.blur();",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }, 1000);",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  // Must call this to load the editor",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  async loadOrCreateProjectInUi(id: string) {",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.innerHTML = `",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <style>",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      #youtube-container {",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: sticky;",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        top: 0;",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: flex;",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        align-items: flex-start;",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      #menu-button {",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background: none;",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border: none;",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        font-size: 24px;",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        padding: 10px;",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cursor: pointer;",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        margin-left: 10px;",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      </style>",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <ephemeral-banner></ephemeral-banner>",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <div id='youtube-container'>",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        <youtube-player-ui></youtube-player-ui>",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        <button id='menu-button'>â˜°</button>",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      </div>",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <div><match-sheet-ui></match-sheet-ui></div>",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <div><button id='add-youtube-btn'>Add youtube video</button></div>",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    `;",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (cellLoc.rowIdx < 2) {",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return;",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.renderSheet();",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.updateYoutubePlayer();",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return finalProjectId;",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  getVideoPlayerUi() {",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return this.youtubePlayerUi",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  handleKeydown(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.handleKeydownWithoutChanges(evt);",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.handleKeydownWithSheetChanges(evt);",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    console.log(this.gradebookMgr.project.cursor)",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  async handleKeydownWithoutChanges(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().toggleVideoPlay();",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'y')) {",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.obtainYoutubeUrl();",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'z')) {",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'x')) {",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().incrementPlaybackRate(0.2);",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'a')) {",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().resetPlaybackRate();",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'l')) {",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(1.5);",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'j')) {",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(-3);",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, ';')) {",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(5);",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'h')) {",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(-5);",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'f')) {",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const width = this.getVideoPlayerUi().getIframeWidth();",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      let wantWidth = width < 1000 ? width * 4 : width / 4;",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().setIframeDims(wantWidth);",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+s')) {",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      evt.preventDefault();",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.banner.inProgress('Saving');",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const failureMsg = await this.gradebookMgr.save();",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (failureMsg) {",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.banner.failure(failureMsg);",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.banner.success('Saved!');",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    evt.preventDefault();",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  handleKeydownWithSheetChanges(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (matchKey(evt, 'up')) {",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'down')) {",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(1);",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, `\\\\`)) {",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.tabSelectedCell();",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, `shift+|`)) {",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.tabSelectedCell(true);",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(-1);",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'backspace')) {",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.removeCurrRally();",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+z')) {",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (this.inputStartTime) {",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.inputStartTime = null;",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'enter')) {",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.enterSelectedCell();",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    evt.preventDefault();",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private enterSelectedCell() {",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rally = this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!rally) {",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (this.inputStartTime) {",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.promoteRally();",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return;",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.updateInputStartTime();",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = this.gradebookMgr.project.cursor;",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (cursor.colIdx === START_TIME_COL) {",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.youtubePlayerUi.moveTo(rally.startTime.ms);",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === END_TIME_COL) {",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.youtubePlayerUi.moveTo(rally.endTime.ms);",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === RESULT_COL) {",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === SERVER_COL) {",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const name = prompt(`Enter server's name`);",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (name) {",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if (rally.isMyServe) {",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          this.gradebookMgr.project.matchData.myName = name;",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        } else {",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          this.gradebookMgr.project.matchData.oppoName = name;",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private tabSelectedCell(opposite = false) {",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rally = this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!rally) {",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = this.gradebookMgr.project.cursor;",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (cursor.colIdx === RESULT_COL) {",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const idx = rallyResultToIndex.get(rally.result);",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const nextIdx = next % rallyResultToIndex.size;",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.result = rallyResultVals[nextIdx];",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const ratingChange = opposite ? 1 : -1;",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.stat.winnerLastShotQuality = mod(",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const ratingChange = opposite ? -1 : 1;",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.stat.loserPreviousShotQuality = mod(",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === SERVER_COL) {",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.isMyServe = !rally.isMyServe;",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private renderSheet() {",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi.render(this.genSheet());",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private obtainYoutubeUrl() {",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const url = prompt('Enter url');",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!url) {",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const res = extractYoutubeId(url);",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!res.success) {",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.matchData.urls.push(url);",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.updateYoutubePlayer();",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1,
                  "endLineNumber": 236,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private updateYoutubePlayer() {",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1,
                  "endLineNumber": 237,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (this.gradebookMgr.project.matchData.urls.length < 1) {",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1,
                  "endLineNumber": 238,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1,
                  "endLineNumber": 239,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1,
                  "endLineNumber": 240,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1,
                  "endLineNumber": 241,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!success) {",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1,
                  "endLineNumber": 242,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1,
                  "endLineNumber": 243,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 244,
                  "startColumn": 1,
                  "endLineNumber": 244,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.youtubePlayerUi.initYoutubePlayer(id);",
                "range": {
                  "startLineNumber": 245,
                  "startColumn": 1,
                  "endLineNumber": 245,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 246,
                  "startColumn": 1,
                  "endLineNumber": 246,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 247,
                  "startColumn": 1,
                  "endLineNumber": 247,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private getNowMs() {",
                "range": {
                  "startLineNumber": 248,
                  "startColumn": 1,
                  "endLineNumber": 248,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();",
                "range": {
                  "startLineNumber": 249,
                  "startColumn": 1,
                  "endLineNumber": 249,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return Math.round(nowSec * 1000);",
                "range": {
                  "startLineNumber": 250,
                  "startColumn": 1,
                  "endLineNumber": 250,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 251,
                  "startColumn": 1,
                  "endLineNumber": 251,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 252,
                  "startColumn": 1,
                  "endLineNumber": 252,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private updateInputStartTime() {",
                "range": {
                  "startLineNumber": 253,
                  "startColumn": 1,
                  "endLineNumber": 253,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.inputStartTime = new Time(this.getNowMs());",
                "range": {
                  "startLineNumber": 254,
                  "startColumn": 1,
                  "endLineNumber": 254,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 255,
                  "startColumn": 1,
                  "endLineNumber": 255,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 256,
                  "startColumn": 1,
                  "endLineNumber": 256,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 257,
                  "startColumn": 1,
                  "endLineNumber": 257,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private promoteRally() {",
                "range": {
                  "startLineNumber": 258,
                  "startColumn": 1,
                  "endLineNumber": 258,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // TODO use win based on server",
                "range": {
                  "startLineNumber": 259,
                  "startColumn": 1,
                  "endLineNumber": 259,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!this.inputStartTime) {",
                "range": {
                  "startLineNumber": 260,
                  "startColumn": 1,
                  "endLineNumber": 260,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      console.warn('cannot promote rally without inputStartTime');",
                "range": {
                  "startLineNumber": 261,
                  "startColumn": 1,
                  "endLineNumber": 261,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 262,
                  "startColumn": 1,
                  "endLineNumber": 262,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 263,
                  "startColumn": 1,
                  "endLineNumber": 263,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const nowMs = this.getNowMs();",
                "range": {
                  "startLineNumber": 264,
                  "startColumn": 1,
                  "endLineNumber": 264,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;",
                "range": {
                  "startLineNumber": 265,
                  "startColumn": 1,
                  "endLineNumber": 265,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);",
                "range": {
                  "startLineNumber": 266,
                  "startColumn": 1,
                  "endLineNumber": 266,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;",
                "range": {
                  "startLineNumber": 267,
                  "startColumn": 1,
                  "endLineNumber": 267,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;",
                "range": {
                  "startLineNumber": 268,
                  "startColumn": 1,
                  "endLineNumber": 268,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.rallyIdx = 0;",
                "range": {
                  "startLineNumber": 269,
                  "startColumn": 1,
                  "endLineNumber": 269,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 270,
                  "startColumn": 1,
                  "endLineNumber": 270,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.inputStartTime = null;",
                "range": {
                  "startLineNumber": 271,
                  "startColumn": 1,
                  "endLineNumber": 271,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 272,
                  "startColumn": 1,
                  "endLineNumber": 272,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 273,
                  "startColumn": 1,
                  "endLineNumber": 273,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 274,
                  "startColumn": 1,
                  "endLineNumber": 274,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private genSheet(): Cell[][] {",
                "range": {
                  "startLineNumber": 275,
                  "startColumn": 1,
                  "endLineNumber": 275,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const project = this.gradebookMgr.project;",
                "range": {
                  "startLineNumber": 276,
                  "startColumn": 1,
                  "endLineNumber": 276,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = project.cursor;",
                "range": {
                  "startLineNumber": 277,
                  "startColumn": 1,
                  "endLineNumber": 277,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rows = [];",
                "range": {
                  "startLineNumber": 278,
                  "startColumn": 1,
                  "endLineNumber": 278,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const headerRow = [",
                "range": {
                  "startLineNumber": 279,
                  "startColumn": 1,
                  "endLineNumber": 279,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Server'),",
                "range": {
                  "startLineNumber": 280,
                  "startColumn": 1,
                  "endLineNumber": 280,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Set'),",
                "range": {
                  "startLineNumber": 281,
                  "startColumn": 1,
                  "endLineNumber": 281,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Game Score'),",
                "range": {
                  "startLineNumber": 282,
                  "startColumn": 1,
                  "endLineNumber": 282,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 283,
                  "startColumn": 1,
                  "endLineNumber": 283,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Start'),",
                "range": {
                  "startLineNumber": 284,
                  "startColumn": 1,
                  "endLineNumber": 284,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('End'),",
                "range": {
                  "startLineNumber": 285,
                  "startColumn": 1,
                  "endLineNumber": 285,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Result'),",
                "range": {
                  "startLineNumber": 286,
                  "startColumn": 1,
                  "endLineNumber": 286,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Winner's`),",
                "range": {
                  "startLineNumber": 287,
                  "startColumn": 1,
                  "endLineNumber": 287,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      // new Cell(`Winner's last shot`),",
                "range": {
                  "startLineNumber": 288,
                  "startColumn": 1,
                  "endLineNumber": 288,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Loser's`),",
                "range": {
                  "startLineNumber": 289,
                  "startColumn": 1,
                  "endLineNumber": 289,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      // new Cell(`Loser's previous shot`),",
                "range": {
                  "startLineNumber": 290,
                  "startColumn": 1,
                  "endLineNumber": 290,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Plot'),",
                "range": {
                  "startLineNumber": 291,
                  "startColumn": 1,
                  "endLineNumber": 291,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Winner's risk level`),",
                "range": {
                  "startLineNumber": 292,
                  "startColumn": 1,
                  "endLineNumber": 292,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ];",
                "range": {
                  "startLineNumber": 293,
                  "startColumn": 1,
                  "endLineNumber": 293,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rows.push(headerRow);",
                "range": {
                  "startLineNumber": 294,
                  "startColumn": 1,
                  "endLineNumber": 294,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 295,
                  "startColumn": 1,
                  "endLineNumber": 295,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const myName = project.matchData.myName;",
                "range": {
                  "startLineNumber": 296,
                  "startColumn": 1,
                  "endLineNumber": 296,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const oppoName = project.matchData.oppoName;",
                "range": {
                  "startLineNumber": 297,
                  "startColumn": 1,
                  "endLineNumber": 297,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();",
                "range": {
                  "startLineNumber": 298,
                  "startColumn": 1,
                  "endLineNumber": 298,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rallyContexts.reverse();",
                "range": {
                  "startLineNumber": 299,
                  "startColumn": 1,
                  "endLineNumber": 299,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 300,
                  "startColumn": 1,
                  "endLineNumber": 300,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursorAtTop = !this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 301,
                  "startColumn": 1,
                  "endLineNumber": 301,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const hasInputStartTime = this.inputStartTime !== null;",
                "range": {
                  "startLineNumber": 302,
                  "startColumn": 1,
                  "endLineNumber": 302,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const startTime = hasInputStartTime ?",
                "range": {
                  "startLineNumber": 303,
                  "startColumn": 1,
                  "endLineNumber": 303,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      formatSecondsToTimeString(this.inputStartTime!.ms) :",
                "range": {
                  "startLineNumber": 304,
                  "startColumn": 1,
                  "endLineNumber": 304,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      `<button id='input-start-time'>(Enter)</button>`;",
                "range": {
                  "startLineNumber": 305,
                  "startColumn": 1,
                  "endLineNumber": 305,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const endTime = hasInputStartTime ?",
                "range": {
                  "startLineNumber": 306,
                  "startColumn": 1,
                  "endLineNumber": 306,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      `<button id='input-end-time'>(Enter)</button>` : '';",
                "range": {
                  "startLineNumber": 307,
                  "startColumn": 1,
                  "endLineNumber": 307,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const setupInputStartTimeBtn = () => {",
                "range": {
                  "startLineNumber": 308,
                  "startColumn": 1,
                  "endLineNumber": 308,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 309,
                  "startColumn": 1,
                  "endLineNumber": 309,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (btn) {",
                "range": {
                  "startLineNumber": 310,
                  "startColumn": 1,
                  "endLineNumber": 310,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        btn.onclick = () => this.updateInputStartTime();",
                "range": {
                  "startLineNumber": 311,
                  "startColumn": 1,
                  "endLineNumber": 311,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 312,
                  "startColumn": 1,
                  "endLineNumber": 312,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    };",
                "range": {
                  "startLineNumber": 313,
                  "startColumn": 1,
                  "endLineNumber": 313,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const setupInputEndTimeBtn = () => {",
                "range": {
                  "startLineNumber": 314,
                  "startColumn": 1,
                  "endLineNumber": 314,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 315,
                  "startColumn": 1,
                  "endLineNumber": 315,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (btn) {",
                "range": {
                  "startLineNumber": 316,
                  "startColumn": 1,
                  "endLineNumber": 316,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        btn.onclick = () => this.promoteRally();",
                "range": {
                  "startLineNumber": 317,
                  "startColumn": 1,
                  "endLineNumber": 317,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 318,
                  "startColumn": 1,
                  "endLineNumber": 318,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    };",
                "range": {
                  "startLineNumber": 319,
                  "startColumn": 1,
                  "endLineNumber": 319,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 320,
                  "startColumn": 1,
                  "endLineNumber": 320,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // The latest rallyContext should only have score and not a rally.",
                "range": {
                  "startLineNumber": 321,
                  "startColumn": 1,
                  "endLineNumber": 321,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const latestRallyCtx = rallyContexts[0];",
                "range": {
                  "startLineNumber": 322,
                  "startColumn": 1,
                  "endLineNumber": 322,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const score = latestRallyCtx.scoreBeforeRally;",
                "range": {
                  "startLineNumber": 323,
                  "startColumn": 1,
                  "endLineNumber": 323,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 324,
                  "startColumn": 1,
                  "endLineNumber": 324,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const row = [",
                "range": {
                  "startLineNumber": 325,
                  "startColumn": 1,
                  "endLineNumber": 325,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 326,
                  "startColumn": 1,
                  "endLineNumber": 326,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(latestRallyCtx.toGameScoreStr()),",
                "range": {
                  "startLineNumber": 327,
                  "startColumn": 1,
                  "endLineNumber": 327,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(score.toPointsStr()),",
                "range": {
                  "startLineNumber": 328,
                  "startColumn": 1,
                  "endLineNumber": 328,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 329,
                  "startColumn": 1,
                  "endLineNumber": 329,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(startTime, makeOpts({",
                "range": {
                  "startLineNumber": 330,
                  "startColumn": 1,
                  "endLineNumber": 330,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        setupFunc: setupInputStartTimeBtn,",
                "range": {
                  "startLineNumber": 331,
                  "startColumn": 1,
                  "endLineNumber": 331,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        selected: cursorAtTop && !hasInputStartTime,",
                "range": {
                  "startLineNumber": 332,
                  "startColumn": 1,
                  "endLineNumber": 332,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      })),",
                "range": {
                  "startLineNumber": 333,
                  "startColumn": 1,
                  "endLineNumber": 333,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(endTime, makeOpts({",
                "range": {
                  "startLineNumber": 334,
                  "startColumn": 1,
                  "endLineNumber": 334,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        setupFunc: setupInputEndTimeBtn,",
                "range": {
                  "startLineNumber": 335,
                  "startColumn": 1,
                  "endLineNumber": 335,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        selected: cursorAtTop && hasInputStartTime,",
                "range": {
                  "startLineNumber": 336,
                  "startColumn": 1,
                  "endLineNumber": 336,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 337,
                  "startColumn": 1,
                  "endLineNumber": 337,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      })),",
                "range": {
                  "startLineNumber": 338,
                  "startColumn": 1,
                  "endLineNumber": 338,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 339,
                  "startColumn": 1,
                  "endLineNumber": 339,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 340,
                  "startColumn": 1,
                  "endLineNumber": 340,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 341,
                  "startColumn": 1,
                  "endLineNumber": 341,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(score ? latestRallyCtx.toPlot().text : '', makeOpts({",
                "range": {
                  "startLineNumber": 342,
                  "startColumn": 1,
                  "endLineNumber": 342,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !latestRallyCtx.toPlot().isMyPlot})),",
                "range": {
                  "startLineNumber": 343,
                  "startColumn": 1,
                  "endLineNumber": 343,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 344,
                  "startColumn": 1,
                  "endLineNumber": 344,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ];",
                "range": {
                  "startLineNumber": 345,
                  "startColumn": 1,
                  "endLineNumber": 345,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rows.push(row);",
                "range": {
                  "startLineNumber": 346,
                  "startColumn": 1,
                  "endLineNumber": 346,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 347,
                  "startColumn": 1,
                  "endLineNumber": 347,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rallyContexts.slice(1).forEach((rallyCtx, rallyIdx) => {",
                "range": {
                  "startLineNumber": 348,
                  "startColumn": 1,
                  "endLineNumber": 348,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rally = rallyCtx.rally;",
                "range": {
                  "startLineNumber": 349,
                  "startColumn": 1,
                  "endLineNumber": 349,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const score = rallyCtx.scoreBeforeRally;",
                "range": {
                  "startLineNumber": 350,
                  "startColumn": 1,
                  "endLineNumber": 350,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rallyIsDoubleFault = rallyCtx.isDoubleFault();",
                "range": {
                  "startLineNumber": 351,
                  "startColumn": 1,
                  "endLineNumber": 351,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rallyIsPoint = (",
                "range": {
                  "startLineNumber": 352,
                  "startColumn": 1,
                  "endLineNumber": 352,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rallyIsDoubleFault || rally.result === RallyResult.PtServer",
                "range": {
                  "startLineNumber": 353,
                  "startColumn": 1,
                  "endLineNumber": 353,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        || rally.result === RallyResult.PtReturner);",
                "range": {
                  "startLineNumber": 354,
                  "startColumn": 1,
                  "endLineNumber": 354,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||",
                "range": {
                  "startLineNumber": 355,
                  "startColumn": 1,
                  "endLineNumber": 355,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));",
                "range": {
                  "startLineNumber": 356,
                  "startColumn": 1,
                  "endLineNumber": 356,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const plot = rallyCtx.toPlot();",
                "range": {
                  "startLineNumber": 357,
                  "startColumn": 1,
                  "endLineNumber": 357,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const server = rally.isMyServe ? myName :",
                "range": {
                  "startLineNumber": 358,
                  "startColumn": 1,
                  "endLineNumber": 358,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;",
                "range": {
                  "startLineNumber": 359,
                  "startColumn": 1,
                  "endLineNumber": 359,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const row = [",
                "range": {
                  "startLineNumber": 360,
                  "startColumn": 1,
                  "endLineNumber": 360,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(",
                "range": {
                  "startLineNumber": 361,
                  "startColumn": 1,
                  "endLineNumber": 361,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 362,
                  "startColumn": 1,
                  "endLineNumber": 362,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 363,
                  "startColumn": 1,
                  "endLineNumber": 363,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 364,
                  "startColumn": 1,
                  "endLineNumber": 364,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(formatSecondsToTimeString(rally.startTime.ms)),",
                "range": {
                  "startLineNumber": 365,
                  "startColumn": 1,
                  "endLineNumber": 365,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),",
                "range": {
                  "startLineNumber": 366,
                  "startColumn": 1,
                  "endLineNumber": 366,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),",
                "range": {
                  "startLineNumber": 367,
                  "startColumn": 1,
                  "endLineNumber": 367,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            makeOpts({alignCenter: true})),",
                "range": {
                  "startLineNumber": 368,
                  "startColumn": 1,
                  "endLineNumber": 368,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 369,
                  "startColumn": 1,
                  "endLineNumber": 369,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 370,
                  "startColumn": 1,
                  "endLineNumber": 370,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 371,
                  "startColumn": 1,
                  "endLineNumber": 371,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 372,
                  "startColumn": 1,
                  "endLineNumber": 372,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        // TODO think of a better way to not special case Converted.",
                "range": {
                  "startLineNumber": 373,
                  "startColumn": 1,
                  "endLineNumber": 373,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        // E.g. not rely on rallyIsPoint to filter at all. ",
                "range": {
                  "startLineNumber": 374,
                  "startColumn": 1,
                  "endLineNumber": 374,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyIsPoint || plot.text === 'Converted' ? plot.text : '', makeOpts({",
                "range": {
                  "startLineNumber": 375,
                  "startColumn": 1,
                  "endLineNumber": 375,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          alignRight: !plot.isMyPlot, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 376,
                  "startColumn": 1,
                  "endLineNumber": 376,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getRiskLevelStr(rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 377,
                  "startColumn": 1,
                  "endLineNumber": 377,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 378,
                  "startColumn": 1,
                  "endLineNumber": 378,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      ];",
                "range": {
                  "startLineNumber": 379,
                  "startColumn": 1,
                  "endLineNumber": 379,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      row.forEach((cell, colIdx) => {",
                "range": {
                  "startLineNumber": 380,
                  "startColumn": 1,
                  "endLineNumber": 380,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);",
                "range": {
                  "startLineNumber": 381,
                  "startColumn": 1,
                  "endLineNumber": 381,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 382,
                  "startColumn": 1,
                  "endLineNumber": 382,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rows.push(row);",
                "range": {
                  "startLineNumber": 383,
                  "startColumn": 1,
                  "endLineNumber": 383,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 384,
                  "startColumn": 1,
                  "endLineNumber": 384,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return rows;",
                "range": {
                  "startLineNumber": 385,
                  "startColumn": 1,
                  "endLineNumber": 385,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 386,
                  "startColumn": 1,
                  "endLineNumber": 386,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 387,
                  "startColumn": 1,
                  "endLineNumber": 387,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 388,
                  "startColumn": 1,
                  "endLineNumber": 388,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "function mod(x = 0, y = 1) {",
                "range": {
                  "startLineNumber": 389,
                  "startColumn": 1,
                  "endLineNumber": 389,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const res = x % y;",
                "range": {
                  "startLineNumber": 390,
                  "startColumn": 1,
                  "endLineNumber": 390,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  if (res < 0) {",
                "range": {
                  "startLineNumber": 391,
                  "startColumn": 1,
                  "endLineNumber": 391,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return res + y;",
                "range": {
                  "startLineNumber": 392,
                  "startColumn": 1,
                  "endLineNumber": 392,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 393,
                  "startColumn": 1,
                  "endLineNumber": 393,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  return res;",
                "range": {
                  "startLineNumber": 394,
                  "startColumn": 1,
                  "endLineNumber": 394,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 395,
                  "startColumn": 1,
                  "endLineNumber": 395,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 396,
                  "startColumn": 1,
                  "endLineNumber": 396,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "function formatSecondsToTimeString(numMs: number): string {",
                "range": {
                  "startLineNumber": 397,
                  "startColumn": 1,
                  "endLineNumber": 397,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const numSecs = Math.round(numMs / 1000)",
                "range": {
                  "startLineNumber": 398,
                  "startColumn": 1,
                  "endLineNumber": 398,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const hours = Math.floor(numSecs / 3600);",
                "range": {
                  "startLineNumber": 399,
                  "startColumn": 1,
                  "endLineNumber": 399,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const minutes = Math.floor((numSecs % 3600) / 60);",
                "range": {
                  "startLineNumber": 400,
                  "startColumn": 1,
                  "endLineNumber": 400,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const seconds = numSecs % 60;",
                "range": {
                  "startLineNumber": 401,
                  "startColumn": 1,
                  "endLineNumber": 401,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 402,
                  "startColumn": 1,
                  "endLineNumber": 402,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const formattedHours = hours.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 403,
                  "startColumn": 1,
                  "endLineNumber": 403,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const formattedMinutes = minutes.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 404,
                  "startColumn": 1,
                  "endLineNumber": 404,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const formattedSeconds = seconds.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 405,
                  "startColumn": 1,
                  "endLineNumber": 405,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 406,
                  "startColumn": 1,
                  "endLineNumber": 406,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  if (hours === 0) {",
                "range": {
                  "startLineNumber": 407,
                  "startColumn": 1,
                  "endLineNumber": 407,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return `${formattedMinutes}:${formattedSeconds}`;",
                "range": {
                  "startLineNumber": 408,
                  "startColumn": 1,
                  "endLineNumber": 408,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  } else {",
                "range": {
                  "startLineNumber": 409,
                  "startColumn": 1,
                  "endLineNumber": 409,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;",
                "range": {
                  "startLineNumber": 410,
                  "startColumn": 1,
                  "endLineNumber": 410,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 411,
                  "startColumn": 1,
                  "endLineNumber": 411,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 412,
                  "startColumn": 1,
                  "endLineNumber": 412,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 413,
                  "startColumn": 1,
                  "endLineNumber": 413,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n// https://stackoverflow.com/a/54200105",
                "range": {
                  "startLineNumber": 414,
                  "startColumn": 1073741825,
                  "endLineNumber": 414,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nfunction extractYoutubeId(url: string){",
                "range": {
                  "startLineNumber": 415,
                  "startColumn": 1073741825,
                  "endLineNumber": 415,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);",
                "range": {
                  "startLineNumber": 416,
                  "startColumn": 1073741825,
                  "endLineNumber": 416,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n   if (parts[2] === undefined) {",
                "range": {
                  "startLineNumber": 417,
                  "startColumn": 1073741825,
                  "endLineNumber": 417,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    return {success: false, id: ''};",
                "range": {
                  "startLineNumber": 418,
                  "startColumn": 1073741825,
                  "endLineNumber": 418,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n   }",
                "range": {
                  "startLineNumber": 419,
                  "startColumn": 1073741825,
                  "endLineNumber": 419,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};",
                "range": {
                  "startLineNumber": 420,
                  "startColumn": 1073741825,
                  "endLineNumber": 420,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n}",
                "range": {
                  "startLineNumber": 421,
                  "startColumn": 1073741825,
                  "endLineNumber": 421,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 422,
                  "startColumn": 1073741825,
                  "endLineNumber": 422,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\ncustomElements.define('gradebook-ui', GradebookUi)",
                "range": {
                  "startLineNumber": 423,
                  "startColumn": 1073741825,
                  "endLineNumber": 423,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 424,
                  "startColumn": 1073741825,
                  "endLineNumber": 424,
                  "endColumn": 1073741825
                }
              }
            ],
            []
          ],
          "done": true
        }
      ],
      "responseId": "response_37479ffe-7273-4022-a725-95830f17ce74",
      "isHidden": false,
      "result": {
        "timings": {
          "firstProgress": 5855,
          "totalElapsed": 20981
        },
        "metadata": {
          "edits": {
            "workingSet": [
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "scheme": "file"
                },
                "text": "import { matchKey } from \"../key-match/key_match\";\nimport { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";\nimport { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";\nimport { GradebookMgr } from \"./gradebook_mgr\";\nimport { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";\nimport { EphemeralBanner } from \"../ephemeral-banner\";\nimport { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";\nimport { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";\nimport { Time } from \"./models/Time\";\n\n\n// Top-level UI to handle everything\nexport class GradebookUi extends HTMLElement {\n  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;\n\n  private inputStartTime: Time | null = null;\n  private gradebookMgr = new GradebookMgr;\n\n  private matchSheetUi: MatchSheetUi = new MatchSheetUi;\n  private banner: EphemeralBanner = new EphemeralBanner;\n\n  connectedCallback() {\n    this.innerHTML = `Loading project data.`;\n\n    // IFrame steals the focus on click; is polling the best we can do?\n    setInterval(() => {\n      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {\n        const elt = document.activeElement as HTMLIFrameElement;\n        elt.blur();\n      }\n    }, 1000);\n  }\n\n  // Must call this to load the editor\n  async loadOrCreateProjectInUi(id: string) {\n    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);\n\n    this.innerHTML = `\n      <style>\n      #youtube-container{\n        position: sticky;\n        top: 0;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n      <div><button id='add-youtube-btn'>Add youtube video</button></div>\n    `;\n    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;\n    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;\n    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {\n      if (cellLoc.rowIdx < 2) {\n        return;\n      }\n      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;\n      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;\n      this.renderSheet();\n    });\n    this.renderSheet();\n\n    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;\n    this.updateYoutubePlayer();\n\n    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;\n    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();\n    return finalProjectId;\n  }\n\n  getVideoPlayerUi() {\n    return this.youtubePlayerUi\n  }\n  handleKeydown(evt: KeyboardEvent) {\n    this.handleKeydownWithoutChanges(evt);\n    this.handleKeydownWithSheetChanges(evt);\n    console.log(this.gradebookMgr.project.cursor)\n  }\n\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    } else if (matchKey(evt, 'y')) {\n      this.obtainYoutubeUrl();\n    } else if (matchKey(evt, 'z')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);\n    } else if (matchKey(evt, 'x')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(0.2);\n    } else if (matchKey(evt, 'a')) {\n      this.getVideoPlayerUi().resetPlaybackRate();\n    } else if (matchKey(evt, 'l')) {\n      this.getVideoPlayerUi().move(1.5);\n    } else if (matchKey(evt, 'j')) {\n      this.getVideoPlayerUi().move(-3);\n    } else if (matchKey(evt, ';')) {\n      this.getVideoPlayerUi().move(5);\n    } else if (matchKey(evt, 'h')) {\n      this.getVideoPlayerUi().move(-5);\n    } else if (matchKey(evt, 'f')) {\n      const width = this.getVideoPlayerUi().getIframeWidth();\n      let wantWidth = width < 1000 ? width * 4 : width / 4;\n      this.getVideoPlayerUi().setIframeDims(wantWidth);\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  handleKeydownWithSheetChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'up')) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (matchKey(evt, 'down')) {\n      this.gradebookMgr.moveRallyIdx(1);\n    } else if (matchKey(evt, `\\\\`)) {\n      this.tabSelectedCell();\n    } else if (matchKey(evt, `shift+|`)) {\n      this.tabSelectedCell(true);\n    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {\n      this.gradebookMgr.moveColIdx(-1);\n    } else if (matchKey(evt, 'backspace')) {\n      this.gradebookMgr.removeCurrRally();\n    } else if (matchKey(evt, 'cmd+z')) {\n      if (this.inputStartTime) {\n        this.inputStartTime = null;\n      }\n    } else if (matchKey(evt, 'enter')) {\n      this.enterSelectedCell();\n    } else {\n      return;\n    }\n    this.renderSheet();\n    evt.preventDefault();\n  }\n\n  private enterSelectedCell() {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      if (this.inputStartTime) {\n        this.promoteRally();\n        return;\n      }\n      this.updateInputStartTime();\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === START_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.startTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === END_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.endTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === RESULT_COL) {\n      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {\n        this.gradebookMgr.moveColIdx(1);\n      } else {\n        this.gradebookMgr.moveRallyIdx(-1);\n      }\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      const name = prompt(`Enter server's name`);\n      if (name) {\n        if (rally.isMyServe) {\n          this.gradebookMgr.project.matchData.myName = name;\n        } else {\n          this.gradebookMgr.project.matchData.oppoName = name;\n        }\n      }\n    }\n  }\n  private tabSelectedCell(opposite = false) {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === RESULT_COL) {\n      const idx = rallyResultToIndex.get(rally.result);\n      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;\n      const nextIdx = next % rallyResultToIndex.size;\n      rally.result = rallyResultVals[nextIdx];\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      const ratingChange = opposite ? 1 : -1;\n      rally.stat.winnerLastShotQuality = mod(\n        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      const ratingChange = opposite ? -1 : 1;\n      rally.stat.loserPreviousShotQuality = mod(\n        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      rally.isMyServe = !rally.isMyServe;\n    }\n  }\n\n  private renderSheet() {\n    this.matchSheetUi.render(this.genSheet());\n  }\n\n  private obtainYoutubeUrl() {\n    const url = prompt('Enter url');\n    if (!url) {\n      return;\n    }\n    const res = extractYoutubeId(url);\n    if (!res.success) {\n      return;\n    }\n    this.gradebookMgr.project.matchData.urls.push(url);\n    this.updateYoutubePlayer();\n  }\n\n  private updateYoutubePlayer() {\n    if (this.gradebookMgr.project.matchData.urls.length < 1) {\n      return;\n    }\n    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);\n    if (!success) {\n      return;\n    }\n    this.youtubePlayerUi.initYoutubePlayer(id);\n  }\n\n  private getNowMs() {\n    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();\n    return Math.round(nowSec * 1000);\n  }\n\n  private updateInputStartTime() {\n    this.inputStartTime = new Time(this.getNowMs());\n    this.renderSheet();\n  }\n\n  private promoteRally() {\n    // TODO use win based on server\n    if (!this.inputStartTime) {\n      console.warn('cannot promote rally without inputStartTime');\n      return;\n    }\n    const nowMs = this.getNowMs();\n    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;\n    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);\n    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;\n    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;\n    this.gradebookMgr.project.cursor.rallyIdx = 0;\n\n    this.inputStartTime = null;\n    this.renderSheet();\n  }\n\n  private genSheet(): Cell[][] {\n    const project = this.gradebookMgr.project;\n    const cursor = project.cursor;\n    const rows = [];\n    const headerRow = [\n      new Cell('Server'),\n      new Cell('Set'),\n      new Cell('Game Score'),\n\n      new Cell('Start'),\n      new Cell('End'),\n      new Cell('Result'),\n      new Cell(`Winner's`),\n      // new Cell(`Winner's last shot`),\n      new Cell(`Loser's`),\n      // new Cell(`Loser's previous shot`),\n      new Cell('Plot'),\n      new Cell(`Winner's risk level`),\n    ];\n    rows.push(headerRow);\n\n    const myName = project.matchData.myName;\n    const oppoName = project.matchData.oppoName;\n    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();\n    rallyContexts.reverse();\n\n    const cursorAtTop = !this.gradebookMgr.getCurrentRally();\n    const hasInputStartTime = this.inputStartTime !== null;\n    const startTime = hasInputStartTime ?\n      formatSecondsToTimeString(this.inputStartTime!.ms) :\n      `<button id='input-start-time'>(Enter)</button>`;\n    const endTime = hasInputStartTime ?\n      `<button id='input-end-time'>(Enter)</button>` : '';\n    const setupInputStartTimeBtn = () => {\n      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.updateInputStartTime();\n      }\n    };\n    const setupInputEndTimeBtn = () => {\n      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.promoteRally();\n      }\n    };\n\n    // The latest rallyContext should only have score and not a rally.\n    const latestRallyCtx = rallyContexts[0];\n    const score = latestRallyCtx.scoreBeforeRally;\n\n    const row = [\n      new Cell(''),\n      new Cell(latestRallyCtx.toGameScoreStr()),\n      new Cell(score.toPointsStr()),\n\n      new Cell(startTime, makeOpts({\n        setupFunc: setupInputStartTimeBtn,\n        selected: cursorAtTop && !hasInputStartTime,\n      })),\n      new Cell(endTime, makeOpts({\n        setupFunc: setupInputEndTimeBtn,\n        selected: cursorAtTop && hasInputStartTime,\n        \n      })),\n      new Cell(''),\n      new Cell(''),\n      new Cell(''),\n      new Cell(score ? latestRallyCtx.toPlot().text : '', makeOpts({\n        alignRight: !latestRallyCtx.toPlot().isMyPlot})),\n      new Cell(''),\n    ];\n    rows.push(row);\n\n    rallyContexts.slice(1).forEach((rallyCtx, rallyIdx) => {\n      const rally = rallyCtx.rally;\n      const score = rallyCtx.scoreBeforeRally;\n      const rallyIsDoubleFault = rallyCtx.isDoubleFault();\n      const rallyIsPoint = (\n        rallyIsDoubleFault || rally.result === RallyResult.PtServer\n        || rally.result === RallyResult.PtReturner);\n      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||\n        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));\n      const plot = rallyCtx.toPlot();\n      const server = rally.isMyServe ? myName :\n          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;\n      const row = [\n        new Cell(\n          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(formatSecondsToTimeString(rally.startTime.ms)),\n        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),\n        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),\n            makeOpts({alignCenter: true})),\n        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({\n          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        // TODO think of a better way to not special case Converted.\n        // E.g. not rely on rallyIsPoint to filter at all. \n        new Cell(rallyIsPoint || plot.text === 'Converted' ? plot.text : '', makeOpts({\n          alignRight: !plot.isMyPlot, removeTopBorder: !rallyIsPoint})),\n        new Cell(getRiskLevelStr(rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n      ];\n      row.forEach((cell, colIdx) => {\n        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);\n      });\n      rows.push(row);\n    });\n    return rows;\n  }\n}\n\nfunction mod(x = 0, y = 1) {\n  const res = x % y;\n  if (res < 0) {\n    return res + y;\n  }\n  return res;\n}\n\nfunction formatSecondsToTimeString(numMs: number): string {\n  const numSecs = Math.round(numMs / 1000)\n  const hours = Math.floor(numSecs / 3600);\n  const minutes = Math.floor((numSecs % 3600) / 60);\n  const seconds = numSecs % 60;\n\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n  const formattedSeconds = seconds.toString().padStart(2, '0');\n\n  if (hours === 0) {\n    return `${formattedMinutes}:${formattedSeconds}`;\n  } else {\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n\n// https://stackoverflow.com/a/54200105\nfunction extractYoutubeId(url: string){\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n   if (parts[2] === undefined) {\n    return {success: false, id: ''};\n   }\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};\n}\n\ncustomElements.define('gradebook-ui', GradebookUi)\n",
                "languageId": "typescript",
                "version": 1255,
                "state": 1
              }
            ],
            "request": "<file>\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\nimport { matchKey } from \"../key-match/key_match\";\nimport { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";\nimport { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";\nimport { GradebookMgr } from \"./gradebook_mgr\";\nimport { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";\nimport { EphemeralBanner } from \"../ephemeral-banner\";\nimport { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";\nimport { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";\nimport { Time } from \"./models/Time\";\n\n\n// Top-level UI to handle everything\nexport class GradebookUi extends HTMLElement {\n  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;\n\n  private inputStartTime: Time | null = null;\n  private gradebookMgr = new GradebookMgr;\n\n  private matchSheetUi: MatchSheetUi = new MatchSheetUi;\n  private banner: EphemeralBanner = new EphemeralBanner;\n\n  connectedCallback() {\n    this.innerHTML = `Loading project data.`;\n\n    // IFrame steals the focus on click; is polling the best we can do?\n    setInterval(() => {\n      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {\n        const elt = document.activeElement as HTMLIFrameElement;\n        elt.blur();\n      }\n    }, 1000);\n  }\n\n  // Must call this to load the editor\n  async loadOrCreateProjectInUi(id: string) {\n    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);\n\n    this.innerHTML = `\n      <style>\n      #youtube-container{\n        position: sticky;\n        top: 0;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n      <div><button id='add-youtube-btn'>Add youtube video</button></div>\n    `;\n    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;\n    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;\n    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {\n      if (cellLoc.rowIdx < 2) {\n        return;\n      }\n      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;\n      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;\n      this.renderSheet();\n    });\n    this.renderSheet();\n\n    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;\n    this.updateYoutubePlayer();\n\n    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;\n    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();\n    return finalProjectId;\n  }\n\n  getVideoPlayerUi() {\n    return this.youtubePlayerUi\n  }\n  handleKeydown(evt: KeyboardEvent) {\n    this.handleKeydownWithoutChanges(evt);\n    this.handleKeydownWithSheetChanges(evt);\n    console.log(this.gradebookMgr.project.cursor)\n  }\n\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    } else if (matchKey(evt, 'y')) {\n      this.obtainYoutubeUrl();\n    } else if (matchKey(evt, 'z')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);\n    } else if (matchKey(evt, 'x')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(0.2);\n    } else if (matchKey(evt, 'a')) {\n      this.getVideoPlayerUi().resetPlaybackRate();\n    } else if (matchKey(evt, 'l')) {\n      this.getVideoPlayerUi().move(1.5);\n    } else if (matchKey(evt, 'j')) {\n      this.getVideoPlayerUi().move(-3);\n    } else if (matchKey(evt, ';')) {\n      this.getVideoPlayerUi().move(5);\n    } else if (matchKey(evt, 'h')) {\n      this.getVideoPlayerUi().move(-5);\n    } else if (matchKey(evt, 'f')) {\n      const width = this.getVideoPlayerUi().getIframeWidth();\n      let wantWidth = width < 1000 ? width * 4 : width / 4;\n      this.getVideoPlayerUi().setIframeDims(wantWidth);\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  handleKeydownWithSheetChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'up')) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (matchKey(evt, 'down')) {\n      this.gradebookMgr.moveRallyIdx(1);\n    } else if (matchKey(evt, `\\\\`)) {\n      this.tabSelectedCell();\n    } else if (matchKey(evt, `shift+|`)) {\n      this.tabSelectedCell(true);\n    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {\n      this.gradebookMgr.moveColIdx(-1);\n    } else if (matchKey(evt, 'backspace')) {\n      this.gradebookMgr.removeCurrRally();\n    } else if (matchKey(evt, 'cmd+z')) {\n      if (this.inputStartTime) {\n        this.inputStartTime = null;\n      }\n    } else if (matchKey(evt, 'enter')) {\n      this.enterSelectedCell();\n    } else {\n      return;\n    }\n    this.renderSheet();\n    evt.preventDefault();\n  }\n\n  private enterSelectedCell() {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      if (this.inputStartTime) {\n        this.promoteRally();\n        return;\n      }\n      this.updateInputStartTime();\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === START_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.startTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === END_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.endTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === RESULT_COL) {\n      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {\n        this.gradebookMgr.moveColIdx(1);\n      } else {\n        this.gradebookMgr.moveRallyIdx(-1);\n      }\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      const name = prompt(`Enter server's name`);\n      if (name) {\n        if (rally.isMyServe) {\n          this.gradebookMgr.project.matchData.myName = name;\n        } else {\n          this.gradebookMgr.project.matchData.oppoName = name;\n        }\n      }\n    }\n  }\n  private tabSelectedCell(opposite = false) {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === RESULT_COL) {\n      const idx = rallyResultToIndex.get(rally.result);\n      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;\n      const nextIdx = next % rallyResultToIndex.size;\n      rally.result = rallyResultVals[nextIdx];\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      const ratingChange = opposite ? 1 : -1;\n      rally.stat.winnerLastShotQuality = mod(\n        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      const ratingChange = opposite ? -1 : 1;\n      rally.stat.loserPreviousShotQuality = mod(\n        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      rally.isMyServe = !rally.isMyServe;\n    }\n  }\n\n  private renderSheet() {\n    this.matchSheetUi.render(this.genSheet());\n  }\n\n  private obtainYoutubeUrl() {\n    const url = prompt('Enter url');\n    if (!url) {\n      return;\n    }\n    const res = extractYoutubeId(url);\n    if (!res.success) {\n      return;\n    }\n    this.gradebookMgr.project.matchData.urls.push(url);\n    this.updateYoutubePlayer();\n  }\n\n  private updateYoutubePlayer() {\n    if (this.gradebookMgr.project.matchData.urls.length < 1) {\n      return;\n    }\n    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);\n    if (!success) {\n      return;\n    }\n    this.youtubePlayerUi.initYoutubePlayer(id);\n  }\n\n  private getNowMs() {\n    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();\n    return Math.round(nowSec * 1000);\n  }\n\n  private updateInputStartTime() {\n    this.inputStartTime = new Time(this.getNowMs());\n    this.renderSheet();\n  }\n\n  private promoteRally() {\n    // TODO use win based on server\n    if (!this.inputStartTime) {\n      console.warn('cannot promote rally without inputStartTime');\n      return;\n    }\n    const nowMs = this.getNowMs();\n    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;\n    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);\n    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;\n    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;\n    this.gradebookMgr.project.cursor.rallyIdx = 0;\n\n    this.inputStartTime = null;\n    this.renderSheet();\n  }\n\n  private genSheet(): Cell[][] {\n    const project = this.gradebookMgr.project;\n    const cursor = project.cursor;\n    const rows = [];\n    const headerRow = [\n      new Cell('Server'),\n      new Cell('Set'),\n      new Cell('Game Score'),\n\n      new Cell('Start'),\n      new Cell('End'),\n      new Cell('Result'),\n      new Cell(`Winner's`),\n      // new Cell(`Winner's last shot`),\n      new Cell(`Loser's`),\n      // new Cell(`Loser's previous shot`),\n      new Cell('Plot'),\n      new Cell(`Winner's risk level`),\n    ];\n    rows.push(headerRow);\n\n    const myName = project.matchData.myName;\n    const oppoName = project.matchData.oppoName;\n    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();\n    rallyContexts.reverse();\n\n    const cursorAtTop = !this.gradebookMgr.getCurrentRally();\n    const hasInputStartTime = this.inputStartTime !== null;\n    const startTime = hasInputStartTime ?\n      formatSecondsToTimeString(this.inputStartTime!.ms) :\n      `<button id='input-start-time'>(Enter)</button>`;\n    const endTime = hasInputStartTime ?\n      `<button id='input-end-time'>(Enter)</button>` : '';\n    const setupInputStartTimeBtn = () => {\n      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.updateInputStartTime();\n      }\n    };\n    const setupInputEndTimeBtn = () => {\n      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.promoteRally();\n      }\n    };\n\n    // The latest rallyContext should only have score and not a rally.\n    const latestRallyCtx = rallyContexts[0];\n    const score = latestRallyCtx.scoreBeforeRally;\n\n    const row = [\n      new Cell(''),\n      new Cell(latestRallyCtx.toGameScoreStr()),\n      new Cell(score.toPointsStr()),\n\n      new Cell(startTime, makeOpts({\n        setupFunc: setupInputStartTimeBtn,\n        selected: cursorAtTop && !hasInputStartTime,\n      })),\n      new Cell(endTime, makeOpts({\n        setupFunc: setupInputEndTimeBtn,\n        selected: cursorAtTop && hasInputStartTime,\n        \n      })),\n      new Cell(''),\n      new Cell(''),\n      new Cell(''),\n      new Cell(score ? latestRallyCtx.toPlot().text : '', makeOpts({\n        alignRight: !latestRallyCtx.toPlot().isMyPlot})),\n      new Cell(''),\n    ];\n    rows.push(row);\n\n    rallyContexts.slice(1).forEach((rallyCtx, rallyIdx) => {\n      const rally = rallyCtx.rally;\n      const score = rallyCtx.scoreBeforeRally;\n      const rallyIsDoubleFault = rallyCtx.isDoubleFault();\n      const rallyIsPoint = (\n        rallyIsDoubleFault || rally.result === RallyResult.PtServer\n        || rally.result === RallyResult.PtReturner);\n      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||\n        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));\n      const plot = rallyCtx.toPlot();\n      const server = rally.isMyServe ? myName :\n          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;\n      const row = [\n        new Cell(\n          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(formatSecondsToTimeString(rally.startTime.ms)),\n        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),\n        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),\n            makeOpts({alignCenter: true})),\n        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({\n          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        // TODO think of a better way to not special case Converted.\n        // E.g. not rely on rallyIsPoint to filter at all. \n        new Cell(rallyIsPoint || plot.text === 'Converted' ? plot.text : '', makeOpts({\n          alignRight: !plot.isMyPlot, removeTopBorder: !rallyIsPoint})),\n        new Cell(getRiskLevelStr(rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n      ];\n      row.forEach((cell, colIdx) => {\n        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);\n      });\n      rows.push(row);\n    });\n    return rows;\n  }\n}\n\nfunction mod(x = 0, y = 1) {\n  const res = x % y;\n  if (res < 0) {\n    return res + y;\n  }\n  return res;\n}\n\nfunction formatSecondsToTimeString(numMs: number): string {\n  const numSecs = Math.round(numMs / 1000)\n  const hours = Math.floor(numSecs / 3600);\n  const minutes = Math.floor((numSecs % 3600) / 60);\n  const seconds = numSecs % 60;\n\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n  const formattedSeconds = seconds.toString().padStart(2, '0');\n\n  if (hours === 0) {\n    return `${formattedMinutes}:${formattedSeconds}`;\n  } else {\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n\n// https://stackoverflow.com/a/54200105\nfunction extractYoutubeId(url: string){\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n   if (parts[2] === undefined) {\n    return {success: false, id: ''};\n   }\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};\n}\n\ncustomElements.define('gradebook-ui', GradebookUi)\n```\n</file>\n\n<reminder>\nAvoid repeating existing code, instead use `// ...existing code...` comments to represent regions of unchanged code.\nEach file's code block must start with a comment containing the filepath. This includes Markdown files.\n</reminder>\n<prompt>\nPut a menu button on the side of the youtube-container\n</prompt>",
            "response": "I'll help you add a menu button to the side of the youtube container. Here's how we'll do it:\n\n1. Add CSS to position the menu button\n2. Add the menu button HTML element\n3. Style it with a simple hamburger icon\n\n### /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n\nAdd menu button HTML and CSS to the template literal in loadOrCreateProjectInUi:\n\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n// ...existing code...\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <button id='menu-button'>â˜°</button>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n      <div><button id='add-youtube-btn'>Add youtube video</button></div>\n    `;\n// ...existing code...\n```\n\nThe changes position the menu button to the right of the YouTube player using flexbox. You can add click handlers and menu functionality by accessing the button with `querySelector('#menu-button')` if needed."
          },
          "codeBlocks": [
            {
              "code": "// ...existing code...\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <button id='menu-button'>â˜°</button>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n      <div><button id='add-youtube-btn'>Add youtube video</button></div>\n    `;\n// ...existing code...\n",
              "resource": {
                "$mid": 1,
                "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "scheme": "file"
              },
              "language": "typescript",
              "markdownBeforeBlock": "I'll help you add a menu button to the side of the youtube container. Here's how we'll do it:\n\n1. Add CSS to position the menu button\n2. Add the menu button HTML element\n3. Style it with a simple hamburger icon\n\n### [gradebook_ui.ts](file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts)\n\nAdd menu button HTML and CSS to the template literal in loadOrCreateProjectInUi:\n\n"
            }
          ],
          "messages": [
            {
              "role": "user",
              "content": "Put a menu button on the side of the youtube-container"
            },
            {
              "role": "assistant",
              "content": "I'll help you add a menu button to the side of the youtube container. Here's how we'll do it:\n\n1. Add CSS to position the menu button\n2. Add the menu button HTML element\n3. Style it with a simple hamburger icon\n\n### /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n\nAdd menu button HTML and CSS to the template literal in loadOrCreateProjectInUi:\n\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n// ...existing code...\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <button id='menu-button'>â˜°</button>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n      <div><button id='add-youtube-btn'>Add youtube video</button></div>\n    `;\n// ...existing code...\n```\n\nThe changes position the menu button to the right of the YouTube player using flexbox. You can add click handlers and menu functionality by accessing the button with `querySelector('#menu-button')` if needed."
            }
          ],
          "modelMessageId": "2a44f3d2-34ea-455d-b575-56b1ad1c51d8",
          "responseId": "ed597a0b-ae5c-4f4a-b2f2-bdd62243a57c",
          "sessionId": "9ebcb46b-2747-4861-8196-e4505dcab712",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "workingSet": [
        {
          "$mid": 1,
          "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "scheme": "file"
        }
      ],
      "contentReferences": [],
      "codeCitations": [],
      "timestamp": 1735659135546
    },
    {
      "requestId": "request_804fb0ec-886c-4a25-b4ec-2a1384e2b6bf",
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 112
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 113
            },
            "text": "Move the \"Add youtube video button\" into the Menu list, so that it will be shown when I hover on the menu button",
            "kind": "text"
          }
        ],
        "text": "Move the \"Add youtube video button\" into the Menu list, so that it will be shown when I hover on the menu button"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "scheme": "file"
            },
            "id": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "name": "gradebook_ui.ts",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "Here's how we'll modify the code to create a hover menu:\n\n1. Add a menu container div that appears on hover\n2. Move the \"Add youtube video\" button into this menu\n3. Add CSS for the hover menu styling\n\n### [gradebook_ui.ts](file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts)\n\nUpdate the HTML structure and CSS in the loadOrCreateProjectInUi method:\n\n```typescript\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "scheme": "file"
          }
        },
        {
          "value": "// ...existing code...\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      .menu-container {\n        position: relative;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      .menu-content {\n        display: none;\n        position: absolute;\n        right: 0;\n        background-color: white;\n        min-width: 160px;\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n        z-index: 1;\n        border-radius: 4px;\n      }\n      .menu-container:hover .menu-content {\n        display: block;\n      }\n      .menu-content button {\n        width: 100%;\n        padding: 12px 16px;\n        border: none;\n        background: none;\n        text-align: left;\n        cursor: pointer;\n      }\n      .menu-content button:hover {\n        background-color: #f1f1f1;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <div class=\"menu-container\">\n          <button id='menu-button'>â˜°</button>\n          <div class=\"menu-content\">\n            <button id='add-youtube-btn'>Add youtube video</button>\n          </div>\n        </div>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n    `;\n// ...existing code...\n```\n\nThis creates a hoverable menu button that reveals the \"Add youtube video\" option when hovered over. The button remains functional as before but is now part of a dropdown menu interface.",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "scheme": "file"
          },
          "edits": [
            [],
            [
              {
                "text": "import { matchKey } from \"../key-match/key_match\";",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { GradebookMgr } from \"./gradebook_mgr\";",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { EphemeralBanner } from \"../ephemeral-banner\";",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { Time } from \"./models/Time\";",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "// Top-level UI to handle everything",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "export class GradebookUi extends HTMLElement {",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private inputStartTime: Time | null = null;",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private gradebookMgr = new GradebookMgr;",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private matchSheetUi: MatchSheetUi = new MatchSheetUi;",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private banner: EphemeralBanner = new EphemeralBanner;",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  connectedCallback() {",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.innerHTML = `Loading project data.`;",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // IFrame steals the focus on click; is polling the best we can do?",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    setInterval(() => {",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        const elt = document.activeElement as HTMLIFrameElement;",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        elt.blur();",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }, 1000);",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  // Must call this to load the editor",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  async loadOrCreateProjectInUi(id: string) {",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.innerHTML = `",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <style>",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      #youtube-container {",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: sticky;",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        top: 0;",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: flex;",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        align-items: flex-start;",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-container {",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: relative;",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      #menu-button {",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background: none;",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border: none;",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        font-size: 24px;",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        padding: 10px;",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cursor: pointer;",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        margin-left: 10px;",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-content {",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: none;",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: absolute;",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        right: 0;",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background-color: white;",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        min-width: 160px;",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        z-index: 1;",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border-radius: 4px;",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-container:hover .menu-content {",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: block;",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-content button {",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        width: 100%;",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        padding: 12px 16px;",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border: none;",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background: none;",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        text-align: left;",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cursor: pointer;",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-content button:hover {",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background-color: #f1f1f1;",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      </style>",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <ephemeral-banner></ephemeral-banner>",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <div id='youtube-container'>",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        <youtube-player-ui></youtube-player-ui>",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        <div class=\"menu-container\">",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          <button id='menu-button'>â˜°</button>",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          <div class=\"menu-content\">",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            <button id='add-youtube-btn'>Add youtube video</button>",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          </div>",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        </div>",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      </div>",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <div><match-sheet-ui></match-sheet-ui></div>",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    `;",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (cellLoc.rowIdx < 2) {",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return;",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.renderSheet();",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.updateYoutubePlayer();",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return finalProjectId;",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  getVideoPlayerUi() {",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return this.youtubePlayerUi",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  handleKeydown(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.handleKeydownWithoutChanges(evt);",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.handleKeydownWithSheetChanges(evt);",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    console.log(this.gradebookMgr.project.cursor)",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  async handleKeydownWithoutChanges(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().toggleVideoPlay();",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'y')) {",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.obtainYoutubeUrl();",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'z')) {",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'x')) {",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().incrementPlaybackRate(0.2);",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'a')) {",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().resetPlaybackRate();",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'l')) {",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(1.5);",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'j')) {",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(-3);",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, ';')) {",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(5);",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'h')) {",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(-5);",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'f')) {",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const width = this.getVideoPlayerUi().getIframeWidth();",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      let wantWidth = width < 1000 ? width * 4 : width / 4;",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().setIframeDims(wantWidth);",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+s')) {",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      evt.preventDefault();",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.banner.inProgress('Saving');",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const failureMsg = await this.gradebookMgr.save();",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (failureMsg) {",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.banner.failure(failureMsg);",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.banner.success('Saved!');",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    evt.preventDefault();",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  handleKeydownWithSheetChanges(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (matchKey(evt, 'up')) {",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'down')) {",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(1);",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, `\\\\`)) {",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.tabSelectedCell();",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, `shift+|`)) {",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.tabSelectedCell(true);",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(-1);",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'backspace')) {",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.removeCurrRally();",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+z')) {",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (this.inputStartTime) {",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.inputStartTime = null;",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'enter')) {",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.enterSelectedCell();",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    evt.preventDefault();",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private enterSelectedCell() {",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rally = this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!rally) {",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (this.inputStartTime) {",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.promoteRally();",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return;",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.updateInputStartTime();",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = this.gradebookMgr.project.cursor;",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (cursor.colIdx === START_TIME_COL) {",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.youtubePlayerUi.moveTo(rally.startTime.ms);",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === END_TIME_COL) {",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.youtubePlayerUi.moveTo(rally.endTime.ms);",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === RESULT_COL) {",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === SERVER_COL) {",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const name = prompt(`Enter server's name`);",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (name) {",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if (rally.isMyServe) {",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          this.gradebookMgr.project.matchData.myName = name;",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        } else {",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          this.gradebookMgr.project.matchData.oppoName = name;",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private tabSelectedCell(opposite = false) {",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rally = this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!rally) {",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = this.gradebookMgr.project.cursor;",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (cursor.colIdx === RESULT_COL) {",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const idx = rallyResultToIndex.get(rally.result);",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const nextIdx = next % rallyResultToIndex.size;",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1,
                  "endLineNumber": 236,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.result = rallyResultVals[nextIdx];",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1,
                  "endLineNumber": 237,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1,
                  "endLineNumber": 238,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const ratingChange = opposite ? 1 : -1;",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1,
                  "endLineNumber": 239,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.stat.winnerLastShotQuality = mod(",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1,
                  "endLineNumber": 240,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1,
                  "endLineNumber": 241,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1,
                  "endLineNumber": 242,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const ratingChange = opposite ? -1 : 1;",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1,
                  "endLineNumber": 243,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.stat.loserPreviousShotQuality = mod(",
                "range": {
                  "startLineNumber": 244,
                  "startColumn": 1,
                  "endLineNumber": 244,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);",
                "range": {
                  "startLineNumber": 245,
                  "startColumn": 1,
                  "endLineNumber": 245,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === SERVER_COL) {",
                "range": {
                  "startLineNumber": 246,
                  "startColumn": 1,
                  "endLineNumber": 246,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.isMyServe = !rally.isMyServe;",
                "range": {
                  "startLineNumber": 247,
                  "startColumn": 1,
                  "endLineNumber": 247,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 248,
                  "startColumn": 1,
                  "endLineNumber": 248,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 249,
                  "startColumn": 1,
                  "endLineNumber": 249,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 250,
                  "startColumn": 1,
                  "endLineNumber": 250,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private renderSheet() {",
                "range": {
                  "startLineNumber": 251,
                  "startColumn": 1,
                  "endLineNumber": 251,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi.render(this.genSheet());",
                "range": {
                  "startLineNumber": 252,
                  "startColumn": 1,
                  "endLineNumber": 252,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 253,
                  "startColumn": 1,
                  "endLineNumber": 253,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 254,
                  "startColumn": 1,
                  "endLineNumber": 254,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private obtainYoutubeUrl() {",
                "range": {
                  "startLineNumber": 255,
                  "startColumn": 1,
                  "endLineNumber": 255,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const url = prompt('Enter url');",
                "range": {
                  "startLineNumber": 256,
                  "startColumn": 1,
                  "endLineNumber": 256,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!url) {",
                "range": {
                  "startLineNumber": 257,
                  "startColumn": 1,
                  "endLineNumber": 257,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 258,
                  "startColumn": 1,
                  "endLineNumber": 258,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 259,
                  "startColumn": 1,
                  "endLineNumber": 259,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const res = extractYoutubeId(url);",
                "range": {
                  "startLineNumber": 260,
                  "startColumn": 1,
                  "endLineNumber": 260,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!res.success) {",
                "range": {
                  "startLineNumber": 261,
                  "startColumn": 1,
                  "endLineNumber": 261,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 262,
                  "startColumn": 1,
                  "endLineNumber": 262,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 263,
                  "startColumn": 1,
                  "endLineNumber": 263,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.matchData.urls.push(url);",
                "range": {
                  "startLineNumber": 264,
                  "startColumn": 1,
                  "endLineNumber": 264,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.updateYoutubePlayer();",
                "range": {
                  "startLineNumber": 265,
                  "startColumn": 1,
                  "endLineNumber": 265,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 266,
                  "startColumn": 1,
                  "endLineNumber": 266,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 267,
                  "startColumn": 1,
                  "endLineNumber": 267,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private updateYoutubePlayer() {",
                "range": {
                  "startLineNumber": 268,
                  "startColumn": 1,
                  "endLineNumber": 268,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (this.gradebookMgr.project.matchData.urls.length < 1) {",
                "range": {
                  "startLineNumber": 269,
                  "startColumn": 1,
                  "endLineNumber": 269,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 270,
                  "startColumn": 1,
                  "endLineNumber": 270,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 271,
                  "startColumn": 1,
                  "endLineNumber": 271,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);",
                "range": {
                  "startLineNumber": 272,
                  "startColumn": 1,
                  "endLineNumber": 272,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!success) {",
                "range": {
                  "startLineNumber": 273,
                  "startColumn": 1,
                  "endLineNumber": 273,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 274,
                  "startColumn": 1,
                  "endLineNumber": 274,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 275,
                  "startColumn": 1,
                  "endLineNumber": 275,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.youtubePlayerUi.initYoutubePlayer(id);",
                "range": {
                  "startLineNumber": 276,
                  "startColumn": 1,
                  "endLineNumber": 276,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 277,
                  "startColumn": 1,
                  "endLineNumber": 277,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 278,
                  "startColumn": 1,
                  "endLineNumber": 278,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private getNowMs() {",
                "range": {
                  "startLineNumber": 279,
                  "startColumn": 1,
                  "endLineNumber": 279,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();",
                "range": {
                  "startLineNumber": 280,
                  "startColumn": 1,
                  "endLineNumber": 280,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return Math.round(nowSec * 1000);",
                "range": {
                  "startLineNumber": 281,
                  "startColumn": 1,
                  "endLineNumber": 281,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 282,
                  "startColumn": 1,
                  "endLineNumber": 282,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 283,
                  "startColumn": 1,
                  "endLineNumber": 283,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private updateInputStartTime() {",
                "range": {
                  "startLineNumber": 284,
                  "startColumn": 1,
                  "endLineNumber": 284,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.inputStartTime = new Time(this.getNowMs());",
                "range": {
                  "startLineNumber": 285,
                  "startColumn": 1,
                  "endLineNumber": 285,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 286,
                  "startColumn": 1,
                  "endLineNumber": 286,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 287,
                  "startColumn": 1,
                  "endLineNumber": 287,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 288,
                  "startColumn": 1,
                  "endLineNumber": 288,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private promoteRally() {",
                "range": {
                  "startLineNumber": 289,
                  "startColumn": 1,
                  "endLineNumber": 289,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // TODO use win based on server",
                "range": {
                  "startLineNumber": 290,
                  "startColumn": 1,
                  "endLineNumber": 290,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!this.inputStartTime) {",
                "range": {
                  "startLineNumber": 291,
                  "startColumn": 1,
                  "endLineNumber": 291,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      console.warn('cannot promote rally without inputStartTime');",
                "range": {
                  "startLineNumber": 292,
                  "startColumn": 1,
                  "endLineNumber": 292,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 293,
                  "startColumn": 1,
                  "endLineNumber": 293,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 294,
                  "startColumn": 1,
                  "endLineNumber": 294,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const nowMs = this.getNowMs();",
                "range": {
                  "startLineNumber": 295,
                  "startColumn": 1,
                  "endLineNumber": 295,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;",
                "range": {
                  "startLineNumber": 296,
                  "startColumn": 1,
                  "endLineNumber": 296,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);",
                "range": {
                  "startLineNumber": 297,
                  "startColumn": 1,
                  "endLineNumber": 297,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;",
                "range": {
                  "startLineNumber": 298,
                  "startColumn": 1,
                  "endLineNumber": 298,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;",
                "range": {
                  "startLineNumber": 299,
                  "startColumn": 1,
                  "endLineNumber": 299,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.rallyIdx = 0;",
                "range": {
                  "startLineNumber": 300,
                  "startColumn": 1,
                  "endLineNumber": 300,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 301,
                  "startColumn": 1,
                  "endLineNumber": 301,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.inputStartTime = null;",
                "range": {
                  "startLineNumber": 302,
                  "startColumn": 1,
                  "endLineNumber": 302,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 303,
                  "startColumn": 1,
                  "endLineNumber": 303,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 304,
                  "startColumn": 1,
                  "endLineNumber": 304,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 305,
                  "startColumn": 1,
                  "endLineNumber": 305,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private genSheet(): Cell[][] {",
                "range": {
                  "startLineNumber": 306,
                  "startColumn": 1,
                  "endLineNumber": 306,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const project = this.gradebookMgr.project;",
                "range": {
                  "startLineNumber": 307,
                  "startColumn": 1,
                  "endLineNumber": 307,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = project.cursor;",
                "range": {
                  "startLineNumber": 308,
                  "startColumn": 1,
                  "endLineNumber": 308,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rows = [];",
                "range": {
                  "startLineNumber": 309,
                  "startColumn": 1,
                  "endLineNumber": 309,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const headerRow = [",
                "range": {
                  "startLineNumber": 310,
                  "startColumn": 1,
                  "endLineNumber": 310,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Server'),",
                "range": {
                  "startLineNumber": 311,
                  "startColumn": 1,
                  "endLineNumber": 311,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Set'),",
                "range": {
                  "startLineNumber": 312,
                  "startColumn": 1,
                  "endLineNumber": 312,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Game Score'),",
                "range": {
                  "startLineNumber": 313,
                  "startColumn": 1,
                  "endLineNumber": 313,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 314,
                  "startColumn": 1,
                  "endLineNumber": 314,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Start'),",
                "range": {
                  "startLineNumber": 315,
                  "startColumn": 1,
                  "endLineNumber": 315,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('End'),",
                "range": {
                  "startLineNumber": 316,
                  "startColumn": 1,
                  "endLineNumber": 316,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Result'),",
                "range": {
                  "startLineNumber": 317,
                  "startColumn": 1,
                  "endLineNumber": 317,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Winner's`),",
                "range": {
                  "startLineNumber": 318,
                  "startColumn": 1,
                  "endLineNumber": 318,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      // new Cell(`Winner's last shot`),",
                "range": {
                  "startLineNumber": 319,
                  "startColumn": 1,
                  "endLineNumber": 319,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Loser's`),",
                "range": {
                  "startLineNumber": 320,
                  "startColumn": 1,
                  "endLineNumber": 320,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      // new Cell(`Loser's previous shot`),",
                "range": {
                  "startLineNumber": 321,
                  "startColumn": 1,
                  "endLineNumber": 321,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Plot'),",
                "range": {
                  "startLineNumber": 322,
                  "startColumn": 1,
                  "endLineNumber": 322,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Winner's risk level`),",
                "range": {
                  "startLineNumber": 323,
                  "startColumn": 1,
                  "endLineNumber": 323,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ];",
                "range": {
                  "startLineNumber": 324,
                  "startColumn": 1,
                  "endLineNumber": 324,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rows.push(headerRow);",
                "range": {
                  "startLineNumber": 325,
                  "startColumn": 1,
                  "endLineNumber": 325,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 326,
                  "startColumn": 1,
                  "endLineNumber": 326,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const myName = project.matchData.myName;",
                "range": {
                  "startLineNumber": 327,
                  "startColumn": 1,
                  "endLineNumber": 327,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const oppoName = project.matchData.oppoName;",
                "range": {
                  "startLineNumber": 328,
                  "startColumn": 1,
                  "endLineNumber": 328,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();",
                "range": {
                  "startLineNumber": 329,
                  "startColumn": 1,
                  "endLineNumber": 329,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rallyContexts.reverse();",
                "range": {
                  "startLineNumber": 330,
                  "startColumn": 1,
                  "endLineNumber": 330,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 331,
                  "startColumn": 1,
                  "endLineNumber": 331,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursorAtTop = !this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 332,
                  "startColumn": 1,
                  "endLineNumber": 332,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const hasInputStartTime = this.inputStartTime !== null;",
                "range": {
                  "startLineNumber": 333,
                  "startColumn": 1,
                  "endLineNumber": 333,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const startTime = hasInputStartTime ?",
                "range": {
                  "startLineNumber": 334,
                  "startColumn": 1,
                  "endLineNumber": 334,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      formatSecondsToTimeString(this.inputStartTime!.ms) :",
                "range": {
                  "startLineNumber": 335,
                  "startColumn": 1,
                  "endLineNumber": 335,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      `<button id='input-start-time'>(Enter)</button>`;",
                "range": {
                  "startLineNumber": 336,
                  "startColumn": 1,
                  "endLineNumber": 336,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const endTime = hasInputStartTime ?",
                "range": {
                  "startLineNumber": 337,
                  "startColumn": 1,
                  "endLineNumber": 337,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      `<button id='input-end-time'>(Enter)</button>` : '';",
                "range": {
                  "startLineNumber": 338,
                  "startColumn": 1,
                  "endLineNumber": 338,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const setupInputStartTimeBtn = () => {",
                "range": {
                  "startLineNumber": 339,
                  "startColumn": 1,
                  "endLineNumber": 339,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 340,
                  "startColumn": 1,
                  "endLineNumber": 340,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (btn) {",
                "range": {
                  "startLineNumber": 341,
                  "startColumn": 1,
                  "endLineNumber": 341,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        btn.onclick = () => this.updateInputStartTime();",
                "range": {
                  "startLineNumber": 342,
                  "startColumn": 1,
                  "endLineNumber": 342,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 343,
                  "startColumn": 1,
                  "endLineNumber": 343,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    };",
                "range": {
                  "startLineNumber": 344,
                  "startColumn": 1,
                  "endLineNumber": 344,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const setupInputEndTimeBtn = () => {",
                "range": {
                  "startLineNumber": 345,
                  "startColumn": 1,
                  "endLineNumber": 345,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 346,
                  "startColumn": 1,
                  "endLineNumber": 346,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (btn) {",
                "range": {
                  "startLineNumber": 347,
                  "startColumn": 1,
                  "endLineNumber": 347,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        btn.onclick = () => this.promoteRally();",
                "range": {
                  "startLineNumber": 348,
                  "startColumn": 1,
                  "endLineNumber": 348,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 349,
                  "startColumn": 1,
                  "endLineNumber": 349,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    };",
                "range": {
                  "startLineNumber": 350,
                  "startColumn": 1,
                  "endLineNumber": 350,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 351,
                  "startColumn": 1,
                  "endLineNumber": 351,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // The latest rallyContext should only have score and not a rally.",
                "range": {
                  "startLineNumber": 352,
                  "startColumn": 1,
                  "endLineNumber": 352,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const latestRallyCtx = rallyContexts[0];",
                "range": {
                  "startLineNumber": 353,
                  "startColumn": 1,
                  "endLineNumber": 353,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const score = latestRallyCtx.scoreBeforeRally;",
                "range": {
                  "startLineNumber": 354,
                  "startColumn": 1,
                  "endLineNumber": 354,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 355,
                  "startColumn": 1,
                  "endLineNumber": 355,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const row = [",
                "range": {
                  "startLineNumber": 356,
                  "startColumn": 1,
                  "endLineNumber": 356,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 357,
                  "startColumn": 1,
                  "endLineNumber": 357,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(latestRallyCtx.toGameScoreStr()),",
                "range": {
                  "startLineNumber": 358,
                  "startColumn": 1,
                  "endLineNumber": 358,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(score.toPointsStr()),",
                "range": {
                  "startLineNumber": 359,
                  "startColumn": 1,
                  "endLineNumber": 359,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 360,
                  "startColumn": 1,
                  "endLineNumber": 360,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(startTime, makeOpts({",
                "range": {
                  "startLineNumber": 361,
                  "startColumn": 1,
                  "endLineNumber": 361,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        setupFunc: setupInputStartTimeBtn,",
                "range": {
                  "startLineNumber": 362,
                  "startColumn": 1,
                  "endLineNumber": 362,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        selected: cursorAtTop && !hasInputStartTime,",
                "range": {
                  "startLineNumber": 363,
                  "startColumn": 1,
                  "endLineNumber": 363,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      })),",
                "range": {
                  "startLineNumber": 364,
                  "startColumn": 1,
                  "endLineNumber": 364,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(endTime, makeOpts({",
                "range": {
                  "startLineNumber": 365,
                  "startColumn": 1,
                  "endLineNumber": 365,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        setupFunc: setupInputEndTimeBtn,",
                "range": {
                  "startLineNumber": 366,
                  "startColumn": 1,
                  "endLineNumber": 366,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        selected: cursorAtTop && hasInputStartTime,",
                "range": {
                  "startLineNumber": 367,
                  "startColumn": 1,
                  "endLineNumber": 367,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 368,
                  "startColumn": 1,
                  "endLineNumber": 368,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      })),",
                "range": {
                  "startLineNumber": 369,
                  "startColumn": 1,
                  "endLineNumber": 369,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 370,
                  "startColumn": 1,
                  "endLineNumber": 370,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 371,
                  "startColumn": 1,
                  "endLineNumber": 371,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 372,
                  "startColumn": 1,
                  "endLineNumber": 372,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(score ? latestRallyCtx.toPlot().text : '', makeOpts({",
                "range": {
                  "startLineNumber": 373,
                  "startColumn": 1,
                  "endLineNumber": 373,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !latestRallyCtx.toPlot().isMyPlot})),",
                "range": {
                  "startLineNumber": 374,
                  "startColumn": 1,
                  "endLineNumber": 374,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 375,
                  "startColumn": 1,
                  "endLineNumber": 375,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ];",
                "range": {
                  "startLineNumber": 376,
                  "startColumn": 1,
                  "endLineNumber": 376,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rows.push(row);",
                "range": {
                  "startLineNumber": 377,
                  "startColumn": 1,
                  "endLineNumber": 377,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 378,
                  "startColumn": 1,
                  "endLineNumber": 378,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rallyContexts.slice(1).forEach((rallyCtx, rallyIdx) => {",
                "range": {
                  "startLineNumber": 379,
                  "startColumn": 1,
                  "endLineNumber": 379,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rally = rallyCtx.rally;",
                "range": {
                  "startLineNumber": 380,
                  "startColumn": 1,
                  "endLineNumber": 380,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const score = rallyCtx.scoreBeforeRally;",
                "range": {
                  "startLineNumber": 381,
                  "startColumn": 1,
                  "endLineNumber": 381,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rallyIsDoubleFault = rallyCtx.isDoubleFault();",
                "range": {
                  "startLineNumber": 382,
                  "startColumn": 1,
                  "endLineNumber": 382,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rallyIsPoint = (",
                "range": {
                  "startLineNumber": 383,
                  "startColumn": 1,
                  "endLineNumber": 383,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rallyIsDoubleFault || rally.result === RallyResult.PtServer",
                "range": {
                  "startLineNumber": 384,
                  "startColumn": 1,
                  "endLineNumber": 384,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        || rally.result === RallyResult.PtReturner);",
                "range": {
                  "startLineNumber": 385,
                  "startColumn": 1,
                  "endLineNumber": 385,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||",
                "range": {
                  "startLineNumber": 386,
                  "startColumn": 1,
                  "endLineNumber": 386,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));",
                "range": {
                  "startLineNumber": 387,
                  "startColumn": 1,
                  "endLineNumber": 387,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const plot = rallyCtx.toPlot();",
                "range": {
                  "startLineNumber": 388,
                  "startColumn": 1,
                  "endLineNumber": 388,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const server = rally.isMyServe ? myName :",
                "range": {
                  "startLineNumber": 389,
                  "startColumn": 1,
                  "endLineNumber": 389,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;",
                "range": {
                  "startLineNumber": 390,
                  "startColumn": 1,
                  "endLineNumber": 390,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const row = [",
                "range": {
                  "startLineNumber": 391,
                  "startColumn": 1,
                  "endLineNumber": 391,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(",
                "range": {
                  "startLineNumber": 392,
                  "startColumn": 1,
                  "endLineNumber": 392,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 393,
                  "startColumn": 1,
                  "endLineNumber": 393,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 394,
                  "startColumn": 1,
                  "endLineNumber": 394,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 395,
                  "startColumn": 1,
                  "endLineNumber": 395,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(formatSecondsToTimeString(rally.startTime.ms)),",
                "range": {
                  "startLineNumber": 396,
                  "startColumn": 1,
                  "endLineNumber": 396,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),",
                "range": {
                  "startLineNumber": 397,
                  "startColumn": 1,
                  "endLineNumber": 397,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),",
                "range": {
                  "startLineNumber": 398,
                  "startColumn": 1,
                  "endLineNumber": 398,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            makeOpts({alignCenter: true})),",
                "range": {
                  "startLineNumber": 399,
                  "startColumn": 1,
                  "endLineNumber": 399,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 400,
                  "startColumn": 1,
                  "endLineNumber": 400,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 401,
                  "startColumn": 1,
                  "endLineNumber": 401,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 402,
                  "startColumn": 1,
                  "endLineNumber": 402,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 403,
                  "startColumn": 1,
                  "endLineNumber": 403,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        // TODO think of a better way to not special case Converted.",
                "range": {
                  "startLineNumber": 404,
                  "startColumn": 1,
                  "endLineNumber": 404,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        // E.g. not rely on rallyIsPoint to filter at all. ",
                "range": {
                  "startLineNumber": 405,
                  "startColumn": 1,
                  "endLineNumber": 405,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyIsPoint || plot.text === 'Converted' ? plot.text : '', makeOpts({",
                "range": {
                  "startLineNumber": 406,
                  "startColumn": 1,
                  "endLineNumber": 406,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          alignRight: !plot.isMyPlot, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 407,
                  "startColumn": 1,
                  "endLineNumber": 407,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getRiskLevelStr(rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 408,
                  "startColumn": 1,
                  "endLineNumber": 408,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 409,
                  "startColumn": 1,
                  "endLineNumber": 409,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      ];",
                "range": {
                  "startLineNumber": 410,
                  "startColumn": 1,
                  "endLineNumber": 410,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      row.forEach((cell, colIdx) => {",
                "range": {
                  "startLineNumber": 411,
                  "startColumn": 1,
                  "endLineNumber": 411,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);",
                "range": {
                  "startLineNumber": 412,
                  "startColumn": 1,
                  "endLineNumber": 412,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 413,
                  "startColumn": 1,
                  "endLineNumber": 413,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rows.push(row);",
                "range": {
                  "startLineNumber": 414,
                  "startColumn": 1,
                  "endLineNumber": 414,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 415,
                  "startColumn": 1,
                  "endLineNumber": 415,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return rows;",
                "range": {
                  "startLineNumber": 416,
                  "startColumn": 1,
                  "endLineNumber": 416,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 417,
                  "startColumn": 1,
                  "endLineNumber": 417,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 418,
                  "startColumn": 1,
                  "endLineNumber": 418,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 419,
                  "startColumn": 1,
                  "endLineNumber": 419,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "function mod(x = 0, y = 1) {",
                "range": {
                  "startLineNumber": 420,
                  "startColumn": 1,
                  "endLineNumber": 420,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const res = x % y;",
                "range": {
                  "startLineNumber": 421,
                  "startColumn": 1,
                  "endLineNumber": 421,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  if (res < 0) {",
                "range": {
                  "startLineNumber": 422,
                  "startColumn": 1,
                  "endLineNumber": 422,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return res + y;",
                "range": {
                  "startLineNumber": 423,
                  "startColumn": 1,
                  "endLineNumber": 423,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 424,
                  "startColumn": 1,
                  "endLineNumber": 424,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  return res;",
                "range": {
                  "startLineNumber": 425,
                  "startColumn": 1073741825,
                  "endLineNumber": 425,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n}",
                "range": {
                  "startLineNumber": 426,
                  "startColumn": 1073741825,
                  "endLineNumber": 426,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 427,
                  "startColumn": 1073741825,
                  "endLineNumber": 427,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nfunction formatSecondsToTimeString(numMs: number): string {",
                "range": {
                  "startLineNumber": 428,
                  "startColumn": 1073741825,
                  "endLineNumber": 428,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  const numSecs = Math.round(numMs / 1000)",
                "range": {
                  "startLineNumber": 429,
                  "startColumn": 1073741825,
                  "endLineNumber": 429,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  const hours = Math.floor(numSecs / 3600);",
                "range": {
                  "startLineNumber": 430,
                  "startColumn": 1073741825,
                  "endLineNumber": 430,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  const minutes = Math.floor((numSecs % 3600) / 60);",
                "range": {
                  "startLineNumber": 431,
                  "startColumn": 1073741825,
                  "endLineNumber": 431,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  const seconds = numSecs % 60;",
                "range": {
                  "startLineNumber": 432,
                  "startColumn": 1073741825,
                  "endLineNumber": 432,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 433,
                  "startColumn": 1073741825,
                  "endLineNumber": 433,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  const formattedHours = hours.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 434,
                  "startColumn": 1073741825,
                  "endLineNumber": 434,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  const formattedMinutes = minutes.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 435,
                  "startColumn": 1073741825,
                  "endLineNumber": 435,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  const formattedSeconds = seconds.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 436,
                  "startColumn": 1073741825,
                  "endLineNumber": 436,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 437,
                  "startColumn": 1073741825,
                  "endLineNumber": 437,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  if (hours === 0) {",
                "range": {
                  "startLineNumber": 438,
                  "startColumn": 1073741825,
                  "endLineNumber": 438,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    return `${formattedMinutes}:${formattedSeconds}`;",
                "range": {
                  "startLineNumber": 439,
                  "startColumn": 1073741825,
                  "endLineNumber": 439,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  } else {",
                "range": {
                  "startLineNumber": 440,
                  "startColumn": 1073741825,
                  "endLineNumber": 440,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;",
                "range": {
                  "startLineNumber": 441,
                  "startColumn": 1073741825,
                  "endLineNumber": 441,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  }",
                "range": {
                  "startLineNumber": 442,
                  "startColumn": 1073741825,
                  "endLineNumber": 442,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n}",
                "range": {
                  "startLineNumber": 443,
                  "startColumn": 1073741825,
                  "endLineNumber": 443,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 444,
                  "startColumn": 1073741825,
                  "endLineNumber": 444,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n// https://stackoverflow.com/a/54200105",
                "range": {
                  "startLineNumber": 445,
                  "startColumn": 1073741825,
                  "endLineNumber": 445,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nfunction extractYoutubeId(url: string){",
                "range": {
                  "startLineNumber": 446,
                  "startColumn": 1073741825,
                  "endLineNumber": 446,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);",
                "range": {
                  "startLineNumber": 447,
                  "startColumn": 1073741825,
                  "endLineNumber": 447,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n   if (parts[2] === undefined) {",
                "range": {
                  "startLineNumber": 448,
                  "startColumn": 1073741825,
                  "endLineNumber": 448,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    return {success: false, id: ''};",
                "range": {
                  "startLineNumber": 449,
                  "startColumn": 1073741825,
                  "endLineNumber": 449,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n   }",
                "range": {
                  "startLineNumber": 450,
                  "startColumn": 1073741825,
                  "endLineNumber": 450,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};",
                "range": {
                  "startLineNumber": 451,
                  "startColumn": 1073741825,
                  "endLineNumber": 451,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n}",
                "range": {
                  "startLineNumber": 452,
                  "startColumn": 1073741825,
                  "endLineNumber": 452,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 453,
                  "startColumn": 1073741825,
                  "endLineNumber": 453,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\ncustomElements.define('gradebook-ui', GradebookUi)",
                "range": {
                  "startLineNumber": 454,
                  "startColumn": 1073741825,
                  "endLineNumber": 454,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 455,
                  "startColumn": 1073741825,
                  "endLineNumber": 455,
                  "endColumn": 1073741825
                }
              }
            ],
            []
          ],
          "done": true
        }
      ],
      "responseId": "response_0ca69390-7a18-4b1c-8e70-5f5339c4b38b",
      "isHidden": false,
      "result": {
        "timings": {
          "firstProgress": 7412,
          "totalElapsed": 36173
        },
        "metadata": {
          "edits": {
            "workingSet": [
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "scheme": "file"
                },
                "text": "import { matchKey } from \"../key-match/key_match\";\nimport { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";\nimport { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";\nimport { GradebookMgr } from \"./gradebook_mgr\";\nimport { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";\nimport { EphemeralBanner } from \"../ephemeral-banner\";\nimport { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";\nimport { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";\nimport { Time } from \"./models/Time\";\n\n\n// Top-level UI to handle everything\nexport class GradebookUi extends HTMLElement {\n  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;\n\n  private inputStartTime: Time | null = null;\n  private gradebookMgr = new GradebookMgr;\n\n  private matchSheetUi: MatchSheetUi = new MatchSheetUi;\n  private banner: EphemeralBanner = new EphemeralBanner;\n\n  connectedCallback() {\n    this.innerHTML = `Loading project data.`;\n\n    // IFrame steals the focus on click; is polling the best we can do?\n    setInterval(() => {\n      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {\n        const elt = document.activeElement as HTMLIFrameElement;\n        elt.blur();\n      }\n    }, 1000);\n  }\n\n  // Must call this to load the editor\n  async loadOrCreateProjectInUi(id: string) {\n    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);\n\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <button id='menu-button'>â˜° Menu</button>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n      <div><button id='add-youtube-btn'>Add youtube video</button></div>\n    `;\n    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;\n    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;\n    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {\n      if (cellLoc.rowIdx < 2) {\n        return;\n      }\n      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;\n      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;\n      this.renderSheet();\n    });\n    this.renderSheet();\n\n    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;\n    this.updateYoutubePlayer();\n\n    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;\n    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();\n    return finalProjectId;\n  }\n\n  getVideoPlayerUi() {\n    return this.youtubePlayerUi\n  }\n  handleKeydown(evt: KeyboardEvent) {\n    this.handleKeydownWithoutChanges(evt);\n    this.handleKeydownWithSheetChanges(evt);\n    console.log(this.gradebookMgr.project.cursor)\n  }\n\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    } else if (matchKey(evt, 'y')) {\n      this.obtainYoutubeUrl();\n    } else if (matchKey(evt, 'z')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);\n    } else if (matchKey(evt, 'x')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(0.2);\n    } else if (matchKey(evt, 'a')) {\n      this.getVideoPlayerUi().resetPlaybackRate();\n    } else if (matchKey(evt, 'l')) {\n      this.getVideoPlayerUi().move(1.5);\n    } else if (matchKey(evt, 'j')) {\n      this.getVideoPlayerUi().move(-3);\n    } else if (matchKey(evt, ';')) {\n      this.getVideoPlayerUi().move(5);\n    } else if (matchKey(evt, 'h')) {\n      this.getVideoPlayerUi().move(-5);\n    } else if (matchKey(evt, 'f')) {\n      const width = this.getVideoPlayerUi().getIframeWidth();\n      let wantWidth = width < 1000 ? width * 4 : width / 4;\n      this.getVideoPlayerUi().setIframeDims(wantWidth);\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  handleKeydownWithSheetChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'up')) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (matchKey(evt, 'down')) {\n      this.gradebookMgr.moveRallyIdx(1);\n    } else if (matchKey(evt, `\\\\`)) {\n      this.tabSelectedCell();\n    } else if (matchKey(evt, `shift+|`)) {\n      this.tabSelectedCell(true);\n    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {\n      this.gradebookMgr.moveColIdx(-1);\n    } else if (matchKey(evt, 'backspace')) {\n      this.gradebookMgr.removeCurrRally();\n    } else if (matchKey(evt, 'cmd+z')) {\n      if (this.inputStartTime) {\n        this.inputStartTime = null;\n      }\n    } else if (matchKey(evt, 'enter')) {\n      this.enterSelectedCell();\n    } else {\n      return;\n    }\n    this.renderSheet();\n    evt.preventDefault();\n  }\n\n  private enterSelectedCell() {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      if (this.inputStartTime) {\n        this.promoteRally();\n        return;\n      }\n      this.updateInputStartTime();\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === START_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.startTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === END_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.endTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === RESULT_COL) {\n      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {\n        this.gradebookMgr.moveColIdx(1);\n      } else {\n        this.gradebookMgr.moveRallyIdx(-1);\n      }\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      const name = prompt(`Enter server's name`);\n      if (name) {\n        if (rally.isMyServe) {\n          this.gradebookMgr.project.matchData.myName = name;\n        } else {\n          this.gradebookMgr.project.matchData.oppoName = name;\n        }\n      }\n    }\n  }\n  private tabSelectedCell(opposite = false) {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === RESULT_COL) {\n      const idx = rallyResultToIndex.get(rally.result);\n      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;\n      const nextIdx = next % rallyResultToIndex.size;\n      rally.result = rallyResultVals[nextIdx];\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      const ratingChange = opposite ? 1 : -1;\n      rally.stat.winnerLastShotQuality = mod(\n        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      const ratingChange = opposite ? -1 : 1;\n      rally.stat.loserPreviousShotQuality = mod(\n        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      rally.isMyServe = !rally.isMyServe;\n    }\n  }\n\n  private renderSheet() {\n    this.matchSheetUi.render(this.genSheet());\n  }\n\n  private obtainYoutubeUrl() {\n    const url = prompt('Enter url');\n    if (!url) {\n      return;\n    }\n    const res = extractYoutubeId(url);\n    if (!res.success) {\n      return;\n    }\n    this.gradebookMgr.project.matchData.urls.push(url);\n    this.updateYoutubePlayer();\n  }\n\n  private updateYoutubePlayer() {\n    if (this.gradebookMgr.project.matchData.urls.length < 1) {\n      return;\n    }\n    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);\n    if (!success) {\n      return;\n    }\n    this.youtubePlayerUi.initYoutubePlayer(id);\n  }\n\n  private getNowMs() {\n    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();\n    return Math.round(nowSec * 1000);\n  }\n\n  private updateInputStartTime() {\n    this.inputStartTime = new Time(this.getNowMs());\n    this.renderSheet();\n  }\n\n  private promoteRally() {\n    // TODO use win based on server\n    if (!this.inputStartTime) {\n      console.warn('cannot promote rally without inputStartTime');\n      return;\n    }\n    const nowMs = this.getNowMs();\n    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;\n    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);\n    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;\n    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;\n    this.gradebookMgr.project.cursor.rallyIdx = 0;\n\n    this.inputStartTime = null;\n    this.renderSheet();\n  }\n\n  private genSheet(): Cell[][] {\n    const project = this.gradebookMgr.project;\n    const cursor = project.cursor;\n    const rows = [];\n    const headerRow = [\n      new Cell('Server'),\n      new Cell('Set'),\n      new Cell('Game Score'),\n\n      new Cell('Start'),\n      new Cell('End'),\n      new Cell('Result'),\n      new Cell(`Winner's`),\n      // new Cell(`Winner's last shot`),\n      new Cell(`Loser's`),\n      // new Cell(`Loser's previous shot`),\n      new Cell('Plot'),\n      new Cell(`Winner's risk level`),\n    ];\n    rows.push(headerRow);\n\n    const myName = project.matchData.myName;\n    const oppoName = project.matchData.oppoName;\n    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();\n    rallyContexts.reverse();\n\n    const cursorAtTop = !this.gradebookMgr.getCurrentRally();\n    const hasInputStartTime = this.inputStartTime !== null;\n    const startTime = hasInputStartTime ?\n      formatSecondsToTimeString(this.inputStartTime!.ms) :\n      `<button id='input-start-time'>(Enter)</button>`;\n    const endTime = hasInputStartTime ?\n      `<button id='input-end-time'>(Enter)</button>` : '';\n    const setupInputStartTimeBtn = () => {\n      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.updateInputStartTime();\n      }\n    };\n    const setupInputEndTimeBtn = () => {\n      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.promoteRally();\n      }\n    };\n\n    // The latest rallyContext should only have score and not a rally.\n    const latestRallyCtx = rallyContexts[0];\n    const score = latestRallyCtx.scoreBeforeRally;\n\n    const row = [\n      new Cell(''),\n      new Cell(latestRallyCtx.toGameScoreStr()),\n      new Cell(score.toPointsStr()),\n\n      new Cell(startTime, makeOpts({\n        setupFunc: setupInputStartTimeBtn,\n        selected: cursorAtTop && !hasInputStartTime,\n      })),\n      new Cell(endTime, makeOpts({\n        setupFunc: setupInputEndTimeBtn,\n        selected: cursorAtTop && hasInputStartTime,\n        \n      })),\n      new Cell(''),\n      new Cell(''),\n      new Cell(''),\n      new Cell(score ? latestRallyCtx.toPlot().text : '', makeOpts({\n        alignRight: !latestRallyCtx.toPlot().isMyPlot})),\n      new Cell(''),\n    ];\n    rows.push(row);\n\n    rallyContexts.slice(1).forEach((rallyCtx, rallyIdx) => {\n      const rally = rallyCtx.rally;\n      const score = rallyCtx.scoreBeforeRally;\n      const rallyIsDoubleFault = rallyCtx.isDoubleFault();\n      const rallyIsPoint = (\n        rallyIsDoubleFault || rally.result === RallyResult.PtServer\n        || rally.result === RallyResult.PtReturner);\n      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||\n        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));\n      const plot = rallyCtx.toPlot();\n      const server = rally.isMyServe ? myName :\n          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;\n      const row = [\n        new Cell(\n          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(formatSecondsToTimeString(rally.startTime.ms)),\n        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),\n        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),\n            makeOpts({alignCenter: true})),\n        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({\n          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        // TODO think of a better way to not special case Converted.\n        // E.g. not rely on rallyIsPoint to filter at all. \n        new Cell(rallyIsPoint || plot.text === 'Converted' ? plot.text : '', makeOpts({\n          alignRight: !plot.isMyPlot, removeTopBorder: !rallyIsPoint})),\n        new Cell(getRiskLevelStr(rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n      ];\n      row.forEach((cell, colIdx) => {\n        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);\n      });\n      rows.push(row);\n    });\n    return rows;\n  }\n}\n\nfunction mod(x = 0, y = 1) {\n  const res = x % y;\n  if (res < 0) {\n    return res + y;\n  }\n  return res;\n}\n\nfunction formatSecondsToTimeString(numMs: number): string {\n  const numSecs = Math.round(numMs / 1000)\n  const hours = Math.floor(numSecs / 3600);\n  const minutes = Math.floor((numSecs % 3600) / 60);\n  const seconds = numSecs % 60;\n\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n  const formattedSeconds = seconds.toString().padStart(2, '0');\n\n  if (hours === 0) {\n    return `${formattedMinutes}:${formattedSeconds}`;\n  } else {\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n\n// https://stackoverflow.com/a/54200105\nfunction extractYoutubeId(url: string){\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n   if (parts[2] === undefined) {\n    return {success: false, id: ''};\n   }\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};\n}\n\ncustomElements.define('gradebook-ui', GradebookUi)\n",
                "languageId": "typescript",
                "version": 1673,
                "state": 1
              }
            ],
            "request": "<file>\n\n<status>I applied your suggestions for this file and accepted them. Here is the updated file:</status>\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\nimport { matchKey } from \"../key-match/key_match\";\nimport { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";\nimport { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";\nimport { GradebookMgr } from \"./gradebook_mgr\";\nimport { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";\nimport { EphemeralBanner } from \"../ephemeral-banner\";\nimport { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";\nimport { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";\nimport { Time } from \"./models/Time\";\n\n\n// Top-level UI to handle everything\nexport class GradebookUi extends HTMLElement {\n  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;\n\n  private inputStartTime: Time | null = null;\n  private gradebookMgr = new GradebookMgr;\n\n  private matchSheetUi: MatchSheetUi = new MatchSheetUi;\n  private banner: EphemeralBanner = new EphemeralBanner;\n\n  connectedCallback() {\n    this.innerHTML = `Loading project data.`;\n\n    // IFrame steals the focus on click; is polling the best we can do?\n    setInterval(() => {\n      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {\n        const elt = document.activeElement as HTMLIFrameElement;\n        elt.blur();\n      }\n    }, 1000);\n  }\n\n  // Must call this to load the editor\n  async loadOrCreateProjectInUi(id: string) {\n    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);\n\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <button id='menu-button'>â˜° Menu</button>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n      <div><button id='add-youtube-btn'>Add youtube video</button></div>\n    `;\n    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;\n    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;\n    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {\n      if (cellLoc.rowIdx < 2) {\n        return;\n      }\n      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;\n      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;\n      this.renderSheet();\n    });\n    this.renderSheet();\n\n    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;\n    this.updateYoutubePlayer();\n\n    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;\n    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();\n    return finalProjectId;\n  }\n\n  getVideoPlayerUi() {\n    return this.youtubePlayerUi\n  }\n  handleKeydown(evt: KeyboardEvent) {\n    this.handleKeydownWithoutChanges(evt);\n    this.handleKeydownWithSheetChanges(evt);\n    console.log(this.gradebookMgr.project.cursor)\n  }\n\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    } else if (matchKey(evt, 'y')) {\n      this.obtainYoutubeUrl();\n    } else if (matchKey(evt, 'z')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);\n    } else if (matchKey(evt, 'x')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(0.2);\n    } else if (matchKey(evt, 'a')) {\n      this.getVideoPlayerUi().resetPlaybackRate();\n    } else if (matchKey(evt, 'l')) {\n      this.getVideoPlayerUi().move(1.5);\n    } else if (matchKey(evt, 'j')) {\n      this.getVideoPlayerUi().move(-3);\n    } else if (matchKey(evt, ';')) {\n      this.getVideoPlayerUi().move(5);\n    } else if (matchKey(evt, 'h')) {\n      this.getVideoPlayerUi().move(-5);\n    } else if (matchKey(evt, 'f')) {\n      const width = this.getVideoPlayerUi().getIframeWidth();\n      let wantWidth = width < 1000 ? width * 4 : width / 4;\n      this.getVideoPlayerUi().setIframeDims(wantWidth);\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  handleKeydownWithSheetChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'up')) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (matchKey(evt, 'down')) {\n      this.gradebookMgr.moveRallyIdx(1);\n    } else if (matchKey(evt, `\\\\`)) {\n      this.tabSelectedCell();\n    } else if (matchKey(evt, `shift+|`)) {\n      this.tabSelectedCell(true);\n    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {\n      this.gradebookMgr.moveColIdx(-1);\n    } else if (matchKey(evt, 'backspace')) {\n      this.gradebookMgr.removeCurrRally();\n    } else if (matchKey(evt, 'cmd+z')) {\n      if (this.inputStartTime) {\n        this.inputStartTime = null;\n      }\n    } else if (matchKey(evt, 'enter')) {\n      this.enterSelectedCell();\n    } else {\n      return;\n    }\n    this.renderSheet();\n    evt.preventDefault();\n  }\n\n  private enterSelectedCell() {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      if (this.inputStartTime) {\n        this.promoteRally();\n        return;\n      }\n      this.updateInputStartTime();\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === START_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.startTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === END_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.endTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === RESULT_COL) {\n      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {\n        this.gradebookMgr.moveColIdx(1);\n      } else {\n        this.gradebookMgr.moveRallyIdx(-1);\n      }\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      const name = prompt(`Enter server's name`);\n      if (name) {\n        if (rally.isMyServe) {\n          this.gradebookMgr.project.matchData.myName = name;\n        } else {\n          this.gradebookMgr.project.matchData.oppoName = name;\n        }\n      }\n    }\n  }\n  private tabSelectedCell(opposite = false) {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === RESULT_COL) {\n      const idx = rallyResultToIndex.get(rally.result);\n      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;\n      const nextIdx = next % rallyResultToIndex.size;\n      rally.result = rallyResultVals[nextIdx];\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      const ratingChange = opposite ? 1 : -1;\n      rally.stat.winnerLastShotQuality = mod(\n        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      const ratingChange = opposite ? -1 : 1;\n      rally.stat.loserPreviousShotQuality = mod(\n        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      rally.isMyServe = !rally.isMyServe;\n    }\n  }\n\n  private renderSheet() {\n    this.matchSheetUi.render(this.genSheet());\n  }\n\n  private obtainYoutubeUrl() {\n    const url = prompt('Enter url');\n    if (!url) {\n      return;\n    }\n    const res = extractYoutubeId(url);\n    if (!res.success) {\n      return;\n    }\n    this.gradebookMgr.project.matchData.urls.push(url);\n    this.updateYoutubePlayer();\n  }\n\n  private updateYoutubePlayer() {\n    if (this.gradebookMgr.project.matchData.urls.length < 1) {\n      return;\n    }\n    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);\n    if (!success) {\n      return;\n    }\n    this.youtubePlayerUi.initYoutubePlayer(id);\n  }\n\n  private getNowMs() {\n    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();\n    return Math.round(nowSec * 1000);\n  }\n\n  private updateInputStartTime() {\n    this.inputStartTime = new Time(this.getNowMs());\n    this.renderSheet();\n  }\n\n  private promoteRally() {\n    // TODO use win based on server\n    if (!this.inputStartTime) {\n      console.warn('cannot promote rally without inputStartTime');\n      return;\n    }\n    const nowMs = this.getNowMs();\n    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;\n    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);\n    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;\n    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;\n    this.gradebookMgr.project.cursor.rallyIdx = 0;\n\n    this.inputStartTime = null;\n    this.renderSheet();\n  }\n\n  private genSheet(): Cell[][] {\n    const project = this.gradebookMgr.project;\n    const cursor = project.cursor;\n    const rows = [];\n    const headerRow = [\n      new Cell('Server'),\n      new Cell('Set'),\n      new Cell('Game Score'),\n\n      new Cell('Start'),\n      new Cell('End'),\n      new Cell('Result'),\n      new Cell(`Winner's`),\n      // new Cell(`Winner's last shot`),\n      new Cell(`Loser's`),\n      // new Cell(`Loser's previous shot`),\n      new Cell('Plot'),\n      new Cell(`Winner's risk level`),\n    ];\n    rows.push(headerRow);\n\n    const myName = project.matchData.myName;\n    const oppoName = project.matchData.oppoName;\n    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();\n    rallyContexts.reverse();\n\n    const cursorAtTop = !this.gradebookMgr.getCurrentRally();\n    const hasInputStartTime = this.inputStartTime !== null;\n    const startTime = hasInputStartTime ?\n      formatSecondsToTimeString(this.inputStartTime!.ms) :\n      `<button id='input-start-time'>(Enter)</button>`;\n    const endTime = hasInputStartTime ?\n      `<button id='input-end-time'>(Enter)</button>` : '';\n    const setupInputStartTimeBtn = () => {\n      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.updateInputStartTime();\n      }\n    };\n    const setupInputEndTimeBtn = () => {\n      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.promoteRally();\n      }\n    };\n\n    // The latest rallyContext should only have score and not a rally.\n    const latestRallyCtx = rallyContexts[0];\n    const score = latestRallyCtx.scoreBeforeRally;\n\n    const row = [\n      new Cell(''),\n      new Cell(latestRallyCtx.toGameScoreStr()),\n      new Cell(score.toPointsStr()),\n\n      new Cell(startTime, makeOpts({\n        setupFunc: setupInputStartTimeBtn,\n        selected: cursorAtTop && !hasInputStartTime,\n      })),\n      new Cell(endTime, makeOpts({\n        setupFunc: setupInputEndTimeBtn,\n        selected: cursorAtTop && hasInputStartTime,\n        \n      })),\n      new Cell(''),\n      new Cell(''),\n      new Cell(''),\n      new Cell(score ? latestRallyCtx.toPlot().text : '', makeOpts({\n        alignRight: !latestRallyCtx.toPlot().isMyPlot})),\n      new Cell(''),\n    ];\n    rows.push(row);\n\n    rallyContexts.slice(1).forEach((rallyCtx, rallyIdx) => {\n      const rally = rallyCtx.rally;\n      const score = rallyCtx.scoreBeforeRally;\n      const rallyIsDoubleFault = rallyCtx.isDoubleFault();\n      const rallyIsPoint = (\n        rallyIsDoubleFault || rally.result === RallyResult.PtServer\n        || rally.result === RallyResult.PtReturner);\n      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||\n        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));\n      const plot = rallyCtx.toPlot();\n      const server = rally.isMyServe ? myName :\n          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;\n      const row = [\n        new Cell(\n          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(formatSecondsToTimeString(rally.startTime.ms)),\n        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),\n        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),\n            makeOpts({alignCenter: true})),\n        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({\n          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        // TODO think of a better way to not special case Converted.\n        // E.g. not rely on rallyIsPoint to filter at all. \n        new Cell(rallyIsPoint || plot.text === 'Converted' ? plot.text : '', makeOpts({\n          alignRight: !plot.isMyPlot, removeTopBorder: !rallyIsPoint})),\n        new Cell(getRiskLevelStr(rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n      ];\n      row.forEach((cell, colIdx) => {\n        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);\n      });\n      rows.push(row);\n    });\n    return rows;\n  }\n}\n\nfunction mod(x = 0, y = 1) {\n  const res = x % y;\n  if (res < 0) {\n    return res + y;\n  }\n  return res;\n}\n\nfunction formatSecondsToTimeString(numMs: number): string {\n  const numSecs = Math.round(numMs / 1000)\n  const hours = Math.floor(numSecs / 3600);\n  const minutes = Math.floor((numSecs % 3600) / 60);\n  const seconds = numSecs % 60;\n\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n  const formattedSeconds = seconds.toString().padStart(2, '0');\n\n  if (hours === 0) {\n    return `${formattedMinutes}:${formattedSeconds}`;\n  } else {\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n\n// https://stackoverflow.com/a/54200105\nfunction extractYoutubeId(url: string){\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n   if (parts[2] === undefined) {\n    return {success: false, id: ''};\n   }\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};\n}\n\ncustomElements.define('gradebook-ui', GradebookUi)\n```\n</file>\n\n<reminder>\nAvoid repeating existing code, instead use `// ...existing code...` comments to represent regions of unchanged code.\nEach file's code block must start with a comment containing the filepath. This includes Markdown files.\n</reminder>\n<prompt>\nMove the \"Add youtube video button\" into the Menu list, so that it will be shown when I hover on the menu button\n</prompt>",
            "response": "Here's how we'll modify the code to create a hover menu:\n\n1. Add a menu container div that appears on hover\n2. Move the \"Add youtube video\" button into this menu\n3. Add CSS for the hover menu styling\n\n### /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n\nUpdate the HTML structure and CSS in the loadOrCreateProjectInUi method:\n\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n// ...existing code...\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      .menu-container {\n        position: relative;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      .menu-content {\n        display: none;\n        position: absolute;\n        right: 0;\n        background-color: white;\n        min-width: 160px;\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n        z-index: 1;\n        border-radius: 4px;\n      }\n      .menu-container:hover .menu-content {\n        display: block;\n      }\n      .menu-content button {\n        width: 100%;\n        padding: 12px 16px;\n        border: none;\n        background: none;\n        text-align: left;\n        cursor: pointer;\n      }\n      .menu-content button:hover {\n        background-color: #f1f1f1;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <div class=\"menu-container\">\n          <button id='menu-button'>â˜°</button>\n          <div class=\"menu-content\">\n            <button id='add-youtube-btn'>Add youtube video</button>\n          </div>\n        </div>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n    `;\n// ...existing code...\n```\n\nThis creates a hoverable menu button that reveals the \"Add youtube video\" option when hovered over. The button remains functional as before but is now part of a dropdown menu interface."
          },
          "codeBlocks": [
            {
              "code": "// ...existing code...\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      .menu-container {\n        position: relative;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      .menu-content {\n        display: none;\n        position: absolute;\n        right: 0;\n        background-color: white;\n        min-width: 160px;\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n        z-index: 1;\n        border-radius: 4px;\n      }\n      .menu-container:hover .menu-content {\n        display: block;\n      }\n      .menu-content button {\n        width: 100%;\n        padding: 12px 16px;\n        border: none;\n        background: none;\n        text-align: left;\n        cursor: pointer;\n      }\n      .menu-content button:hover {\n        background-color: #f1f1f1;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <div class=\"menu-container\">\n          <button id='menu-button'>â˜°</button>\n          <div class=\"menu-content\">\n            <button id='add-youtube-btn'>Add youtube video</button>\n          </div>\n        </div>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n    `;\n// ...existing code...\n",
              "resource": {
                "$mid": 1,
                "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "scheme": "file"
              },
              "language": "typescript",
              "markdownBeforeBlock": "Here's how we'll modify the code to create a hover menu:\n\n1. Add a menu container div that appears on hover\n2. Move the \"Add youtube video\" button into this menu\n3. Add CSS for the hover menu styling\n\n### [gradebook_ui.ts](file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts)\n\nUpdate the HTML structure and CSS in the loadOrCreateProjectInUi method:\n\n"
            }
          ],
          "messages": [
            {
              "role": "user",
              "content": "Move the \"Add youtube video button\" into the Menu list, so that it will be shown when I hover on the menu button"
            },
            {
              "role": "assistant",
              "content": "Here's how we'll modify the code to create a hover menu:\n\n1. Add a menu container div that appears on hover\n2. Move the \"Add youtube video\" button into this menu\n3. Add CSS for the hover menu styling\n\n### /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n\nUpdate the HTML structure and CSS in the loadOrCreateProjectInUi method:\n\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n// ...existing code...\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      .menu-container {\n        position: relative;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      .menu-content {\n        display: none;\n        position: absolute;\n        right: 0;\n        background-color: white;\n        min-width: 160px;\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n        z-index: 1;\n        border-radius: 4px;\n      }\n      .menu-container:hover .menu-content {\n        display: block;\n      }\n      .menu-content button {\n        width: 100%;\n        padding: 12px 16px;\n        border: none;\n        background: none;\n        text-align: left;\n        cursor: pointer;\n      }\n      .menu-content button:hover {\n        background-color: #f1f1f1;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <div class=\"menu-container\">\n          <button id='menu-button'>â˜°</button>\n          <div class=\"menu-content\">\n            <button id='add-youtube-btn'>Add youtube video</button>\n          </div>\n        </div>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n    `;\n// ...existing code...\n```\n\nThis creates a hoverable menu button that reveals the \"Add youtube video\" option when hovered over. The button remains functional as before but is now part of a dropdown menu interface."
            }
          ],
          "modelMessageId": "88de177f-5df6-429b-9be6-7162cf459de7",
          "responseId": "5933813d-f4e6-41a3-b38b-a66eed1f887d",
          "sessionId": "9ebcb46b-2747-4861-8196-e4505dcab712",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "workingSet": [
        {
          "$mid": 1,
          "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "scheme": "file"
        }
      ],
      "contentReferences": [],
      "codeCitations": [],
      "timestamp": 1735659351285
    },
    {
      "requestId": "request_718eb012-2aaa-49ef-8b4d-218271fc26fe",
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 68
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 2,
              "endColumn": 1
            },
            "text": "Add the keyboard shortcut cmd+shift+s to clone the current project.\n",
            "kind": "text"
          }
        ],
        "text": "Add the keyboard shortcut cmd+shift+s to clone the current project.\n"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "scheme": "file"
            },
            "id": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "name": "gradebook_ui.ts",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "Let me help you add the clone project functionality. Here's the step-by-step solution:\n\n1. Add handler for cmd+shift+s keyboard shortcut in handleKeydownWithoutChanges\n2. Add a method to handle project cloning\n3. Use the GradebookMgr to create a new project with the current data\n\n### [gradebook_ui.ts](file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts)\n\nAdd the clone project functionality:\n\n```typescript\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "scheme": "file"
          }
        },
        {
          "value": "// ...existing code...\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    // ...existing code...\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else if (matchKey(evt, 'cmd+shift+s')) {\n      evt.preventDefault();\n      await this.cloneProject();\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const newId = crypto.randomUUID();\n    const project = this.gradebookMgr.project;\n    const clonedProject = {\n      ...project,\n      id: newId,\n    };\n    \n    await this.gradebookMgr.saveProject(clonedProject);\n    window.location.href = `${window.location.pathname}?id=${newId}`;\n  }\n// ...existing code...\n```\n\nThis adds:\n1. A new keyboard shortcut handler for cmd+shift+s\n2. A cloneProject method that:\n   - Creates a new unique ID\n   - Clones the current project with the new ID\n   - Saves it\n   - Redirects to the new project URL",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "scheme": "file"
          },
          "edits": [
            [],
            [
              {
                "text": "import { matchKey } from \"../key-match/key_match\";",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { GradebookMgr } from \"./gradebook_mgr\";",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { EphemeralBanner } from \"../ephemeral-banner\";",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { Time } from \"./models/Time\";",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "// Top-level UI to handle everything",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "export class GradebookUi extends HTMLElement {",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private inputStartTime: Time | null = null;",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private gradebookMgr = new GradebookMgr;",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private matchSheetUi: MatchSheetUi = new MatchSheetUi;",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private banner: EphemeralBanner = new EphemeralBanner;",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  connectedCallback() {",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.innerHTML = `Loading project data.`;",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // IFrame steals the focus on click; is polling the best we can do?",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    setInterval(() => {",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        const elt = document.activeElement as HTMLIFrameElement;",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        elt.blur();",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }, 1000);",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  // Must call this to load the editor",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  async loadOrCreateProjectInUi(id: string) {",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.innerHTML = `",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <style>",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      #youtube-container {",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: sticky;",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        top: 0;",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: flex;",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        align-items: flex-start;",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-container {",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: relative;",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      #menu-button {",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background: none;",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border: none;",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        font-size: 24px;",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        padding: 10px;",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cursor: pointer;",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        margin-left: 10px;",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-content {",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: none;",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: absolute;",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        right: 0;",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background-color: white;",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        min-width: 160px;",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        z-index: 1;",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border-radius: 4px;",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-container:hover .menu-content {",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: block;",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-content button {",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        width: 100%;",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        padding: 12px 16px;",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border: none;",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background: none;",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        text-align: left;",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cursor: pointer;",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-content button:hover {",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background-color: #f1f1f1;",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      </style>",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <ephemeral-banner></ephemeral-banner>",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <div id='youtube-container'>",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        <youtube-player-ui></youtube-player-ui>",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        <div class=\"menu-container\">",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          <button id='menu-button'>â˜° Menu</button>",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          <div class=\"menu-content\">",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            <button id='add-youtube-btn'>Add youtube video</button>",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          </div>",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        </div>",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      </div>",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <div><match-sheet-ui></match-sheet-ui></div>",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    `;",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (cellLoc.rowIdx < 2) {",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return;",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.renderSheet();",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.updateYoutubePlayer();",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return finalProjectId;",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  getVideoPlayerUi() {",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return this.youtubePlayerUi",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  handleKeydown(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.handleKeydownWithoutChanges(evt);",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.handleKeydownWithSheetChanges(evt);",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  async handleKeydownWithoutChanges(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().toggleVideoPlay();",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'y')) {",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.obtainYoutubeUrl();",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'z')) {",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'x')) {",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().incrementPlaybackRate(0.2);",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'a')) {",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().resetPlaybackRate();",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'l')) {",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(1.5);",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'j')) {",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(-3);",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, ';')) {",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(5);",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'h')) {",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(-5);",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'f')) {",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const width = this.getVideoPlayerUi().getIframeWidth();",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      let wantWidth = width < 1000 ? width * 4 : width / 4;",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().setIframeDims(wantWidth);",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+s')) {",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      evt.preventDefault();",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.banner.inProgress('Saving');",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const failureMsg = await this.gradebookMgr.save();",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (failureMsg) {",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.banner.failure(failureMsg);",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.banner.success('Saved!');",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+shift+s')) {",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      evt.preventDefault();",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      await this.cloneProject();",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    evt.preventDefault();",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private async cloneProject() {",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.banner.inProgress('Cloning project...');",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const newId = crypto.randomUUID();",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const project = this.gradebookMgr.project;",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const clonedProject = {",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      ...project,",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      id: newId,",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    };",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    await this.gradebookMgr.saveProject(clonedProject);",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    window.location.href = `${window.location.pathname}?id=${newId}`;",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  handleKeydownWithSheetChanges(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (matchKey(evt, 'up')) {",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'down')) {",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(1);",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, `\\\\`)) {",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.tabSelectedCell();",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, `shift+|`)) {",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.tabSelectedCell(true);",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(-1);",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'backspace')) {",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.removeCurrRally();",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+z')) {",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (this.inputStartTime) {",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.inputStartTime = null;",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'enter')) {",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.enterSelectedCell();",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    evt.preventDefault();",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private enterSelectedCell() {",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rally = this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!rally) {",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (this.inputStartTime) {",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.promoteRally();",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return;",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.updateInputStartTime();",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = this.gradebookMgr.project.cursor;",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (cursor.colIdx === START_TIME_COL) {",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.youtubePlayerUi.moveTo(rally.startTime.ms);",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === END_TIME_COL) {",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.youtubePlayerUi.moveTo(rally.endTime.ms);",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === RESULT_COL) {",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === SERVER_COL) {",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const name = prompt(`Enter server's name`);",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (name) {",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if (rally.isMyServe) {",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          this.gradebookMgr.project.matchData.myName = name;",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        } else {",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1,
                  "endLineNumber": 236,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          this.gradebookMgr.project.matchData.oppoName = name;",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1,
                  "endLineNumber": 237,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1,
                  "endLineNumber": 238,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1,
                  "endLineNumber": 239,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1,
                  "endLineNumber": 240,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1,
                  "endLineNumber": 241,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private tabSelectedCell(opposite = false) {",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1,
                  "endLineNumber": 242,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rally = this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1,
                  "endLineNumber": 243,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!rally) {",
                "range": {
                  "startLineNumber": 244,
                  "startColumn": 1,
                  "endLineNumber": 244,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 245,
                  "startColumn": 1,
                  "endLineNumber": 245,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 246,
                  "startColumn": 1,
                  "endLineNumber": 246,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = this.gradebookMgr.project.cursor;",
                "range": {
                  "startLineNumber": 247,
                  "startColumn": 1,
                  "endLineNumber": 247,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (cursor.colIdx === RESULT_COL) {",
                "range": {
                  "startLineNumber": 248,
                  "startColumn": 1,
                  "endLineNumber": 248,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const idx = rallyResultToIndex.get(rally.result);",
                "range": {
                  "startLineNumber": 249,
                  "startColumn": 1,
                  "endLineNumber": 249,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;",
                "range": {
                  "startLineNumber": 250,
                  "startColumn": 1,
                  "endLineNumber": 250,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const nextIdx = next % rallyResultToIndex.size;",
                "range": {
                  "startLineNumber": 251,
                  "startColumn": 1,
                  "endLineNumber": 251,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.result = rallyResultVals[nextIdx];",
                "range": {
                  "startLineNumber": 252,
                  "startColumn": 1,
                  "endLineNumber": 252,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {",
                "range": {
                  "startLineNumber": 253,
                  "startColumn": 1,
                  "endLineNumber": 253,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const ratingChange = opposite ? 1 : -1;",
                "range": {
                  "startLineNumber": 254,
                  "startColumn": 1,
                  "endLineNumber": 254,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.stat.winnerLastShotQuality = mod(",
                "range": {
                  "startLineNumber": 255,
                  "startColumn": 1,
                  "endLineNumber": 255,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);",
                "range": {
                  "startLineNumber": 256,
                  "startColumn": 1,
                  "endLineNumber": 256,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {",
                "range": {
                  "startLineNumber": 257,
                  "startColumn": 1,
                  "endLineNumber": 257,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const ratingChange = opposite ? -1 : 1;",
                "range": {
                  "startLineNumber": 258,
                  "startColumn": 1,
                  "endLineNumber": 258,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.stat.loserPreviousShotQuality = mod(",
                "range": {
                  "startLineNumber": 259,
                  "startColumn": 1,
                  "endLineNumber": 259,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);",
                "range": {
                  "startLineNumber": 260,
                  "startColumn": 1,
                  "endLineNumber": 260,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === SERVER_COL) {",
                "range": {
                  "startLineNumber": 261,
                  "startColumn": 1,
                  "endLineNumber": 261,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.isMyServe = !rally.isMyServe;",
                "range": {
                  "startLineNumber": 262,
                  "startColumn": 1,
                  "endLineNumber": 262,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 263,
                  "startColumn": 1,
                  "endLineNumber": 263,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 264,
                  "startColumn": 1,
                  "endLineNumber": 264,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 265,
                  "startColumn": 1,
                  "endLineNumber": 265,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private renderSheet() {",
                "range": {
                  "startLineNumber": 266,
                  "startColumn": 1,
                  "endLineNumber": 266,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi.render(this.genSheet());",
                "range": {
                  "startLineNumber": 267,
                  "startColumn": 1,
                  "endLineNumber": 267,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 268,
                  "startColumn": 1,
                  "endLineNumber": 268,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 269,
                  "startColumn": 1,
                  "endLineNumber": 269,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private obtainYoutubeUrl() {",
                "range": {
                  "startLineNumber": 270,
                  "startColumn": 1,
                  "endLineNumber": 270,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const url = prompt('Enter url');",
                "range": {
                  "startLineNumber": 271,
                  "startColumn": 1,
                  "endLineNumber": 271,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!url) {",
                "range": {
                  "startLineNumber": 272,
                  "startColumn": 1,
                  "endLineNumber": 272,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 273,
                  "startColumn": 1,
                  "endLineNumber": 273,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 274,
                  "startColumn": 1,
                  "endLineNumber": 274,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const res = extractYoutubeId(url);",
                "range": {
                  "startLineNumber": 275,
                  "startColumn": 1,
                  "endLineNumber": 275,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!res.success) {",
                "range": {
                  "startLineNumber": 276,
                  "startColumn": 1,
                  "endLineNumber": 276,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 277,
                  "startColumn": 1,
                  "endLineNumber": 277,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 278,
                  "startColumn": 1,
                  "endLineNumber": 278,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.matchData.urls.push(url);",
                "range": {
                  "startLineNumber": 279,
                  "startColumn": 1,
                  "endLineNumber": 279,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.updateYoutubePlayer();",
                "range": {
                  "startLineNumber": 280,
                  "startColumn": 1,
                  "endLineNumber": 280,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 281,
                  "startColumn": 1,
                  "endLineNumber": 281,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 282,
                  "startColumn": 1,
                  "endLineNumber": 282,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private updateYoutubePlayer() {",
                "range": {
                  "startLineNumber": 283,
                  "startColumn": 1,
                  "endLineNumber": 283,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (this.gradebookMgr.project.matchData.urls.length < 1) {",
                "range": {
                  "startLineNumber": 284,
                  "startColumn": 1,
                  "endLineNumber": 284,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 285,
                  "startColumn": 1,
                  "endLineNumber": 285,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 286,
                  "startColumn": 1,
                  "endLineNumber": 286,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);",
                "range": {
                  "startLineNumber": 287,
                  "startColumn": 1,
                  "endLineNumber": 287,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!success) {",
                "range": {
                  "startLineNumber": 288,
                  "startColumn": 1,
                  "endLineNumber": 288,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 289,
                  "startColumn": 1,
                  "endLineNumber": 289,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 290,
                  "startColumn": 1,
                  "endLineNumber": 290,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.youtubePlayerUi.initYoutubePlayer(id);",
                "range": {
                  "startLineNumber": 291,
                  "startColumn": 1,
                  "endLineNumber": 291,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 292,
                  "startColumn": 1,
                  "endLineNumber": 292,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 293,
                  "startColumn": 1,
                  "endLineNumber": 293,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private getNowMs() {",
                "range": {
                  "startLineNumber": 294,
                  "startColumn": 1,
                  "endLineNumber": 294,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();",
                "range": {
                  "startLineNumber": 295,
                  "startColumn": 1,
                  "endLineNumber": 295,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return Math.round(nowSec * 1000);",
                "range": {
                  "startLineNumber": 296,
                  "startColumn": 1,
                  "endLineNumber": 296,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 297,
                  "startColumn": 1,
                  "endLineNumber": 297,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 298,
                  "startColumn": 1,
                  "endLineNumber": 298,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private updateInputStartTime() {",
                "range": {
                  "startLineNumber": 299,
                  "startColumn": 1,
                  "endLineNumber": 299,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.inputStartTime = new Time(this.getNowMs());",
                "range": {
                  "startLineNumber": 300,
                  "startColumn": 1,
                  "endLineNumber": 300,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 301,
                  "startColumn": 1,
                  "endLineNumber": 301,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 302,
                  "startColumn": 1,
                  "endLineNumber": 302,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 303,
                  "startColumn": 1,
                  "endLineNumber": 303,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private promoteRally() {",
                "range": {
                  "startLineNumber": 304,
                  "startColumn": 1,
                  "endLineNumber": 304,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!this.inputStartTime) {",
                "range": {
                  "startLineNumber": 305,
                  "startColumn": 1,
                  "endLineNumber": 305,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      console.warn('cannot promote rally without inputStartTime');",
                "range": {
                  "startLineNumber": 306,
                  "startColumn": 1,
                  "endLineNumber": 306,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 307,
                  "startColumn": 1,
                  "endLineNumber": 307,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 308,
                  "startColumn": 1,
                  "endLineNumber": 308,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const nowMs = this.getNowMs();",
                "range": {
                  "startLineNumber": 309,
                  "startColumn": 1,
                  "endLineNumber": 309,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;",
                "range": {
                  "startLineNumber": 310,
                  "startColumn": 1,
                  "endLineNumber": 310,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);",
                "range": {
                  "startLineNumber": 311,
                  "startColumn": 1,
                  "endLineNumber": 311,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;",
                "range": {
                  "startLineNumber": 312,
                  "startColumn": 1,
                  "endLineNumber": 312,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;",
                "range": {
                  "startLineNumber": 313,
                  "startColumn": 1,
                  "endLineNumber": 313,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.rallyIdx = 0;",
                "range": {
                  "startLineNumber": 314,
                  "startColumn": 1,
                  "endLineNumber": 314,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 315,
                  "startColumn": 1,
                  "endLineNumber": 315,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.inputStartTime = null;",
                "range": {
                  "startLineNumber": 316,
                  "startColumn": 1,
                  "endLineNumber": 316,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 317,
                  "startColumn": 1,
                  "endLineNumber": 317,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 318,
                  "startColumn": 1,
                  "endLineNumber": 318,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 319,
                  "startColumn": 1,
                  "endLineNumber": 319,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private genSheet(): Cell[][] {",
                "range": {
                  "startLineNumber": 320,
                  "startColumn": 1,
                  "endLineNumber": 320,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const project = this.gradebookMgr.project;",
                "range": {
                  "startLineNumber": 321,
                  "startColumn": 1,
                  "endLineNumber": 321,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = project.cursor;",
                "range": {
                  "startLineNumber": 322,
                  "startColumn": 1,
                  "endLineNumber": 322,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rows = [];",
                "range": {
                  "startLineNumber": 323,
                  "startColumn": 1,
                  "endLineNumber": 323,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const headerRow = [",
                "range": {
                  "startLineNumber": 324,
                  "startColumn": 1,
                  "endLineNumber": 324,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Server'),",
                "range": {
                  "startLineNumber": 325,
                  "startColumn": 1,
                  "endLineNumber": 325,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Set'),",
                "range": {
                  "startLineNumber": 326,
                  "startColumn": 1,
                  "endLineNumber": 326,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Game Score'),",
                "range": {
                  "startLineNumber": 327,
                  "startColumn": 1,
                  "endLineNumber": 327,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 328,
                  "startColumn": 1,
                  "endLineNumber": 328,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Start'),",
                "range": {
                  "startLineNumber": 329,
                  "startColumn": 1,
                  "endLineNumber": 329,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('End'),",
                "range": {
                  "startLineNumber": 330,
                  "startColumn": 1,
                  "endLineNumber": 330,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Result'),",
                "range": {
                  "startLineNumber": 331,
                  "startColumn": 1,
                  "endLineNumber": 331,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Winner's`),",
                "range": {
                  "startLineNumber": 332,
                  "startColumn": 1,
                  "endLineNumber": 332,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      // new Cell(`Winner's last shot`),",
                "range": {
                  "startLineNumber": 333,
                  "startColumn": 1,
                  "endLineNumber": 333,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Loser's`),",
                "range": {
                  "startLineNumber": 334,
                  "startColumn": 1,
                  "endLineNumber": 334,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      // new Cell(`Loser's previous shot`),",
                "range": {
                  "startLineNumber": 335,
                  "startColumn": 1,
                  "endLineNumber": 335,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Plot'),",
                "range": {
                  "startLineNumber": 336,
                  "startColumn": 1,
                  "endLineNumber": 336,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Winner's risk level`),",
                "range": {
                  "startLineNumber": 337,
                  "startColumn": 1,
                  "endLineNumber": 337,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ];",
                "range": {
                  "startLineNumber": 338,
                  "startColumn": 1,
                  "endLineNumber": 338,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rows.push(headerRow);",
                "range": {
                  "startLineNumber": 339,
                  "startColumn": 1,
                  "endLineNumber": 339,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 340,
                  "startColumn": 1,
                  "endLineNumber": 340,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const myName = project.matchData.myName;",
                "range": {
                  "startLineNumber": 341,
                  "startColumn": 1,
                  "endLineNumber": 341,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const oppoName = project.matchData.oppoName;",
                "range": {
                  "startLineNumber": 342,
                  "startColumn": 1,
                  "endLineNumber": 342,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();",
                "range": {
                  "startLineNumber": 343,
                  "startColumn": 1,
                  "endLineNumber": 343,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rallyContexts.reverse();",
                "range": {
                  "startLineNumber": 344,
                  "startColumn": 1,
                  "endLineNumber": 344,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 345,
                  "startColumn": 1,
                  "endLineNumber": 345,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursorAtTop = !this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 346,
                  "startColumn": 1,
                  "endLineNumber": 346,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const hasInputStartTime = this.inputStartTime !== null;",
                "range": {
                  "startLineNumber": 347,
                  "startColumn": 1,
                  "endLineNumber": 347,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const startTime = hasInputStartTime ?",
                "range": {
                  "startLineNumber": 348,
                  "startColumn": 1,
                  "endLineNumber": 348,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      formatSecondsToTimeString(this.inputStartTime!.ms) :",
                "range": {
                  "startLineNumber": 349,
                  "startColumn": 1,
                  "endLineNumber": 349,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      `<button id='input-start-time'>(Enter)</button>`;",
                "range": {
                  "startLineNumber": 350,
                  "startColumn": 1,
                  "endLineNumber": 350,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const endTime = hasInputStartTime ?",
                "range": {
                  "startLineNumber": 351,
                  "startColumn": 1,
                  "endLineNumber": 351,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      `<button id='input-end-time'>(Enter)</button>` : '';",
                "range": {
                  "startLineNumber": 352,
                  "startColumn": 1,
                  "endLineNumber": 352,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const setupInputStartTimeBtn = () => {",
                "range": {
                  "startLineNumber": 353,
                  "startColumn": 1,
                  "endLineNumber": 353,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 354,
                  "startColumn": 1,
                  "endLineNumber": 354,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (btn) {",
                "range": {
                  "startLineNumber": 355,
                  "startColumn": 1,
                  "endLineNumber": 355,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        btn.onclick = () => this.updateInputStartTime();",
                "range": {
                  "startLineNumber": 356,
                  "startColumn": 1,
                  "endLineNumber": 356,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 357,
                  "startColumn": 1,
                  "endLineNumber": 357,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    };",
                "range": {
                  "startLineNumber": 358,
                  "startColumn": 1,
                  "endLineNumber": 358,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const setupInputEndTimeBtn = () => {",
                "range": {
                  "startLineNumber": 359,
                  "startColumn": 1,
                  "endLineNumber": 359,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 360,
                  "startColumn": 1,
                  "endLineNumber": 360,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (btn) {",
                "range": {
                  "startLineNumber": 361,
                  "startColumn": 1,
                  "endLineNumber": 361,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        btn.onclick = () => this.promoteRally();",
                "range": {
                  "startLineNumber": 362,
                  "startColumn": 1,
                  "endLineNumber": 362,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 363,
                  "startColumn": 1,
                  "endLineNumber": 363,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    };",
                "range": {
                  "startLineNumber": 364,
                  "startColumn": 1,
                  "endLineNumber": 364,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 365,
                  "startColumn": 1,
                  "endLineNumber": 365,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // The latest rallyContext should only have score and not a rally.",
                "range": {
                  "startLineNumber": 366,
                  "startColumn": 1,
                  "endLineNumber": 366,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const latestRallyCtx = rallyContexts[0];",
                "range": {
                  "startLineNumber": 367,
                  "startColumn": 1,
                  "endLineNumber": 367,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const score = latestRallyCtx.scoreBeforeRally;",
                "range": {
                  "startLineNumber": 368,
                  "startColumn": 1,
                  "endLineNumber": 368,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    let latestPlot = latestRallyCtx.toPlot();",
                "range": {
                  "startLineNumber": 369,
                  "startColumn": 1,
                  "endLineNumber": 369,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!latestPlot && 1 < rallyContexts.length) {",
                "range": {
                  "startLineNumber": 370,
                  "startColumn": 1,
                  "endLineNumber": 370,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const prevRallyCtx = rallyContexts[1];",
                "range": {
                  "startLineNumber": 371,
                  "startColumn": 1,
                  "endLineNumber": 371,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      latestPlot = prevRallyCtx.getPlotForNextRally();",
                "range": {
                  "startLineNumber": 372,
                  "startColumn": 1,
                  "endLineNumber": 372,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 373,
                  "startColumn": 1,
                  "endLineNumber": 373,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 374,
                  "startColumn": 1,
                  "endLineNumber": 374,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const row = [",
                "range": {
                  "startLineNumber": 375,
                  "startColumn": 1,
                  "endLineNumber": 375,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 376,
                  "startColumn": 1,
                  "endLineNumber": 376,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(latestRallyCtx.toGameScoreStr()),",
                "range": {
                  "startLineNumber": 377,
                  "startColumn": 1,
                  "endLineNumber": 377,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(score.toPointsStr()),",
                "range": {
                  "startLineNumber": 378,
                  "startColumn": 1,
                  "endLineNumber": 378,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 379,
                  "startColumn": 1,
                  "endLineNumber": 379,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(startTime, makeOpts({",
                "range": {
                  "startLineNumber": 380,
                  "startColumn": 1,
                  "endLineNumber": 380,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        setupFunc: setupInputStartTimeBtn,",
                "range": {
                  "startLineNumber": 381,
                  "startColumn": 1,
                  "endLineNumber": 381,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        selected: cursorAtTop && !hasInputStartTime,",
                "range": {
                  "startLineNumber": 382,
                  "startColumn": 1,
                  "endLineNumber": 382,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      })),",
                "range": {
                  "startLineNumber": 383,
                  "startColumn": 1,
                  "endLineNumber": 383,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(endTime, makeOpts({",
                "range": {
                  "startLineNumber": 384,
                  "startColumn": 1,
                  "endLineNumber": 384,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        setupFunc: setupInputEndTimeBtn,",
                "range": {
                  "startLineNumber": 385,
                  "startColumn": 1,
                  "endLineNumber": 385,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        selected: cursorAtTop && hasInputStartTime,",
                "range": {
                  "startLineNumber": 386,
                  "startColumn": 1,
                  "endLineNumber": 386,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 387,
                  "startColumn": 1,
                  "endLineNumber": 387,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      })),",
                "range": {
                  "startLineNumber": 388,
                  "startColumn": 1,
                  "endLineNumber": 388,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 389,
                  "startColumn": 1,
                  "endLineNumber": 389,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 390,
                  "startColumn": 1,
                  "endLineNumber": 390,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 391,
                  "startColumn": 1,
                  "endLineNumber": 391,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(latestPlot?.text, makeOpts({",
                "range": {
                  "startLineNumber": 392,
                  "startColumn": 1,
                  "endLineNumber": 392,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !latestPlot?.isMyPlot})),",
                "range": {
                  "startLineNumber": 393,
                  "startColumn": 1,
                  "endLineNumber": 393,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 394,
                  "startColumn": 1,
                  "endLineNumber": 394,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ];",
                "range": {
                  "startLineNumber": 395,
                  "startColumn": 1,
                  "endLineNumber": 395,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rows.push(row);",
                "range": {
                  "startLineNumber": 396,
                  "startColumn": 1,
                  "endLineNumber": 396,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 397,
                  "startColumn": 1,
                  "endLineNumber": 397,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const ralliedContexts =  rallyContexts.slice(1);",
                "range": {
                  "startLineNumber": 398,
                  "startColumn": 1,
                  "endLineNumber": 398,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ralliedContexts.forEach((rallyCtx, rallyIdx) => {",
                "range": {
                  "startLineNumber": 399,
                  "startColumn": 1,
                  "endLineNumber": 399,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rally = rallyCtx.rally;",
                "range": {
                  "startLineNumber": 400,
                  "startColumn": 1,
                  "endLineNumber": 400,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const score = rallyCtx.scoreBeforeRally;",
                "range": {
                  "startLineNumber": 401,
                  "startColumn": 1,
                  "endLineNumber": 401,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rallyIsDoubleFault = rallyCtx.isDoubleFault();",
                "range": {
                  "startLineNumber": 402,
                  "startColumn": 1,
                  "endLineNumber": 402,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rallyIsPoint = (",
                "range": {
                  "startLineNumber": 403,
                  "startColumn": 1,
                  "endLineNumber": 403,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rallyIsDoubleFault || rally.result === RallyResult.PtServer",
                "range": {
                  "startLineNumber": 404,
                  "startColumn": 1,
                  "endLineNumber": 404,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        || rally.result === RallyResult.PtReturner);",
                "range": {
                  "startLineNumber": 405,
                  "startColumn": 1,
                  "endLineNumber": 405,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||",
                "range": {
                  "startLineNumber": 406,
                  "startColumn": 1,
                  "endLineNumber": 406,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));",
                "range": {
                  "startLineNumber": 407,
                  "startColumn": 1,
                  "endLineNumber": 407,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      let plot;",
                "range": {
                  "startLineNumber": 408,
                  "startColumn": 1,
                  "endLineNumber": 408,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (rallyIsPoint) {",
                "range": {
                  "startLineNumber": 409,
                  "startColumn": 1,
                  "endLineNumber": 409,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        plot = rallyCtx.toPlot();",
                "range": {
                  "startLineNumber": 410,
                  "startColumn": 1,
                  "endLineNumber": 410,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 411,
                  "startColumn": 1,
                  "endLineNumber": 411,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (!plot && rallyIdx + 1 < ralliedContexts.length) {",
                "range": {
                  "startLineNumber": 412,
                  "startColumn": 1,
                  "endLineNumber": 412,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        const prevRallyCtx = ralliedContexts[rallyIdx + 1];",
                "range": {
                  "startLineNumber": 413,
                  "startColumn": 1,
                  "endLineNumber": 413,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        plot = prevRallyCtx.getPlotForNextRally();",
                "range": {
                  "startLineNumber": 414,
                  "startColumn": 1,
                  "endLineNumber": 414,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 415,
                  "startColumn": 1,
                  "endLineNumber": 415,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 416,
                  "startColumn": 1,
                  "endLineNumber": 416,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const server = rally.isMyServe ? myName :",
                "range": {
                  "startLineNumber": 417,
                  "startColumn": 1,
                  "endLineNumber": 417,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;",
                "range": {
                  "startLineNumber": 418,
                  "startColumn": 1,
                  "endLineNumber": 418,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const row = [",
                "range": {
                  "startLineNumber": 419,
                  "startColumn": 1,
                  "endLineNumber": 419,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(",
                "range": {
                  "startLineNumber": 420,
                  "startColumn": 1,
                  "endLineNumber": 420,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 421,
                  "startColumn": 1,
                  "endLineNumber": 421,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 422,
                  "startColumn": 1,
                  "endLineNumber": 422,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 423,
                  "startColumn": 1,
                  "endLineNumber": 423,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(formatSecondsToTimeString(rally.startTime.ms)),",
                "range": {
                  "startLineNumber": 424,
                  "startColumn": 1,
                  "endLineNumber": 424,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),",
                "range": {
                  "startLineNumber": 425,
                  "startColumn": 1,
                  "endLineNumber": 425,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),",
                "range": {
                  "startLineNumber": 426,
                  "startColumn": 1,
                  "endLineNumber": 426,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            makeOpts({alignCenter: true})),",
                "range": {
                  "startLineNumber": 427,
                  "startColumn": 1,
                  "endLineNumber": 427,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 428,
                  "startColumn": 1,
                  "endLineNumber": 428,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 429,
                  "startColumn": 1,
                  "endLineNumber": 429,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 430,
                  "startColumn": 1,
                  "endLineNumber": 430,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 431,
                  "startColumn": 1,
                  "endLineNumber": 431,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(plot?.text, makeOpts({",
                "range": {
                  "startLineNumber": 432,
                  "startColumn": 1,
                  "endLineNumber": 432,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          alignRight: !plot?.isMyPlot, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 433,
                  "startColumn": 1,
                  "endLineNumber": 433,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getRiskLevelStr(rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 434,
                  "startColumn": 1,
                  "endLineNumber": 434,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 435,
                  "startColumn": 1,
                  "endLineNumber": 435,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      ];",
                "range": {
                  "startLineNumber": 436,
                  "startColumn": 1,
                  "endLineNumber": 436,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      row.forEach((cell, colIdx) => {",
                "range": {
                  "startLineNumber": 437,
                  "startColumn": 1,
                  "endLineNumber": 437,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);",
                "range": {
                  "startLineNumber": 438,
                  "startColumn": 1,
                  "endLineNumber": 438,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 439,
                  "startColumn": 1,
                  "endLineNumber": 439,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rows.push(row);",
                "range": {
                  "startLineNumber": 440,
                  "startColumn": 1,
                  "endLineNumber": 440,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 441,
                  "startColumn": 1,
                  "endLineNumber": 441,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return rows;",
                "range": {
                  "startLineNumber": 442,
                  "startColumn": 1,
                  "endLineNumber": 442,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 443,
                  "startColumn": 1,
                  "endLineNumber": 443,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 444,
                  "startColumn": 1,
                  "endLineNumber": 444,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 445,
                  "startColumn": 1,
                  "endLineNumber": 445,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "function mod(x = 0, y = 1) {",
                "range": {
                  "startLineNumber": 446,
                  "startColumn": 1,
                  "endLineNumber": 446,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const res = x % y;",
                "range": {
                  "startLineNumber": 447,
                  "startColumn": 1,
                  "endLineNumber": 447,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  if (res < 0) {",
                "range": {
                  "startLineNumber": 448,
                  "startColumn": 1,
                  "endLineNumber": 448,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return res + y;",
                "range": {
                  "startLineNumber": 449,
                  "startColumn": 1,
                  "endLineNumber": 449,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 450,
                  "startColumn": 1,
                  "endLineNumber": 450,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  return res;",
                "range": {
                  "startLineNumber": 451,
                  "startColumn": 1,
                  "endLineNumber": 451,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 452,
                  "startColumn": 1,
                  "endLineNumber": 452,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 453,
                  "startColumn": 1,
                  "endLineNumber": 453,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "function formatSecondsToTimeString(numMs: number): string {",
                "range": {
                  "startLineNumber": 454,
                  "startColumn": 1,
                  "endLineNumber": 454,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const numSecs = Math.round(numMs / 1000)",
                "range": {
                  "startLineNumber": 455,
                  "startColumn": 1,
                  "endLineNumber": 455,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const hours = Math.floor(numSecs / 3600);",
                "range": {
                  "startLineNumber": 456,
                  "startColumn": 1,
                  "endLineNumber": 456,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const minutes = Math.floor((numSecs % 3600) / 60);",
                "range": {
                  "startLineNumber": 457,
                  "startColumn": 1,
                  "endLineNumber": 457,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const seconds = numSecs % 60;",
                "range": {
                  "startLineNumber": 458,
                  "startColumn": 1,
                  "endLineNumber": 458,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 459,
                  "startColumn": 1,
                  "endLineNumber": 459,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const formattedHours = hours.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 460,
                  "startColumn": 1,
                  "endLineNumber": 460,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const formattedMinutes = minutes.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 461,
                  "startColumn": 1,
                  "endLineNumber": 461,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const formattedSeconds = seconds.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 462,
                  "startColumn": 1,
                  "endLineNumber": 462,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 463,
                  "startColumn": 1,
                  "endLineNumber": 463,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  if (hours === 0) {",
                "range": {
                  "startLineNumber": 464,
                  "startColumn": 1,
                  "endLineNumber": 464,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return `${formattedMinutes}:${formattedSeconds}`;",
                "range": {
                  "startLineNumber": 465,
                  "startColumn": 1,
                  "endLineNumber": 465,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  } else {",
                "range": {
                  "startLineNumber": 466,
                  "startColumn": 1073741825,
                  "endLineNumber": 466,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;",
                "range": {
                  "startLineNumber": 467,
                  "startColumn": 1073741825,
                  "endLineNumber": 467,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n  }",
                "range": {
                  "startLineNumber": 468,
                  "startColumn": 1073741825,
                  "endLineNumber": 468,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n}",
                "range": {
                  "startLineNumber": 469,
                  "startColumn": 1073741825,
                  "endLineNumber": 469,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 470,
                  "startColumn": 1073741825,
                  "endLineNumber": 470,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n// https://stackoverflow.com/a/54200105",
                "range": {
                  "startLineNumber": 471,
                  "startColumn": 1073741825,
                  "endLineNumber": 471,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\nfunction extractYoutubeId(url: string){",
                "range": {
                  "startLineNumber": 472,
                  "startColumn": 1073741825,
                  "endLineNumber": 472,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);",
                "range": {
                  "startLineNumber": 473,
                  "startColumn": 1073741825,
                  "endLineNumber": 473,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n   if (parts[2] === undefined) {",
                "range": {
                  "startLineNumber": 474,
                  "startColumn": 1073741825,
                  "endLineNumber": 474,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n    return {success: false, id: ''};",
                "range": {
                  "startLineNumber": 475,
                  "startColumn": 1073741825,
                  "endLineNumber": 475,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n   }",
                "range": {
                  "startLineNumber": 476,
                  "startColumn": 1073741825,
                  "endLineNumber": 476,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};",
                "range": {
                  "startLineNumber": 477,
                  "startColumn": 1073741825,
                  "endLineNumber": 477,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n}",
                "range": {
                  "startLineNumber": 478,
                  "startColumn": 1073741825,
                  "endLineNumber": 478,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 479,
                  "startColumn": 1073741825,
                  "endLineNumber": 479,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\ncustomElements.define('gradebook-ui', GradebookUi)",
                "range": {
                  "startLineNumber": 480,
                  "startColumn": 1073741825,
                  "endLineNumber": 480,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 481,
                  "startColumn": 1073741825,
                  "endLineNumber": 481,
                  "endColumn": 1073741825
                }
              }
            ],
            []
          ],
          "done": true
        }
      ],
      "responseId": "response_aa46294a-5691-4b50-8708-336d4b63dd5c",
      "isHidden": false,
      "result": {
        "timings": {
          "firstProgress": 7262,
          "totalElapsed": 28150
        },
        "metadata": {
          "edits": {
            "workingSet": [
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "scheme": "file"
                },
                "text": "import { matchKey } from \"../key-match/key_match\";\nimport { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";\nimport { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";\nimport { GradebookMgr } from \"./gradebook_mgr\";\nimport { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";\nimport { EphemeralBanner } from \"../ephemeral-banner\";\nimport { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";\nimport { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";\nimport { Time } from \"./models/Time\";\n\n\n// Top-level UI to handle everything\nexport class GradebookUi extends HTMLElement {\n  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;\n\n  private inputStartTime: Time | null = null;\n  private gradebookMgr = new GradebookMgr;\n\n  private matchSheetUi: MatchSheetUi = new MatchSheetUi;\n  private banner: EphemeralBanner = new EphemeralBanner;\n\n  connectedCallback() {\n    this.innerHTML = `Loading project data.`;\n\n    // IFrame steals the focus on click; is polling the best we can do?\n    setInterval(() => {\n      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {\n        const elt = document.activeElement as HTMLIFrameElement;\n        elt.blur();\n      }\n    }, 1000);\n  }\n\n  // Must call this to load the editor\n  async loadOrCreateProjectInUi(id: string) {\n    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);\n\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      .menu-container {\n        position: relative;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      .menu-content {\n        display: none;\n        position: absolute;\n        right: 0;\n        background-color: white;\n        min-width: 160px;\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n        z-index: 1;\n        border-radius: 4px;\n      }\n      .menu-container:hover .menu-content {\n        display: block;\n      }\n      .menu-content button {\n        width: 100%;\n        padding: 12px 16px;\n        border: none;\n        background: none;\n        text-align: left;\n        cursor: pointer;\n      }\n      .menu-content button:hover {\n        background-color: #f1f1f1;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <div class=\"menu-container\">\n          <button id='menu-button'>â˜° Menu</button>\n          <div class=\"menu-content\">\n            <button id='add-youtube-btn'>Add youtube video</button>\n          </div>\n        </div>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n    `;\n    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;\n    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;\n    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {\n      if (cellLoc.rowIdx < 2) {\n        return;\n      }\n      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;\n      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;\n      this.renderSheet();\n    });\n    this.renderSheet();\n\n    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;\n    this.updateYoutubePlayer();\n\n    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;\n    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();\n    return finalProjectId;\n  }\n\n  getVideoPlayerUi() {\n    return this.youtubePlayerUi\n  }\n  handleKeydown(evt: KeyboardEvent) {\n    this.handleKeydownWithoutChanges(evt);\n    this.handleKeydownWithSheetChanges(evt);\n  }\n\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    } else if (matchKey(evt, 'y')) {\n      this.obtainYoutubeUrl();\n    } else if (matchKey(evt, 'z')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);\n    } else if (matchKey(evt, 'x')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(0.2);\n    } else if (matchKey(evt, 'a')) {\n      this.getVideoPlayerUi().resetPlaybackRate();\n    } else if (matchKey(evt, 'l')) {\n      this.getVideoPlayerUi().move(1.5);\n    } else if (matchKey(evt, 'j')) {\n      this.getVideoPlayerUi().move(-3);\n    } else if (matchKey(evt, ';')) {\n      this.getVideoPlayerUi().move(5);\n    } else if (matchKey(evt, 'h')) {\n      this.getVideoPlayerUi().move(-5);\n    } else if (matchKey(evt, 'f')) {\n      const width = this.getVideoPlayerUi().getIframeWidth();\n      let wantWidth = width < 1000 ? width * 4 : width / 4;\n      this.getVideoPlayerUi().setIframeDims(wantWidth);\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  handleKeydownWithSheetChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'up')) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (matchKey(evt, 'down')) {\n      this.gradebookMgr.moveRallyIdx(1);\n    } else if (matchKey(evt, `\\\\`)) {\n      this.tabSelectedCell();\n    } else if (matchKey(evt, `shift+|`)) {\n      this.tabSelectedCell(true);\n    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {\n      this.gradebookMgr.moveColIdx(-1);\n    } else if (matchKey(evt, 'backspace')) {\n      this.gradebookMgr.removeCurrRally();\n    } else if (matchKey(evt, 'cmd+z')) {\n      if (this.inputStartTime) {\n        this.inputStartTime = null;\n      }\n    } else if (matchKey(evt, 'enter')) {\n      this.enterSelectedCell();\n    } else {\n      return;\n    }\n    this.renderSheet();\n    evt.preventDefault();\n  }\n\n  private enterSelectedCell() {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      if (this.inputStartTime) {\n        this.promoteRally();\n        return;\n      }\n      this.updateInputStartTime();\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === START_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.startTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === END_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.endTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === RESULT_COL) {\n      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {\n        this.gradebookMgr.moveColIdx(1);\n      } else {\n        this.gradebookMgr.moveRallyIdx(-1);\n      }\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      const name = prompt(`Enter server's name`);\n      if (name) {\n        if (rally.isMyServe) {\n          this.gradebookMgr.project.matchData.myName = name;\n        } else {\n          this.gradebookMgr.project.matchData.oppoName = name;\n        }\n      }\n    }\n  }\n  private tabSelectedCell(opposite = false) {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === RESULT_COL) {\n      const idx = rallyResultToIndex.get(rally.result);\n      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;\n      const nextIdx = next % rallyResultToIndex.size;\n      rally.result = rallyResultVals[nextIdx];\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      const ratingChange = opposite ? 1 : -1;\n      rally.stat.winnerLastShotQuality = mod(\n        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      const ratingChange = opposite ? -1 : 1;\n      rally.stat.loserPreviousShotQuality = mod(\n        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      rally.isMyServe = !rally.isMyServe;\n    }\n  }\n\n  private renderSheet() {\n    this.matchSheetUi.render(this.genSheet());\n  }\n\n  private obtainYoutubeUrl() {\n    const url = prompt('Enter url');\n    if (!url) {\n      return;\n    }\n    const res = extractYoutubeId(url);\n    if (!res.success) {\n      return;\n    }\n    this.gradebookMgr.project.matchData.urls.push(url);\n    this.updateYoutubePlayer();\n  }\n\n  private updateYoutubePlayer() {\n    if (this.gradebookMgr.project.matchData.urls.length < 1) {\n      return;\n    }\n    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);\n    if (!success) {\n      return;\n    }\n    this.youtubePlayerUi.initYoutubePlayer(id);\n  }\n\n  private getNowMs() {\n    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();\n    return Math.round(nowSec * 1000);\n  }\n\n  private updateInputStartTime() {\n    this.inputStartTime = new Time(this.getNowMs());\n    this.renderSheet();\n  }\n\n  private promoteRally() {\n    if (!this.inputStartTime) {\n      console.warn('cannot promote rally without inputStartTime');\n      return;\n    }\n    const nowMs = this.getNowMs();\n    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;\n    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);\n    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;\n    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;\n    this.gradebookMgr.project.cursor.rallyIdx = 0;\n\n    this.inputStartTime = null;\n    this.renderSheet();\n  }\n\n  private genSheet(): Cell[][] {\n    const project = this.gradebookMgr.project;\n    const cursor = project.cursor;\n    const rows = [];\n    const headerRow = [\n      new Cell('Server'),\n      new Cell('Set'),\n      new Cell('Game Score'),\n\n      new Cell('Start'),\n      new Cell('End'),\n      new Cell('Result'),\n      new Cell(`Winner's`),\n      // new Cell(`Winner's last shot`),\n      new Cell(`Loser's`),\n      // new Cell(`Loser's previous shot`),\n      new Cell('Plot'),\n      new Cell(`Winner's risk level`),\n    ];\n    rows.push(headerRow);\n\n    const myName = project.matchData.myName;\n    const oppoName = project.matchData.oppoName;\n    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();\n    rallyContexts.reverse();\n\n    const cursorAtTop = !this.gradebookMgr.getCurrentRally();\n    const hasInputStartTime = this.inputStartTime !== null;\n    const startTime = hasInputStartTime ?\n      formatSecondsToTimeString(this.inputStartTime!.ms) :\n      `<button id='input-start-time'>(Enter)</button>`;\n    const endTime = hasInputStartTime ?\n      `<button id='input-end-time'>(Enter)</button>` : '';\n    const setupInputStartTimeBtn = () => {\n      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.updateInputStartTime();\n      }\n    };\n    const setupInputEndTimeBtn = () => {\n      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.promoteRally();\n      }\n    };\n\n    // The latest rallyContext should only have score and not a rally.\n    const latestRallyCtx = rallyContexts[0];\n    const score = latestRallyCtx.scoreBeforeRally;\n    let latestPlot = latestRallyCtx.toPlot();\n    if (!latestPlot && 1 < rallyContexts.length) {\n      const prevRallyCtx = rallyContexts[1];\n      latestPlot = prevRallyCtx.getPlotForNextRally();\n    }\n\n    const row = [\n      new Cell(''),\n      new Cell(latestRallyCtx.toGameScoreStr()),\n      new Cell(score.toPointsStr()),\n\n      new Cell(startTime, makeOpts({\n        setupFunc: setupInputStartTimeBtn,\n        selected: cursorAtTop && !hasInputStartTime,\n      })),\n      new Cell(endTime, makeOpts({\n        setupFunc: setupInputEndTimeBtn,\n        selected: cursorAtTop && hasInputStartTime,\n        \n      })),\n      new Cell(''),\n      new Cell(''),\n      new Cell(''),\n      new Cell(latestPlot?.text, makeOpts({\n        alignRight: !latestPlot?.isMyPlot})),\n      new Cell(''),\n    ];\n    rows.push(row);\n\n    const ralliedContexts =  rallyContexts.slice(1);\n    ralliedContexts.forEach((rallyCtx, rallyIdx) => {\n      const rally = rallyCtx.rally;\n      const score = rallyCtx.scoreBeforeRally;\n      const rallyIsDoubleFault = rallyCtx.isDoubleFault();\n      const rallyIsPoint = (\n        rallyIsDoubleFault || rally.result === RallyResult.PtServer\n        || rally.result === RallyResult.PtReturner);\n      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||\n        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));\n      let plot;\n      if (rallyIsPoint) {\n        plot = rallyCtx.toPlot();\n      }\n      if (!plot && rallyIdx + 1 < ralliedContexts.length) {\n        const prevRallyCtx = ralliedContexts[rallyIdx + 1];\n        plot = prevRallyCtx.getPlotForNextRally();\n      }\n\n      const server = rally.isMyServe ? myName :\n          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;\n      const row = [\n        new Cell(\n          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(formatSecondsToTimeString(rally.startTime.ms)),\n        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),\n        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),\n            makeOpts({alignCenter: true})),\n        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({\n          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(plot?.text, makeOpts({\n          alignRight: !plot?.isMyPlot, removeTopBorder: !rallyIsPoint})),\n        new Cell(getRiskLevelStr(rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n      ];\n      row.forEach((cell, colIdx) => {\n        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);\n      });\n      rows.push(row);\n    });\n    return rows;\n  }\n}\n\nfunction mod(x = 0, y = 1) {\n  const res = x % y;\n  if (res < 0) {\n    return res + y;\n  }\n  return res;\n}\n\nfunction formatSecondsToTimeString(numMs: number): string {\n  const numSecs = Math.round(numMs / 1000)\n  const hours = Math.floor(numSecs / 3600);\n  const minutes = Math.floor((numSecs % 3600) / 60);\n  const seconds = numSecs % 60;\n\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n  const formattedSeconds = seconds.toString().padStart(2, '0');\n\n  if (hours === 0) {\n    return `${formattedMinutes}:${formattedSeconds}`;\n  } else {\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n\n// https://stackoverflow.com/a/54200105\nfunction extractYoutubeId(url: string){\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n   if (parts[2] === undefined) {\n    return {success: false, id: ''};\n   }\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};\n}\n\ncustomElements.define('gradebook-ui', GradebookUi)\n",
                "languageId": "typescript",
                "version": 2427,
                "state": 1
              }
            ],
            "request": "<file>\n\n<status>I applied your suggestions for this file and accepted them. Here is the updated file:</status>\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\nimport { matchKey } from \"../key-match/key_match\";\nimport { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";\nimport { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";\nimport { GradebookMgr } from \"./gradebook_mgr\";\nimport { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";\nimport { EphemeralBanner } from \"../ephemeral-banner\";\nimport { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";\nimport { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";\nimport { Time } from \"./models/Time\";\n\n\n// Top-level UI to handle everything\nexport class GradebookUi extends HTMLElement {\n  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;\n\n  private inputStartTime: Time | null = null;\n  private gradebookMgr = new GradebookMgr;\n\n  private matchSheetUi: MatchSheetUi = new MatchSheetUi;\n  private banner: EphemeralBanner = new EphemeralBanner;\n\n  connectedCallback() {\n    this.innerHTML = `Loading project data.`;\n\n    // IFrame steals the focus on click; is polling the best we can do?\n    setInterval(() => {\n      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {\n        const elt = document.activeElement as HTMLIFrameElement;\n        elt.blur();\n      }\n    }, 1000);\n  }\n\n  // Must call this to load the editor\n  async loadOrCreateProjectInUi(id: string) {\n    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);\n\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      .menu-container {\n        position: relative;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      .menu-content {\n        display: none;\n        position: absolute;\n        right: 0;\n        background-color: white;\n        min-width: 160px;\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n        z-index: 1;\n        border-radius: 4px;\n      }\n      .menu-container:hover .menu-content {\n        display: block;\n      }\n      .menu-content button {\n        width: 100%;\n        padding: 12px 16px;\n        border: none;\n        background: none;\n        text-align: left;\n        cursor: pointer;\n      }\n      .menu-content button:hover {\n        background-color: #f1f1f1;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <div class=\"menu-container\">\n          <button id='menu-button'>â˜° Menu</button>\n          <div class=\"menu-content\">\n            <button id='add-youtube-btn'>Add youtube video</button>\n          </div>\n        </div>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n    `;\n    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;\n    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;\n    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {\n      if (cellLoc.rowIdx < 2) {\n        return;\n      }\n      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;\n      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;\n      this.renderSheet();\n    });\n    this.renderSheet();\n\n    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;\n    this.updateYoutubePlayer();\n\n    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;\n    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();\n    return finalProjectId;\n  }\n\n  getVideoPlayerUi() {\n    return this.youtubePlayerUi\n  }\n  handleKeydown(evt: KeyboardEvent) {\n    this.handleKeydownWithoutChanges(evt);\n    this.handleKeydownWithSheetChanges(evt);\n  }\n\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    } else if (matchKey(evt, 'y')) {\n      this.obtainYoutubeUrl();\n    } else if (matchKey(evt, 'z')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);\n    } else if (matchKey(evt, 'x')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(0.2);\n    } else if (matchKey(evt, 'a')) {\n      this.getVideoPlayerUi().resetPlaybackRate();\n    } else if (matchKey(evt, 'l')) {\n      this.getVideoPlayerUi().move(1.5);\n    } else if (matchKey(evt, 'j')) {\n      this.getVideoPlayerUi().move(-3);\n    } else if (matchKey(evt, ';')) {\n      this.getVideoPlayerUi().move(5);\n    } else if (matchKey(evt, 'h')) {\n      this.getVideoPlayerUi().move(-5);\n    } else if (matchKey(evt, 'f')) {\n      const width = this.getVideoPlayerUi().getIframeWidth();\n      let wantWidth = width < 1000 ? width * 4 : width / 4;\n      this.getVideoPlayerUi().setIframeDims(wantWidth);\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  handleKeydownWithSheetChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'up')) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (matchKey(evt, 'down')) {\n      this.gradebookMgr.moveRallyIdx(1);\n    } else if (matchKey(evt, `\\\\`)) {\n      this.tabSelectedCell();\n    } else if (matchKey(evt, `shift+|`)) {\n      this.tabSelectedCell(true);\n    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {\n      this.gradebookMgr.moveColIdx(-1);\n    } else if (matchKey(evt, 'backspace')) {\n      this.gradebookMgr.removeCurrRally();\n    } else if (matchKey(evt, 'cmd+z')) {\n      if (this.inputStartTime) {\n        this.inputStartTime = null;\n      }\n    } else if (matchKey(evt, 'enter')) {\n      this.enterSelectedCell();\n    } else {\n      return;\n    }\n    this.renderSheet();\n    evt.preventDefault();\n  }\n\n  private enterSelectedCell() {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      if (this.inputStartTime) {\n        this.promoteRally();\n        return;\n      }\n      this.updateInputStartTime();\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === START_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.startTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === END_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.endTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === RESULT_COL) {\n      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {\n        this.gradebookMgr.moveColIdx(1);\n      } else {\n        this.gradebookMgr.moveRallyIdx(-1);\n      }\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      const name = prompt(`Enter server's name`);\n      if (name) {\n        if (rally.isMyServe) {\n          this.gradebookMgr.project.matchData.myName = name;\n        } else {\n          this.gradebookMgr.project.matchData.oppoName = name;\n        }\n      }\n    }\n  }\n  private tabSelectedCell(opposite = false) {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === RESULT_COL) {\n      const idx = rallyResultToIndex.get(rally.result);\n      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;\n      const nextIdx = next % rallyResultToIndex.size;\n      rally.result = rallyResultVals[nextIdx];\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      const ratingChange = opposite ? 1 : -1;\n      rally.stat.winnerLastShotQuality = mod(\n        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      const ratingChange = opposite ? -1 : 1;\n      rally.stat.loserPreviousShotQuality = mod(\n        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      rally.isMyServe = !rally.isMyServe;\n    }\n  }\n\n  private renderSheet() {\n    this.matchSheetUi.render(this.genSheet());\n  }\n\n  private obtainYoutubeUrl() {\n    const url = prompt('Enter url');\n    if (!url) {\n      return;\n    }\n    const res = extractYoutubeId(url);\n    if (!res.success) {\n      return;\n    }\n    this.gradebookMgr.project.matchData.urls.push(url);\n    this.updateYoutubePlayer();\n  }\n\n  private updateYoutubePlayer() {\n    if (this.gradebookMgr.project.matchData.urls.length < 1) {\n      return;\n    }\n    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);\n    if (!success) {\n      return;\n    }\n    this.youtubePlayerUi.initYoutubePlayer(id);\n  }\n\n  private getNowMs() {\n    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();\n    return Math.round(nowSec * 1000);\n  }\n\n  private updateInputStartTime() {\n    this.inputStartTime = new Time(this.getNowMs());\n    this.renderSheet();\n  }\n\n  private promoteRally() {\n    if (!this.inputStartTime) {\n      console.warn('cannot promote rally without inputStartTime');\n      return;\n    }\n    const nowMs = this.getNowMs();\n    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;\n    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);\n    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;\n    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;\n    this.gradebookMgr.project.cursor.rallyIdx = 0;\n\n    this.inputStartTime = null;\n    this.renderSheet();\n  }\n\n  private genSheet(): Cell[][] {\n    const project = this.gradebookMgr.project;\n    const cursor = project.cursor;\n    const rows = [];\n    const headerRow = [\n      new Cell('Server'),\n      new Cell('Set'),\n      new Cell('Game Score'),\n\n      new Cell('Start'),\n      new Cell('End'),\n      new Cell('Result'),\n      new Cell(`Winner's`),\n      // new Cell(`Winner's last shot`),\n      new Cell(`Loser's`),\n      // new Cell(`Loser's previous shot`),\n      new Cell('Plot'),\n      new Cell(`Winner's risk level`),\n    ];\n    rows.push(headerRow);\n\n    const myName = project.matchData.myName;\n    const oppoName = project.matchData.oppoName;\n    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();\n    rallyContexts.reverse();\n\n    const cursorAtTop = !this.gradebookMgr.getCurrentRally();\n    const hasInputStartTime = this.inputStartTime !== null;\n    const startTime = hasInputStartTime ?\n      formatSecondsToTimeString(this.inputStartTime!.ms) :\n      `<button id='input-start-time'>(Enter)</button>`;\n    const endTime = hasInputStartTime ?\n      `<button id='input-end-time'>(Enter)</button>` : '';\n    const setupInputStartTimeBtn = () => {\n      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.updateInputStartTime();\n      }\n    };\n    const setupInputEndTimeBtn = () => {\n      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.promoteRally();\n      }\n    };\n\n    // The latest rallyContext should only have score and not a rally.\n    const latestRallyCtx = rallyContexts[0];\n    const score = latestRallyCtx.scoreBeforeRally;\n    let latestPlot = latestRallyCtx.toPlot();\n    if (!latestPlot && 1 < rallyContexts.length) {\n      const prevRallyCtx = rallyContexts[1];\n      latestPlot = prevRallyCtx.getPlotForNextRally();\n    }\n\n    const row = [\n      new Cell(''),\n      new Cell(latestRallyCtx.toGameScoreStr()),\n      new Cell(score.toPointsStr()),\n\n      new Cell(startTime, makeOpts({\n        setupFunc: setupInputStartTimeBtn,\n        selected: cursorAtTop && !hasInputStartTime,\n      })),\n      new Cell(endTime, makeOpts({\n        setupFunc: setupInputEndTimeBtn,\n        selected: cursorAtTop && hasInputStartTime,\n        \n      })),\n      new Cell(''),\n      new Cell(''),\n      new Cell(''),\n      new Cell(latestPlot?.text, makeOpts({\n        alignRight: !latestPlot?.isMyPlot})),\n      new Cell(''),\n    ];\n    rows.push(row);\n\n    const ralliedContexts =  rallyContexts.slice(1);\n    ralliedContexts.forEach((rallyCtx, rallyIdx) => {\n      const rally = rallyCtx.rally;\n      const score = rallyCtx.scoreBeforeRally;\n      const rallyIsDoubleFault = rallyCtx.isDoubleFault();\n      const rallyIsPoint = (\n        rallyIsDoubleFault || rally.result === RallyResult.PtServer\n        || rally.result === RallyResult.PtReturner);\n      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||\n        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));\n      let plot;\n      if (rallyIsPoint) {\n        plot = rallyCtx.toPlot();\n      }\n      if (!plot && rallyIdx + 1 < ralliedContexts.length) {\n        const prevRallyCtx = ralliedContexts[rallyIdx + 1];\n        plot = prevRallyCtx.getPlotForNextRally();\n      }\n\n      const server = rally.isMyServe ? myName :\n          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;\n      const row = [\n        new Cell(\n          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(formatSecondsToTimeString(rally.startTime.ms)),\n        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),\n        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),\n            makeOpts({alignCenter: true})),\n        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({\n          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(plot?.text, makeOpts({\n          alignRight: !plot?.isMyPlot, removeTopBorder: !rallyIsPoint})),\n        new Cell(getRiskLevelStr(rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n      ];\n      row.forEach((cell, colIdx) => {\n        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);\n      });\n      rows.push(row);\n    });\n    return rows;\n  }\n}\n\nfunction mod(x = 0, y = 1) {\n  const res = x % y;\n  if (res < 0) {\n    return res + y;\n  }\n  return res;\n}\n\nfunction formatSecondsToTimeString(numMs: number): string {\n  const numSecs = Math.round(numMs / 1000)\n  const hours = Math.floor(numSecs / 3600);\n  const minutes = Math.floor((numSecs % 3600) / 60);\n  const seconds = numSecs % 60;\n\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n  const formattedSeconds = seconds.toString().padStart(2, '0');\n\n  if (hours === 0) {\n    return `${formattedMinutes}:${formattedSeconds}`;\n  } else {\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n\n// https://stackoverflow.com/a/54200105\nfunction extractYoutubeId(url: string){\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n   if (parts[2] === undefined) {\n    return {success: false, id: ''};\n   }\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};\n}\n\ncustomElements.define('gradebook-ui', GradebookUi)\n```\n</file>\n\n<reminder>\nAvoid repeating existing code, instead use `// ...existing code...` comments to represent regions of unchanged code.\nEach file's code block must start with a comment containing the filepath. This includes Markdown files.\n</reminder>\n<prompt>\nAdd the keyboard shortcut cmd+shift+s to clone the current project.\n\n</prompt>",
            "response": "Let me help you add the clone project functionality. Here's the step-by-step solution:\n\n1. Add handler for cmd+shift+s keyboard shortcut in handleKeydownWithoutChanges\n2. Add a method to handle project cloning\n3. Use the GradebookMgr to create a new project with the current data\n\n### /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n\nAdd the clone project functionality:\n\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n// ...existing code...\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    // ...existing code...\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else if (matchKey(evt, 'cmd+shift+s')) {\n      evt.preventDefault();\n      await this.cloneProject();\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const newId = crypto.randomUUID();\n    const project = this.gradebookMgr.project;\n    const clonedProject = {\n      ...project,\n      id: newId,\n    };\n    \n    await this.gradebookMgr.saveProject(clonedProject);\n    window.location.href = `${window.location.pathname}?id=${newId}`;\n  }\n// ...existing code...\n```\n\nThis adds:\n1. A new keyboard shortcut handler for cmd+shift+s\n2. A cloneProject method that:\n   - Creates a new unique ID\n   - Clones the current project with the new ID\n   - Saves it\n   - Redirects to the new project URL"
          },
          "codeBlocks": [
            {
              "code": "// ...existing code...\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    // ...existing code...\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else if (matchKey(evt, 'cmd+shift+s')) {\n      evt.preventDefault();\n      await this.cloneProject();\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const newId = crypto.randomUUID();\n    const project = this.gradebookMgr.project;\n    const clonedProject = {\n      ...project,\n      id: newId,\n    };\n    \n    await this.gradebookMgr.saveProject(clonedProject);\n    window.location.href = `${window.location.pathname}?id=${newId}`;\n  }\n// ...existing code...\n",
              "resource": {
                "$mid": 1,
                "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "scheme": "file"
              },
              "language": "typescript",
              "markdownBeforeBlock": "Let me help you add the clone project functionality. Here's the step-by-step solution:\n\n1. Add handler for cmd+shift+s keyboard shortcut in handleKeydownWithoutChanges\n2. Add a method to handle project cloning\n3. Use the GradebookMgr to create a new project with the current data\n\n### [gradebook_ui.ts](file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts)\n\nAdd the clone project functionality:\n\n"
            }
          ],
          "messages": [
            {
              "role": "user",
              "content": "Add the keyboard shortcut cmd+shift+s to clone the current project.\n"
            },
            {
              "role": "assistant",
              "content": "Let me help you add the clone project functionality. Here's the step-by-step solution:\n\n1. Add handler for cmd+shift+s keyboard shortcut in handleKeydownWithoutChanges\n2. Add a method to handle project cloning\n3. Use the GradebookMgr to create a new project with the current data\n\n### /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n\nAdd the clone project functionality:\n\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n// ...existing code...\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    // ...existing code...\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else if (matchKey(evt, 'cmd+shift+s')) {\n      evt.preventDefault();\n      await this.cloneProject();\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const newId = crypto.randomUUID();\n    const project = this.gradebookMgr.project;\n    const clonedProject = {\n      ...project,\n      id: newId,\n    };\n    \n    await this.gradebookMgr.saveProject(clonedProject);\n    window.location.href = `${window.location.pathname}?id=${newId}`;\n  }\n// ...existing code...\n```\n\nThis adds:\n1. A new keyboard shortcut handler for cmd+shift+s\n2. A cloneProject method that:\n   - Creates a new unique ID\n   - Clones the current project with the new ID\n   - Saves it\n   - Redirects to the new project URL"
            }
          ],
          "modelMessageId": "4fdf8435-ea92-43dd-a311-76d3dd016144",
          "responseId": "df8f8bbd-7dbb-46ac-9167-2acfa50f9124",
          "sessionId": "9ebcb46b-2747-4861-8196-e4505dcab712",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "workingSet": [
        {
          "$mid": 1,
          "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "scheme": "file"
        }
      ],
      "contentReferences": [],
      "codeCitations": [],
      "timestamp": 1735670221489
    },
    {
      "requestId": "request_f1f6d5f1-8366-4fbd-9c51-bab375abb302",
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 163
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 5,
              "endColumn": 29
            },
            "text": "Fix:\n- newId should use current date's string\n- clone the project by using toJson and deserialize\n- id field is wrong, use projectInfo\n- saveProject should be save",
            "kind": "text"
          }
        ],
        "text": "Fix:\n- newId should use current date's string\n- clone the project by using toJson and deserialize\n- id field is wrong, use projectInfo\n- saveProject should be save"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "scheme": "file"
            },
            "id": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "name": "gradebook_ui.ts",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "I'll help fix the cloning implementation. Here's the step-by-step solution:\n\n1. Change newId generation to use date-based ID\n2. Use proper serialization/deserialization methods\n3. Fix the project structure and save method\n\n### [gradebook_ui.ts](file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts)\n\nUpdate the cloneProject method:\n\n```typescript\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "scheme": "file"
          }
        },
        {
          "value": "// ...existing code...\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const date = new Date();\n    const newId = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}-${date.getHours().toString().padStart(2, '0')}-${date.getMinutes().toString().padStart(2, '0')}-${date.getSeconds().toString().padStart(2, '0')}`;\n    \n    // Clone by serializing and deserializing\n    const projectJson = this.gradebookMgr.project.toJson();\n    const clonedProject = this.gradebookMgr.project.deserialize(projectJson);\n    clonedProject.projectInfo.id = newId;\n    \n    await this.gradebookMgr.save(clonedProject);\n    window.location.href = `${window.location.pathname}?id=${newId}`;\n  }\n// ...existing code...\n```\n\nThe changes:\n1. Generate newId using formatted date string instead of UUID\n2. Use project's toJson() and deserialize() methods for proper cloning\n3. Set id on projectInfo instead of directly on project\n4. Use the correct save method from gradebookMgr",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "scheme": "file"
          },
          "edits": [
            [],
            [
              {
                "text": "import { matchKey } from \"../key-match/key_match\";",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { GradebookMgr } from \"./gradebook_mgr\";",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { EphemeralBanner } from \"../ephemeral-banner\";",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { Time } from \"./models/Time\";",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "// Top-level UI to handle everything",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "export class GradebookUi extends HTMLElement {",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private inputStartTime: Time | null = null;",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private gradebookMgr = new GradebookMgr;",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private matchSheetUi: MatchSheetUi = new MatchSheetUi;",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private banner: EphemeralBanner = new EphemeralBanner;",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  connectedCallback() {",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.innerHTML = `Loading project data.`;",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // IFrame steals the focus on click; is polling the best we can do?",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    setInterval(() => {",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        const elt = document.activeElement as HTMLIFrameElement;",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        elt.blur();",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }, 1000);",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  // Must call this to load the editor",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  async loadOrCreateProjectInUi(id: string) {",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.innerHTML = `",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <style>",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      #youtube-container {",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: sticky;",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        top: 0;",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: flex;",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        align-items: flex-start;",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-container {",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: relative;",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      #menu-button {",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background: none;",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border: none;",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        font-size: 24px;",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        padding: 10px;",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cursor: pointer;",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        margin-left: 10px;",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-content {",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: none;",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: absolute;",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        right: 0;",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background-color: white;",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        min-width: 160px;",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        z-index: 1;",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border-radius: 4px;",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-container:hover .menu-content {",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: block;",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-content button {",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        width: 100%;",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        padding: 12px 16px;",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border: none;",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background: none;",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        text-align: left;",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cursor: pointer;",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-content button:hover {",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background-color: #f1f1f1;",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      </style>",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <ephemeral-banner></ephemeral-banner>",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <div id='youtube-container'>",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        <youtube-player-ui></youtube-player-ui>",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        <div class=\"menu-container\">",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          <button id='menu-button'>â˜° Menu</button>",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          <div class=\"menu-content\">",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            <button id='add-youtube-btn'>Add youtube video</button>",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          </div>",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        </div>",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      </div>",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <div><match-sheet-ui></match-sheet-ui></div>",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    `;",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (cellLoc.rowIdx < 2) {",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return;",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.renderSheet();",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.updateYoutubePlayer();",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return finalProjectId;",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  getVideoPlayerUi() {",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return this.youtubePlayerUi",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  handleKeydown(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.handleKeydownWithoutChanges(evt);",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.handleKeydownWithSheetChanges(evt);",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  async handleKeydownWithoutChanges(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().toggleVideoPlay();",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'y')) {",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.obtainYoutubeUrl();",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'z')) {",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'x')) {",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().incrementPlaybackRate(0.2);",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'a')) {",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().resetPlaybackRate();",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'l')) {",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(1.5);",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'j')) {",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(-3);",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, ';')) {",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(5);",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'h')) {",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(-5);",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'f')) {",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const width = this.getVideoPlayerUi().getIframeWidth();",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      let wantWidth = width < 1000 ? width * 4 : width / 4;",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().setIframeDims(wantWidth);",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+s')) {",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      evt.preventDefault();",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.banner.inProgress('Saving');",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const failureMsg = await this.gradebookMgr.save();",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (failureMsg) {",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.banner.failure(failureMsg);",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.banner.success('Saved!');",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+shift+s')) {",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      evt.preventDefault();",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      await this.cloneProject();",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    evt.preventDefault();",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private async cloneProject() {",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.banner.inProgress('Cloning project...');",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const date = new Date();",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const newId = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}-${date.getHours().toString().padStart(2, '0')}-${date.getMinutes().toString().padStart(2, '0')}-${date.getSeconds().toString().padStart(2, '0')}`;",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // Clone by serializing and deserializing",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const projectJson = this.gradebookMgr.project.toJson();",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const clonedProject = this.gradebookMgr.project.deserialize(projectJson);",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    clonedProject.projectInfo.id = newId;",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    await this.gradebookMgr.save(clonedProject);",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    window.location.href = `${window.location.pathname}?id=${newId}`;",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  handleKeydownWithSheetChanges(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (matchKey(evt, 'up')) {",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'down')) {",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(1);",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, `\\\\`)) {",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.tabSelectedCell();",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, `shift+|`)) {",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.tabSelectedCell(true);",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(-1);",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'backspace')) {",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.removeCurrRally();",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+z')) {",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (this.inputStartTime) {",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.inputStartTime = null;",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'enter')) {",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.enterSelectedCell();",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    evt.preventDefault();",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private enterSelectedCell() {",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rally = this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!rally) {",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (this.inputStartTime) {",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.promoteRally();",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return;",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.updateInputStartTime();",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = this.gradebookMgr.project.cursor;",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (cursor.colIdx === START_TIME_COL) {",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.youtubePlayerUi.moveTo(rally.startTime.ms);",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === END_TIME_COL) {",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.youtubePlayerUi.moveTo(rally.endTime.ms);",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === RESULT_COL) {",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === SERVER_COL) {",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const name = prompt(`Enter server's name`);",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (name) {",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if (rally.isMyServe) {",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          this.gradebookMgr.project.matchData.myName = name;",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1,
                  "endLineNumber": 236,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        } else {",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1,
                  "endLineNumber": 237,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          this.gradebookMgr.project.matchData.oppoName = name;",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1,
                  "endLineNumber": 238,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1,
                  "endLineNumber": 239,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1,
                  "endLineNumber": 240,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1,
                  "endLineNumber": 241,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1,
                  "endLineNumber": 242,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private tabSelectedCell(opposite = false) {",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1,
                  "endLineNumber": 243,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rally = this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 244,
                  "startColumn": 1,
                  "endLineNumber": 244,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!rally) {",
                "range": {
                  "startLineNumber": 245,
                  "startColumn": 1,
                  "endLineNumber": 245,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 246,
                  "startColumn": 1,
                  "endLineNumber": 246,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 247,
                  "startColumn": 1,
                  "endLineNumber": 247,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = this.gradebookMgr.project.cursor;",
                "range": {
                  "startLineNumber": 248,
                  "startColumn": 1,
                  "endLineNumber": 248,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (cursor.colIdx === RESULT_COL) {",
                "range": {
                  "startLineNumber": 249,
                  "startColumn": 1,
                  "endLineNumber": 249,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const idx = rallyResultToIndex.get(rally.result);",
                "range": {
                  "startLineNumber": 250,
                  "startColumn": 1,
                  "endLineNumber": 250,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;",
                "range": {
                  "startLineNumber": 251,
                  "startColumn": 1,
                  "endLineNumber": 251,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const nextIdx = next % rallyResultToIndex.size;",
                "range": {
                  "startLineNumber": 252,
                  "startColumn": 1,
                  "endLineNumber": 252,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.result = rallyResultVals[nextIdx];",
                "range": {
                  "startLineNumber": 253,
                  "startColumn": 1,
                  "endLineNumber": 253,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {",
                "range": {
                  "startLineNumber": 254,
                  "startColumn": 1,
                  "endLineNumber": 254,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const ratingChange = opposite ? 1 : -1;",
                "range": {
                  "startLineNumber": 255,
                  "startColumn": 1,
                  "endLineNumber": 255,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.stat.winnerLastShotQuality = mod(",
                "range": {
                  "startLineNumber": 256,
                  "startColumn": 1,
                  "endLineNumber": 256,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);",
                "range": {
                  "startLineNumber": 257,
                  "startColumn": 1,
                  "endLineNumber": 257,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {",
                "range": {
                  "startLineNumber": 258,
                  "startColumn": 1,
                  "endLineNumber": 258,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const ratingChange = opposite ? -1 : 1;",
                "range": {
                  "startLineNumber": 259,
                  "startColumn": 1,
                  "endLineNumber": 259,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.stat.loserPreviousShotQuality = mod(",
                "range": {
                  "startLineNumber": 260,
                  "startColumn": 1,
                  "endLineNumber": 260,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);",
                "range": {
                  "startLineNumber": 261,
                  "startColumn": 1,
                  "endLineNumber": 261,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === SERVER_COL) {",
                "range": {
                  "startLineNumber": 262,
                  "startColumn": 1,
                  "endLineNumber": 262,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.isMyServe = !rally.isMyServe;",
                "range": {
                  "startLineNumber": 263,
                  "startColumn": 1,
                  "endLineNumber": 263,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 264,
                  "startColumn": 1,
                  "endLineNumber": 264,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 265,
                  "startColumn": 1,
                  "endLineNumber": 265,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 266,
                  "startColumn": 1,
                  "endLineNumber": 266,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private renderSheet() {",
                "range": {
                  "startLineNumber": 267,
                  "startColumn": 1,
                  "endLineNumber": 267,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi.render(this.genSheet());",
                "range": {
                  "startLineNumber": 268,
                  "startColumn": 1,
                  "endLineNumber": 268,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 269,
                  "startColumn": 1,
                  "endLineNumber": 269,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 270,
                  "startColumn": 1,
                  "endLineNumber": 270,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private obtainYoutubeUrl() {",
                "range": {
                  "startLineNumber": 271,
                  "startColumn": 1,
                  "endLineNumber": 271,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const url = prompt('Enter url');",
                "range": {
                  "startLineNumber": 272,
                  "startColumn": 1,
                  "endLineNumber": 272,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!url) {",
                "range": {
                  "startLineNumber": 273,
                  "startColumn": 1,
                  "endLineNumber": 273,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 274,
                  "startColumn": 1,
                  "endLineNumber": 274,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 275,
                  "startColumn": 1,
                  "endLineNumber": 275,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const res = extractYoutubeId(url);",
                "range": {
                  "startLineNumber": 276,
                  "startColumn": 1,
                  "endLineNumber": 276,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!res.success) {",
                "range": {
                  "startLineNumber": 277,
                  "startColumn": 1,
                  "endLineNumber": 277,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 278,
                  "startColumn": 1,
                  "endLineNumber": 278,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 279,
                  "startColumn": 1,
                  "endLineNumber": 279,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.matchData.urls.push(url);",
                "range": {
                  "startLineNumber": 280,
                  "startColumn": 1,
                  "endLineNumber": 280,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.updateYoutubePlayer();",
                "range": {
                  "startLineNumber": 281,
                  "startColumn": 1,
                  "endLineNumber": 281,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 282,
                  "startColumn": 1,
                  "endLineNumber": 282,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 283,
                  "startColumn": 1,
                  "endLineNumber": 283,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private updateYoutubePlayer() {",
                "range": {
                  "startLineNumber": 284,
                  "startColumn": 1,
                  "endLineNumber": 284,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (this.gradebookMgr.project.matchData.urls.length < 1) {",
                "range": {
                  "startLineNumber": 285,
                  "startColumn": 1,
                  "endLineNumber": 285,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 286,
                  "startColumn": 1,
                  "endLineNumber": 286,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 287,
                  "startColumn": 1,
                  "endLineNumber": 287,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);",
                "range": {
                  "startLineNumber": 288,
                  "startColumn": 1,
                  "endLineNumber": 288,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!success) {",
                "range": {
                  "startLineNumber": 289,
                  "startColumn": 1,
                  "endLineNumber": 289,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 290,
                  "startColumn": 1,
                  "endLineNumber": 290,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 291,
                  "startColumn": 1,
                  "endLineNumber": 291,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.youtubePlayerUi.initYoutubePlayer(id);",
                "range": {
                  "startLineNumber": 292,
                  "startColumn": 1,
                  "endLineNumber": 292,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 293,
                  "startColumn": 1,
                  "endLineNumber": 293,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 294,
                  "startColumn": 1,
                  "endLineNumber": 294,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private getNowMs() {",
                "range": {
                  "startLineNumber": 295,
                  "startColumn": 1,
                  "endLineNumber": 295,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();",
                "range": {
                  "startLineNumber": 296,
                  "startColumn": 1,
                  "endLineNumber": 296,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return Math.round(nowSec * 1000);",
                "range": {
                  "startLineNumber": 297,
                  "startColumn": 1,
                  "endLineNumber": 297,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 298,
                  "startColumn": 1,
                  "endLineNumber": 298,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 299,
                  "startColumn": 1,
                  "endLineNumber": 299,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private updateInputStartTime() {",
                "range": {
                  "startLineNumber": 300,
                  "startColumn": 1,
                  "endLineNumber": 300,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.inputStartTime = new Time(this.getNowMs());",
                "range": {
                  "startLineNumber": 301,
                  "startColumn": 1,
                  "endLineNumber": 301,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 302,
                  "startColumn": 1,
                  "endLineNumber": 302,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 303,
                  "startColumn": 1,
                  "endLineNumber": 303,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 304,
                  "startColumn": 1,
                  "endLineNumber": 304,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private promoteRally() {",
                "range": {
                  "startLineNumber": 305,
                  "startColumn": 1,
                  "endLineNumber": 305,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!this.inputStartTime) {",
                "range": {
                  "startLineNumber": 306,
                  "startColumn": 1,
                  "endLineNumber": 306,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      console.warn('cannot promote rally without inputStartTime');",
                "range": {
                  "startLineNumber": 307,
                  "startColumn": 1,
                  "endLineNumber": 307,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 308,
                  "startColumn": 1,
                  "endLineNumber": 308,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 309,
                  "startColumn": 1,
                  "endLineNumber": 309,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const nowMs = this.getNowMs();",
                "range": {
                  "startLineNumber": 310,
                  "startColumn": 1,
                  "endLineNumber": 310,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;",
                "range": {
                  "startLineNumber": 311,
                  "startColumn": 1,
                  "endLineNumber": 311,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);",
                "range": {
                  "startLineNumber": 312,
                  "startColumn": 1,
                  "endLineNumber": 312,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;",
                "range": {
                  "startLineNumber": 313,
                  "startColumn": 1,
                  "endLineNumber": 313,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;",
                "range": {
                  "startLineNumber": 314,
                  "startColumn": 1,
                  "endLineNumber": 314,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.rallyIdx = 0;",
                "range": {
                  "startLineNumber": 315,
                  "startColumn": 1,
                  "endLineNumber": 315,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 316,
                  "startColumn": 1,
                  "endLineNumber": 316,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.inputStartTime = null;",
                "range": {
                  "startLineNumber": 317,
                  "startColumn": 1,
                  "endLineNumber": 317,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 318,
                  "startColumn": 1,
                  "endLineNumber": 318,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 319,
                  "startColumn": 1,
                  "endLineNumber": 319,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 320,
                  "startColumn": 1,
                  "endLineNumber": 320,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private genSheet(): Cell[][] {",
                "range": {
                  "startLineNumber": 321,
                  "startColumn": 1,
                  "endLineNumber": 321,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const project = this.gradebookMgr.project;",
                "range": {
                  "startLineNumber": 322,
                  "startColumn": 1,
                  "endLineNumber": 322,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = project.cursor;",
                "range": {
                  "startLineNumber": 323,
                  "startColumn": 1,
                  "endLineNumber": 323,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rows = [];",
                "range": {
                  "startLineNumber": 324,
                  "startColumn": 1,
                  "endLineNumber": 324,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const headerRow = [",
                "range": {
                  "startLineNumber": 325,
                  "startColumn": 1,
                  "endLineNumber": 325,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Server'),",
                "range": {
                  "startLineNumber": 326,
                  "startColumn": 1,
                  "endLineNumber": 326,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Set'),",
                "range": {
                  "startLineNumber": 327,
                  "startColumn": 1,
                  "endLineNumber": 327,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Game Score'),",
                "range": {
                  "startLineNumber": 328,
                  "startColumn": 1,
                  "endLineNumber": 328,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 329,
                  "startColumn": 1,
                  "endLineNumber": 329,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Start'),",
                "range": {
                  "startLineNumber": 330,
                  "startColumn": 1,
                  "endLineNumber": 330,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('End'),",
                "range": {
                  "startLineNumber": 331,
                  "startColumn": 1,
                  "endLineNumber": 331,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Result'),",
                "range": {
                  "startLineNumber": 332,
                  "startColumn": 1,
                  "endLineNumber": 332,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Winner's`),",
                "range": {
                  "startLineNumber": 333,
                  "startColumn": 1,
                  "endLineNumber": 333,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      // new Cell(`Winner's last shot`),",
                "range": {
                  "startLineNumber": 334,
                  "startColumn": 1,
                  "endLineNumber": 334,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Loser's`),",
                "range": {
                  "startLineNumber": 335,
                  "startColumn": 1,
                  "endLineNumber": 335,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      // new Cell(`Loser's previous shot`),",
                "range": {
                  "startLineNumber": 336,
                  "startColumn": 1,
                  "endLineNumber": 336,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Plot'),",
                "range": {
                  "startLineNumber": 337,
                  "startColumn": 1,
                  "endLineNumber": 337,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Winner's risk level`),",
                "range": {
                  "startLineNumber": 338,
                  "startColumn": 1,
                  "endLineNumber": 338,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ];",
                "range": {
                  "startLineNumber": 339,
                  "startColumn": 1,
                  "endLineNumber": 339,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rows.push(headerRow);",
                "range": {
                  "startLineNumber": 340,
                  "startColumn": 1,
                  "endLineNumber": 340,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 341,
                  "startColumn": 1,
                  "endLineNumber": 341,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const myName = project.matchData.myName;",
                "range": {
                  "startLineNumber": 342,
                  "startColumn": 1,
                  "endLineNumber": 342,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const oppoName = project.matchData.oppoName;",
                "range": {
                  "startLineNumber": 343,
                  "startColumn": 1,
                  "endLineNumber": 343,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();",
                "range": {
                  "startLineNumber": 344,
                  "startColumn": 1,
                  "endLineNumber": 344,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rallyContexts.reverse();",
                "range": {
                  "startLineNumber": 345,
                  "startColumn": 1,
                  "endLineNumber": 345,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 346,
                  "startColumn": 1,
                  "endLineNumber": 346,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursorAtTop = !this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 347,
                  "startColumn": 1,
                  "endLineNumber": 347,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const hasInputStartTime = this.inputStartTime !== null;",
                "range": {
                  "startLineNumber": 348,
                  "startColumn": 1,
                  "endLineNumber": 348,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const startTime = hasInputStartTime ?",
                "range": {
                  "startLineNumber": 349,
                  "startColumn": 1,
                  "endLineNumber": 349,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      formatSecondsToTimeString(this.inputStartTime!.ms) :",
                "range": {
                  "startLineNumber": 350,
                  "startColumn": 1,
                  "endLineNumber": 350,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      `<button id='input-start-time'>(Enter)</button>`;",
                "range": {
                  "startLineNumber": 351,
                  "startColumn": 1,
                  "endLineNumber": 351,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const endTime = hasInputStartTime ?",
                "range": {
                  "startLineNumber": 352,
                  "startColumn": 1,
                  "endLineNumber": 352,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      `<button id='input-end-time'>(Enter)</button>` : '';",
                "range": {
                  "startLineNumber": 353,
                  "startColumn": 1,
                  "endLineNumber": 353,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const setupInputStartTimeBtn = () => {",
                "range": {
                  "startLineNumber": 354,
                  "startColumn": 1,
                  "endLineNumber": 354,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 355,
                  "startColumn": 1,
                  "endLineNumber": 355,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (btn) {",
                "range": {
                  "startLineNumber": 356,
                  "startColumn": 1,
                  "endLineNumber": 356,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        btn.onclick = () => this.updateInputStartTime();",
                "range": {
                  "startLineNumber": 357,
                  "startColumn": 1,
                  "endLineNumber": 357,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 358,
                  "startColumn": 1,
                  "endLineNumber": 358,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    };",
                "range": {
                  "startLineNumber": 359,
                  "startColumn": 1,
                  "endLineNumber": 359,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const setupInputEndTimeBtn = () => {",
                "range": {
                  "startLineNumber": 360,
                  "startColumn": 1,
                  "endLineNumber": 360,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 361,
                  "startColumn": 1,
                  "endLineNumber": 361,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (btn) {",
                "range": {
                  "startLineNumber": 362,
                  "startColumn": 1,
                  "endLineNumber": 362,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        btn.onclick = () => this.promoteRally();",
                "range": {
                  "startLineNumber": 363,
                  "startColumn": 1,
                  "endLineNumber": 363,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 364,
                  "startColumn": 1,
                  "endLineNumber": 364,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    };",
                "range": {
                  "startLineNumber": 365,
                  "startColumn": 1,
                  "endLineNumber": 365,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 366,
                  "startColumn": 1,
                  "endLineNumber": 366,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // The latest rallyContext should only have score and not a rally.",
                "range": {
                  "startLineNumber": 367,
                  "startColumn": 1,
                  "endLineNumber": 367,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const latestRallyCtx = rallyContexts[0];",
                "range": {
                  "startLineNumber": 368,
                  "startColumn": 1,
                  "endLineNumber": 368,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const score = latestRallyCtx.scoreBeforeRally;",
                "range": {
                  "startLineNumber": 369,
                  "startColumn": 1,
                  "endLineNumber": 369,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    let latestPlot = latestRallyCtx.toPlot();",
                "range": {
                  "startLineNumber": 370,
                  "startColumn": 1,
                  "endLineNumber": 370,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!latestPlot && 1 < rallyContexts.length) {",
                "range": {
                  "startLineNumber": 371,
                  "startColumn": 1,
                  "endLineNumber": 371,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const prevRallyCtx = rallyContexts[1];",
                "range": {
                  "startLineNumber": 372,
                  "startColumn": 1,
                  "endLineNumber": 372,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      latestPlot = prevRallyCtx.getPlotForNextRally();",
                "range": {
                  "startLineNumber": 373,
                  "startColumn": 1,
                  "endLineNumber": 373,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 374,
                  "startColumn": 1,
                  "endLineNumber": 374,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 375,
                  "startColumn": 1,
                  "endLineNumber": 375,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const row = [",
                "range": {
                  "startLineNumber": 376,
                  "startColumn": 1,
                  "endLineNumber": 376,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 377,
                  "startColumn": 1,
                  "endLineNumber": 377,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(latestRallyCtx.toGameScoreStr()),",
                "range": {
                  "startLineNumber": 378,
                  "startColumn": 1,
                  "endLineNumber": 378,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(score.toPointsStr()),",
                "range": {
                  "startLineNumber": 379,
                  "startColumn": 1,
                  "endLineNumber": 379,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 380,
                  "startColumn": 1,
                  "endLineNumber": 380,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(startTime, makeOpts({",
                "range": {
                  "startLineNumber": 381,
                  "startColumn": 1,
                  "endLineNumber": 381,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        setupFunc: setupInputStartTimeBtn,",
                "range": {
                  "startLineNumber": 382,
                  "startColumn": 1,
                  "endLineNumber": 382,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        selected: cursorAtTop && !hasInputStartTime,",
                "range": {
                  "startLineNumber": 383,
                  "startColumn": 1,
                  "endLineNumber": 383,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      })),",
                "range": {
                  "startLineNumber": 384,
                  "startColumn": 1,
                  "endLineNumber": 384,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(endTime, makeOpts({",
                "range": {
                  "startLineNumber": 385,
                  "startColumn": 1,
                  "endLineNumber": 385,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        setupFunc: setupInputEndTimeBtn,",
                "range": {
                  "startLineNumber": 386,
                  "startColumn": 1,
                  "endLineNumber": 386,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        selected: cursorAtTop && hasInputStartTime,",
                "range": {
                  "startLineNumber": 387,
                  "startColumn": 1,
                  "endLineNumber": 387,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 388,
                  "startColumn": 1,
                  "endLineNumber": 388,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      })),",
                "range": {
                  "startLineNumber": 389,
                  "startColumn": 1,
                  "endLineNumber": 389,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 390,
                  "startColumn": 1,
                  "endLineNumber": 390,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 391,
                  "startColumn": 1,
                  "endLineNumber": 391,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 392,
                  "startColumn": 1,
                  "endLineNumber": 392,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(latestPlot?.text, makeOpts({",
                "range": {
                  "startLineNumber": 393,
                  "startColumn": 1,
                  "endLineNumber": 393,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !latestPlot?.isMyPlot})),",
                "range": {
                  "startLineNumber": 394,
                  "startColumn": 1,
                  "endLineNumber": 394,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 395,
                  "startColumn": 1,
                  "endLineNumber": 395,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ];",
                "range": {
                  "startLineNumber": 396,
                  "startColumn": 1,
                  "endLineNumber": 396,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rows.push(row);",
                "range": {
                  "startLineNumber": 397,
                  "startColumn": 1,
                  "endLineNumber": 397,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 398,
                  "startColumn": 1,
                  "endLineNumber": 398,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const ralliedContexts =  rallyContexts.slice(1);",
                "range": {
                  "startLineNumber": 399,
                  "startColumn": 1,
                  "endLineNumber": 399,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ralliedContexts.forEach((rallyCtx, rallyIdx) => {",
                "range": {
                  "startLineNumber": 400,
                  "startColumn": 1,
                  "endLineNumber": 400,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rally = rallyCtx.rally;",
                "range": {
                  "startLineNumber": 401,
                  "startColumn": 1,
                  "endLineNumber": 401,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const score = rallyCtx.scoreBeforeRally;",
                "range": {
                  "startLineNumber": 402,
                  "startColumn": 1,
                  "endLineNumber": 402,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rallyIsDoubleFault = rallyCtx.isDoubleFault();",
                "range": {
                  "startLineNumber": 403,
                  "startColumn": 1,
                  "endLineNumber": 403,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rallyIsPoint = (",
                "range": {
                  "startLineNumber": 404,
                  "startColumn": 1,
                  "endLineNumber": 404,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rallyIsDoubleFault || rally.result === RallyResult.PtServer",
                "range": {
                  "startLineNumber": 405,
                  "startColumn": 1,
                  "endLineNumber": 405,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        || rally.result === RallyResult.PtReturner);",
                "range": {
                  "startLineNumber": 406,
                  "startColumn": 1,
                  "endLineNumber": 406,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||",
                "range": {
                  "startLineNumber": 407,
                  "startColumn": 1,
                  "endLineNumber": 407,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));",
                "range": {
                  "startLineNumber": 408,
                  "startColumn": 1,
                  "endLineNumber": 408,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      let plot;",
                "range": {
                  "startLineNumber": 409,
                  "startColumn": 1,
                  "endLineNumber": 409,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (rallyIsPoint) {",
                "range": {
                  "startLineNumber": 410,
                  "startColumn": 1,
                  "endLineNumber": 410,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        plot = rallyCtx.toPlot();",
                "range": {
                  "startLineNumber": 411,
                  "startColumn": 1,
                  "endLineNumber": 411,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 412,
                  "startColumn": 1,
                  "endLineNumber": 412,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (!plot && rallyIdx + 1 < ralliedContexts.length) {",
                "range": {
                  "startLineNumber": 413,
                  "startColumn": 1,
                  "endLineNumber": 413,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        const prevRallyCtx = ralliedContexts[rallyIdx + 1];",
                "range": {
                  "startLineNumber": 414,
                  "startColumn": 1,
                  "endLineNumber": 414,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        plot = prevRallyCtx.getPlotForNextRally();",
                "range": {
                  "startLineNumber": 415,
                  "startColumn": 1,
                  "endLineNumber": 415,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 416,
                  "startColumn": 1,
                  "endLineNumber": 416,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 417,
                  "startColumn": 1,
                  "endLineNumber": 417,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const server = rally.isMyServe ? myName :",
                "range": {
                  "startLineNumber": 418,
                  "startColumn": 1,
                  "endLineNumber": 418,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;",
                "range": {
                  "startLineNumber": 419,
                  "startColumn": 1,
                  "endLineNumber": 419,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const row = [",
                "range": {
                  "startLineNumber": 420,
                  "startColumn": 1,
                  "endLineNumber": 420,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(",
                "range": {
                  "startLineNumber": 421,
                  "startColumn": 1,
                  "endLineNumber": 421,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 422,
                  "startColumn": 1,
                  "endLineNumber": 422,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 423,
                  "startColumn": 1,
                  "endLineNumber": 423,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 424,
                  "startColumn": 1,
                  "endLineNumber": 424,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(formatSecondsToTimeString(rally.startTime.ms)),",
                "range": {
                  "startLineNumber": 425,
                  "startColumn": 1,
                  "endLineNumber": 425,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),",
                "range": {
                  "startLineNumber": 426,
                  "startColumn": 1,
                  "endLineNumber": 426,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),",
                "range": {
                  "startLineNumber": 427,
                  "startColumn": 1,
                  "endLineNumber": 427,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            makeOpts({alignCenter: true})),",
                "range": {
                  "startLineNumber": 428,
                  "startColumn": 1,
                  "endLineNumber": 428,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 429,
                  "startColumn": 1,
                  "endLineNumber": 429,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 430,
                  "startColumn": 1,
                  "endLineNumber": 430,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 431,
                  "startColumn": 1,
                  "endLineNumber": 431,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 432,
                  "startColumn": 1,
                  "endLineNumber": 432,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(plot?.text, makeOpts({",
                "range": {
                  "startLineNumber": 433,
                  "startColumn": 1,
                  "endLineNumber": 433,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          alignRight: !plot?.isMyPlot, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 434,
                  "startColumn": 1,
                  "endLineNumber": 434,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getRiskLevelStr(rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 435,
                  "startColumn": 1,
                  "endLineNumber": 435,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 436,
                  "startColumn": 1,
                  "endLineNumber": 436,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      ];",
                "range": {
                  "startLineNumber": 437,
                  "startColumn": 1,
                  "endLineNumber": 437,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      row.forEach((cell, colIdx) => {",
                "range": {
                  "startLineNumber": 438,
                  "startColumn": 1,
                  "endLineNumber": 438,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);",
                "range": {
                  "startLineNumber": 439,
                  "startColumn": 1,
                  "endLineNumber": 439,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 440,
                  "startColumn": 1,
                  "endLineNumber": 440,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rows.push(row);",
                "range": {
                  "startLineNumber": 441,
                  "startColumn": 1,
                  "endLineNumber": 441,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 442,
                  "startColumn": 1,
                  "endLineNumber": 442,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return rows;",
                "range": {
                  "startLineNumber": 443,
                  "startColumn": 1,
                  "endLineNumber": 443,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 444,
                  "startColumn": 1,
                  "endLineNumber": 444,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 445,
                  "startColumn": 1,
                  "endLineNumber": 445,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 446,
                  "startColumn": 1,
                  "endLineNumber": 446,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "function mod(x = 0, y = 1) {",
                "range": {
                  "startLineNumber": 447,
                  "startColumn": 1,
                  "endLineNumber": 447,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const res = x % y;",
                "range": {
                  "startLineNumber": 448,
                  "startColumn": 1,
                  "endLineNumber": 448,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  if (res < 0) {",
                "range": {
                  "startLineNumber": 449,
                  "startColumn": 1,
                  "endLineNumber": 449,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return res + y;",
                "range": {
                  "startLineNumber": 450,
                  "startColumn": 1,
                  "endLineNumber": 450,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 451,
                  "startColumn": 1,
                  "endLineNumber": 451,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  return res;",
                "range": {
                  "startLineNumber": 452,
                  "startColumn": 1,
                  "endLineNumber": 452,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 453,
                  "startColumn": 1,
                  "endLineNumber": 453,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 454,
                  "startColumn": 1,
                  "endLineNumber": 454,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "function formatSecondsToTimeString(numMs: number): string {",
                "range": {
                  "startLineNumber": 455,
                  "startColumn": 1,
                  "endLineNumber": 455,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const numSecs = Math.round(numMs / 1000)",
                "range": {
                  "startLineNumber": 456,
                  "startColumn": 1,
                  "endLineNumber": 456,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const hours = Math.floor(numSecs / 3600);",
                "range": {
                  "startLineNumber": 457,
                  "startColumn": 1,
                  "endLineNumber": 457,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const minutes = Math.floor((numSecs % 3600) / 60);",
                "range": {
                  "startLineNumber": 458,
                  "startColumn": 1,
                  "endLineNumber": 458,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const seconds = numSecs % 60;",
                "range": {
                  "startLineNumber": 459,
                  "startColumn": 1,
                  "endLineNumber": 459,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 460,
                  "startColumn": 1,
                  "endLineNumber": 460,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const formattedHours = hours.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 461,
                  "startColumn": 1,
                  "endLineNumber": 461,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const formattedMinutes = minutes.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 462,
                  "startColumn": 1,
                  "endLineNumber": 462,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const formattedSeconds = seconds.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 463,
                  "startColumn": 1,
                  "endLineNumber": 463,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 464,
                  "startColumn": 1,
                  "endLineNumber": 464,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  if (hours === 0) {",
                "range": {
                  "startLineNumber": 465,
                  "startColumn": 1,
                  "endLineNumber": 465,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return `${formattedMinutes}:${formattedSeconds}`;",
                "range": {
                  "startLineNumber": 466,
                  "startColumn": 1,
                  "endLineNumber": 466,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  } else {",
                "range": {
                  "startLineNumber": 467,
                  "startColumn": 1,
                  "endLineNumber": 467,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;",
                "range": {
                  "startLineNumber": 468,
                  "startColumn": 1,
                  "endLineNumber": 468,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 469,
                  "startColumn": 1,
                  "endLineNumber": 469,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 470,
                  "startColumn": 1,
                  "endLineNumber": 470,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 471,
                  "startColumn": 1,
                  "endLineNumber": 471,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "// https://stackoverflow.com/a/54200105",
                "range": {
                  "startLineNumber": 472,
                  "startColumn": 1,
                  "endLineNumber": 472,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "function extractYoutubeId(url: string){",
                "range": {
                  "startLineNumber": 473,
                  "startColumn": 1,
                  "endLineNumber": 473,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);",
                "range": {
                  "startLineNumber": 474,
                  "startColumn": 1,
                  "endLineNumber": 474,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "   if (parts[2] === undefined) {",
                "range": {
                  "startLineNumber": 475,
                  "startColumn": 1,
                  "endLineNumber": 475,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return {success: false, id: ''};",
                "range": {
                  "startLineNumber": 476,
                  "startColumn": 1,
                  "endLineNumber": 476,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "   }",
                "range": {
                  "startLineNumber": 477,
                  "startColumn": 1,
                  "endLineNumber": 477,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};",
                "range": {
                  "startLineNumber": 478,
                  "startColumn": 1,
                  "endLineNumber": 478,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 479,
                  "startColumn": 1,
                  "endLineNumber": 479,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 480,
                  "startColumn": 1,
                  "endLineNumber": 480,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "customElements.define('gradebook-ui', GradebookUi)",
                "range": {
                  "startLineNumber": 481,
                  "startColumn": 1,
                  "endLineNumber": 481,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "\n",
                "range": {
                  "startLineNumber": 482,
                  "startColumn": 1073741825,
                  "endLineNumber": 482,
                  "endColumn": 1073741825
                }
              }
            ],
            []
          ],
          "done": true
        }
      ],
      "responseId": "response_819fa788-40c7-4668-9936-b48c9ec1776d",
      "isHidden": false,
      "result": {
        "timings": {
          "firstProgress": 7542,
          "totalElapsed": 27337
        },
        "metadata": {
          "edits": {
            "workingSet": [
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "scheme": "file"
                },
                "text": "import { matchKey } from \"../key-match/key_match\";\nimport { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";\nimport { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";\nimport { GradebookMgr } from \"./gradebook_mgr\";\nimport { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";\nimport { EphemeralBanner } from \"../ephemeral-banner\";\nimport { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";\nimport { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";\nimport { Time } from \"./models/Time\";\n\n\n// Top-level UI to handle everything\nexport class GradebookUi extends HTMLElement {\n  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;\n\n  private inputStartTime: Time | null = null;\n  private gradebookMgr = new GradebookMgr;\n\n  private matchSheetUi: MatchSheetUi = new MatchSheetUi;\n  private banner: EphemeralBanner = new EphemeralBanner;\n\n  connectedCallback() {\n    this.innerHTML = `Loading project data.`;\n\n    // IFrame steals the focus on click; is polling the best we can do?\n    setInterval(() => {\n      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {\n        const elt = document.activeElement as HTMLIFrameElement;\n        elt.blur();\n      }\n    }, 1000);\n  }\n\n  // Must call this to load the editor\n  async loadOrCreateProjectInUi(id: string) {\n    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);\n\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      .menu-container {\n        position: relative;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      .menu-content {\n        display: none;\n        position: absolute;\n        right: 0;\n        background-color: white;\n        min-width: 160px;\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n        z-index: 1;\n        border-radius: 4px;\n      }\n      .menu-container:hover .menu-content {\n        display: block;\n      }\n      .menu-content button {\n        width: 100%;\n        padding: 12px 16px;\n        border: none;\n        background: none;\n        text-align: left;\n        cursor: pointer;\n      }\n      .menu-content button:hover {\n        background-color: #f1f1f1;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <div class=\"menu-container\">\n          <button id='menu-button'>â˜° Menu</button>\n          <div class=\"menu-content\">\n            <button id='add-youtube-btn'>Add youtube video</button>\n          </div>\n        </div>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n    `;\n    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;\n    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;\n    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {\n      if (cellLoc.rowIdx < 2) {\n        return;\n      }\n      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;\n      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;\n      this.renderSheet();\n    });\n    this.renderSheet();\n\n    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;\n    this.updateYoutubePlayer();\n\n    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;\n    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();\n    return finalProjectId;\n  }\n\n  getVideoPlayerUi() {\n    return this.youtubePlayerUi\n  }\n  handleKeydown(evt: KeyboardEvent) {\n    this.handleKeydownWithoutChanges(evt);\n    this.handleKeydownWithSheetChanges(evt);\n  }\n\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    } else if (matchKey(evt, 'y')) {\n      this.obtainYoutubeUrl();\n    } else if (matchKey(evt, 'z')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);\n    } else if (matchKey(evt, 'x')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(0.2);\n    } else if (matchKey(evt, 'a')) {\n      this.getVideoPlayerUi().resetPlaybackRate();\n    } else if (matchKey(evt, 'l')) {\n      this.getVideoPlayerUi().move(1.5);\n    } else if (matchKey(evt, 'j')) {\n      this.getVideoPlayerUi().move(-3);\n    } else if (matchKey(evt, ';')) {\n      this.getVideoPlayerUi().move(5);\n    } else if (matchKey(evt, 'h')) {\n      this.getVideoPlayerUi().move(-5);\n    } else if (matchKey(evt, 'f')) {\n      const width = this.getVideoPlayerUi().getIframeWidth();\n      let wantWidth = width < 1000 ? width * 4 : width / 4;\n      this.getVideoPlayerUi().setIframeDims(wantWidth);\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else if (matchKey(evt, 'cmd+shift+s')) {\n      evt.preventDefault();\n      await this.cloneProject();\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const newId = crypto.randomUUID();\n    const project = this.gradebookMgr.project;\n    const clonedProject = {\n      ...project,\n      id: newId,\n    };\n    \n    await this.gradebookMgr.saveProject(clonedProject);\n    window.location.href = `${window.location.pathname}?id=${newId}`;\n  }\n\n  handleKeydownWithSheetChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'up')) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (matchKey(evt, 'down')) {\n      this.gradebookMgr.moveRallyIdx(1);\n    } else if (matchKey(evt, `\\\\`)) {\n      this.tabSelectedCell();\n    } else if (matchKey(evt, `shift+|`)) {\n      this.tabSelectedCell(true);\n    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {\n      this.gradebookMgr.moveColIdx(-1);\n    } else if (matchKey(evt, 'backspace')) {\n      this.gradebookMgr.removeCurrRally();\n    } else if (matchKey(evt, 'cmd+z')) {\n      if (this.inputStartTime) {\n        this.inputStartTime = null;\n      }\n    } else if (matchKey(evt, 'enter')) {\n      this.enterSelectedCell();\n    } else {\n      return;\n    }\n    this.renderSheet();\n    evt.preventDefault();\n  }\n\n  private enterSelectedCell() {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      if (this.inputStartTime) {\n        this.promoteRally();\n        return;\n      }\n      this.updateInputStartTime();\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === START_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.startTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === END_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.endTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === RESULT_COL) {\n      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {\n        this.gradebookMgr.moveColIdx(1);\n      } else {\n        this.gradebookMgr.moveRallyIdx(-1);\n      }\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      const name = prompt(`Enter server's name`);\n      if (name) {\n        if (rally.isMyServe) {\n          this.gradebookMgr.project.matchData.myName = name;\n        } else {\n          this.gradebookMgr.project.matchData.oppoName = name;\n        }\n      }\n    }\n  }\n  private tabSelectedCell(opposite = false) {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === RESULT_COL) {\n      const idx = rallyResultToIndex.get(rally.result);\n      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;\n      const nextIdx = next % rallyResultToIndex.size;\n      rally.result = rallyResultVals[nextIdx];\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      const ratingChange = opposite ? 1 : -1;\n      rally.stat.winnerLastShotQuality = mod(\n        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      const ratingChange = opposite ? -1 : 1;\n      rally.stat.loserPreviousShotQuality = mod(\n        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      rally.isMyServe = !rally.isMyServe;\n    }\n  }\n\n  private renderSheet() {\n    this.matchSheetUi.render(this.genSheet());\n  }\n\n  private obtainYoutubeUrl() {\n    const url = prompt('Enter url');\n    if (!url) {\n      return;\n    }\n    const res = extractYoutubeId(url);\n    if (!res.success) {\n      return;\n    }\n    this.gradebookMgr.project.matchData.urls.push(url);\n    this.updateYoutubePlayer();\n  }\n\n  private updateYoutubePlayer() {\n    if (this.gradebookMgr.project.matchData.urls.length < 1) {\n      return;\n    }\n    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);\n    if (!success) {\n      return;\n    }\n    this.youtubePlayerUi.initYoutubePlayer(id);\n  }\n\n  private getNowMs() {\n    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();\n    return Math.round(nowSec * 1000);\n  }\n\n  private updateInputStartTime() {\n    this.inputStartTime = new Time(this.getNowMs());\n    this.renderSheet();\n  }\n\n  private promoteRally() {\n    if (!this.inputStartTime) {\n      console.warn('cannot promote rally without inputStartTime');\n      return;\n    }\n    const nowMs = this.getNowMs();\n    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;\n    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);\n    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;\n    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;\n    this.gradebookMgr.project.cursor.rallyIdx = 0;\n\n    this.inputStartTime = null;\n    this.renderSheet();\n  }\n\n  private genSheet(): Cell[][] {\n    const project = this.gradebookMgr.project;\n    const cursor = project.cursor;\n    const rows = [];\n    const headerRow = [\n      new Cell('Server'),\n      new Cell('Set'),\n      new Cell('Game Score'),\n\n      new Cell('Start'),\n      new Cell('End'),\n      new Cell('Result'),\n      new Cell(`Winner's`),\n      // new Cell(`Winner's last shot`),\n      new Cell(`Loser's`),\n      // new Cell(`Loser's previous shot`),\n      new Cell('Plot'),\n      new Cell(`Winner's risk level`),\n    ];\n    rows.push(headerRow);\n\n    const myName = project.matchData.myName;\n    const oppoName = project.matchData.oppoName;\n    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();\n    rallyContexts.reverse();\n\n    const cursorAtTop = !this.gradebookMgr.getCurrentRally();\n    const hasInputStartTime = this.inputStartTime !== null;\n    const startTime = hasInputStartTime ?\n      formatSecondsToTimeString(this.inputStartTime!.ms) :\n      `<button id='input-start-time'>(Enter)</button>`;\n    const endTime = hasInputStartTime ?\n      `<button id='input-end-time'>(Enter)</button>` : '';\n    const setupInputStartTimeBtn = () => {\n      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.updateInputStartTime();\n      }\n    };\n    const setupInputEndTimeBtn = () => {\n      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.promoteRally();\n      }\n    };\n\n    // The latest rallyContext should only have score and not a rally.\n    const latestRallyCtx = rallyContexts[0];\n    const score = latestRallyCtx.scoreBeforeRally;\n    let latestPlot = latestRallyCtx.toPlot();\n    if (!latestPlot && 1 < rallyContexts.length) {\n      const prevRallyCtx = rallyContexts[1];\n      latestPlot = prevRallyCtx.getPlotForNextRally();\n    }\n\n    const row = [\n      new Cell(''),\n      new Cell(latestRallyCtx.toGameScoreStr()),\n      new Cell(score.toPointsStr()),\n\n      new Cell(startTime, makeOpts({\n        setupFunc: setupInputStartTimeBtn,\n        selected: cursorAtTop && !hasInputStartTime,\n      })),\n      new Cell(endTime, makeOpts({\n        setupFunc: setupInputEndTimeBtn,\n        selected: cursorAtTop && hasInputStartTime,\n        \n      })),\n      new Cell(''),\n      new Cell(''),\n      new Cell(''),\n      new Cell(latestPlot?.text, makeOpts({\n        alignRight: !latestPlot?.isMyPlot})),\n      new Cell(''),\n    ];\n    rows.push(row);\n\n    const ralliedContexts =  rallyContexts.slice(1);\n    ralliedContexts.forEach((rallyCtx, rallyIdx) => {\n      const rally = rallyCtx.rally;\n      const score = rallyCtx.scoreBeforeRally;\n      const rallyIsDoubleFault = rallyCtx.isDoubleFault();\n      const rallyIsPoint = (\n        rallyIsDoubleFault || rally.result === RallyResult.PtServer\n        || rally.result === RallyResult.PtReturner);\n      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||\n        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));\n      let plot;\n      if (rallyIsPoint) {\n        plot = rallyCtx.toPlot();\n      }\n      if (!plot && rallyIdx + 1 < ralliedContexts.length) {\n        const prevRallyCtx = ralliedContexts[rallyIdx + 1];\n        plot = prevRallyCtx.getPlotForNextRally();\n      }\n\n      const server = rally.isMyServe ? myName :\n          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;\n      const row = [\n        new Cell(\n          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(formatSecondsToTimeString(rally.startTime.ms)),\n        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),\n        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),\n            makeOpts({alignCenter: true})),\n        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({\n          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(plot?.text, makeOpts({\n          alignRight: !plot?.isMyPlot, removeTopBorder: !rallyIsPoint})),\n        new Cell(getRiskLevelStr(rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n      ];\n      row.forEach((cell, colIdx) => {\n        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);\n      });\n      rows.push(row);\n    });\n    return rows;\n  }\n}\n\nfunction mod(x = 0, y = 1) {\n  const res = x % y;\n  if (res < 0) {\n    return res + y;\n  }\n  return res;\n}\n\nfunction formatSecondsToTimeString(numMs: number): string {\n  const numSecs = Math.round(numMs / 1000)\n  const hours = Math.floor(numSecs / 3600);\n  const minutes = Math.floor((numSecs % 3600) / 60);\n  const seconds = numSecs % 60;\n\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n  const formattedSeconds = seconds.toString().padStart(2, '0');\n\n  if (hours === 0) {\n    return `${formattedMinutes}:${formattedSeconds}`;\n  } else {\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n\n// https://stackoverflow.com/a/54200105\nfunction extractYoutubeId(url: string){\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n   if (parts[2] === undefined) {\n    return {success: false, id: ''};\n   }\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};\n}\n\ncustomElements.define('gradebook-ui', GradebookUi)\n",
                "languageId": "typescript",
                "version": 2893,
                "state": 1
              }
            ],
            "request": "<file>\n\n<status>I applied your suggestions for this file but haven't decided yet if I accept or reject them. Here is the updated file:</status>\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\nimport { matchKey } from \"../key-match/key_match\";\nimport { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";\nimport { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";\nimport { GradebookMgr } from \"./gradebook_mgr\";\nimport { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";\nimport { EphemeralBanner } from \"../ephemeral-banner\";\nimport { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";\nimport { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";\nimport { Time } from \"./models/Time\";\n\n\n// Top-level UI to handle everything\nexport class GradebookUi extends HTMLElement {\n  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;\n\n  private inputStartTime: Time | null = null;\n  private gradebookMgr = new GradebookMgr;\n\n  private matchSheetUi: MatchSheetUi = new MatchSheetUi;\n  private banner: EphemeralBanner = new EphemeralBanner;\n\n  connectedCallback() {\n    this.innerHTML = `Loading project data.`;\n\n    // IFrame steals the focus on click; is polling the best we can do?\n    setInterval(() => {\n      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {\n        const elt = document.activeElement as HTMLIFrameElement;\n        elt.blur();\n      }\n    }, 1000);\n  }\n\n  // Must call this to load the editor\n  async loadOrCreateProjectInUi(id: string) {\n    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);\n\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      .menu-container {\n        position: relative;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      .menu-content {\n        display: none;\n        position: absolute;\n        right: 0;\n        background-color: white;\n        min-width: 160px;\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n        z-index: 1;\n        border-radius: 4px;\n      }\n      .menu-container:hover .menu-content {\n        display: block;\n      }\n      .menu-content button {\n        width: 100%;\n        padding: 12px 16px;\n        border: none;\n        background: none;\n        text-align: left;\n        cursor: pointer;\n      }\n      .menu-content button:hover {\n        background-color: #f1f1f1;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <div class=\"menu-container\">\n          <button id='menu-button'>â˜° Menu</button>\n          <div class=\"menu-content\">\n            <button id='add-youtube-btn'>Add youtube video</button>\n          </div>\n        </div>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n    `;\n    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;\n    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;\n    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {\n      if (cellLoc.rowIdx < 2) {\n        return;\n      }\n      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;\n      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;\n      this.renderSheet();\n    });\n    this.renderSheet();\n\n    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;\n    this.updateYoutubePlayer();\n\n    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;\n    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();\n    return finalProjectId;\n  }\n\n  getVideoPlayerUi() {\n    return this.youtubePlayerUi\n  }\n  handleKeydown(evt: KeyboardEvent) {\n    this.handleKeydownWithoutChanges(evt);\n    this.handleKeydownWithSheetChanges(evt);\n  }\n\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    } else if (matchKey(evt, 'y')) {\n      this.obtainYoutubeUrl();\n    } else if (matchKey(evt, 'z')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);\n    } else if (matchKey(evt, 'x')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(0.2);\n    } else if (matchKey(evt, 'a')) {\n      this.getVideoPlayerUi().resetPlaybackRate();\n    } else if (matchKey(evt, 'l')) {\n      this.getVideoPlayerUi().move(1.5);\n    } else if (matchKey(evt, 'j')) {\n      this.getVideoPlayerUi().move(-3);\n    } else if (matchKey(evt, ';')) {\n      this.getVideoPlayerUi().move(5);\n    } else if (matchKey(evt, 'h')) {\n      this.getVideoPlayerUi().move(-5);\n    } else if (matchKey(evt, 'f')) {\n      const width = this.getVideoPlayerUi().getIframeWidth();\n      let wantWidth = width < 1000 ? width * 4 : width / 4;\n      this.getVideoPlayerUi().setIframeDims(wantWidth);\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else if (matchKey(evt, 'cmd+shift+s')) {\n      evt.preventDefault();\n      await this.cloneProject();\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const newId = crypto.randomUUID();\n    const project = this.gradebookMgr.project;\n    const clonedProject = {\n      ...project,\n      id: newId,\n    };\n    \n    await this.gradebookMgr.saveProject(clonedProject);\n    window.location.href = `${window.location.pathname}?id=${newId}`;\n  }\n\n  handleKeydownWithSheetChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'up')) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (matchKey(evt, 'down')) {\n      this.gradebookMgr.moveRallyIdx(1);\n    } else if (matchKey(evt, `\\\\`)) {\n      this.tabSelectedCell();\n    } else if (matchKey(evt, `shift+|`)) {\n      this.tabSelectedCell(true);\n    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {\n      this.gradebookMgr.moveColIdx(-1);\n    } else if (matchKey(evt, 'backspace')) {\n      this.gradebookMgr.removeCurrRally();\n    } else if (matchKey(evt, 'cmd+z')) {\n      if (this.inputStartTime) {\n        this.inputStartTime = null;\n      }\n    } else if (matchKey(evt, 'enter')) {\n      this.enterSelectedCell();\n    } else {\n      return;\n    }\n    this.renderSheet();\n    evt.preventDefault();\n  }\n\n  private enterSelectedCell() {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      if (this.inputStartTime) {\n        this.promoteRally();\n        return;\n      }\n      this.updateInputStartTime();\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === START_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.startTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === END_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.endTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === RESULT_COL) {\n      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {\n        this.gradebookMgr.moveColIdx(1);\n      } else {\n        this.gradebookMgr.moveRallyIdx(-1);\n      }\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      const name = prompt(`Enter server's name`);\n      if (name) {\n        if (rally.isMyServe) {\n          this.gradebookMgr.project.matchData.myName = name;\n        } else {\n          this.gradebookMgr.project.matchData.oppoName = name;\n        }\n      }\n    }\n  }\n  private tabSelectedCell(opposite = false) {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === RESULT_COL) {\n      const idx = rallyResultToIndex.get(rally.result);\n      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;\n      const nextIdx = next % rallyResultToIndex.size;\n      rally.result = rallyResultVals[nextIdx];\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      const ratingChange = opposite ? 1 : -1;\n      rally.stat.winnerLastShotQuality = mod(\n        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      const ratingChange = opposite ? -1 : 1;\n      rally.stat.loserPreviousShotQuality = mod(\n        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      rally.isMyServe = !rally.isMyServe;\n    }\n  }\n\n  private renderSheet() {\n    this.matchSheetUi.render(this.genSheet());\n  }\n\n  private obtainYoutubeUrl() {\n    const url = prompt('Enter url');\n    if (!url) {\n      return;\n    }\n    const res = extractYoutubeId(url);\n    if (!res.success) {\n      return;\n    }\n    this.gradebookMgr.project.matchData.urls.push(url);\n    this.updateYoutubePlayer();\n  }\n\n  private updateYoutubePlayer() {\n    if (this.gradebookMgr.project.matchData.urls.length < 1) {\n      return;\n    }\n    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);\n    if (!success) {\n      return;\n    }\n    this.youtubePlayerUi.initYoutubePlayer(id);\n  }\n\n  private getNowMs() {\n    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();\n    return Math.round(nowSec * 1000);\n  }\n\n  private updateInputStartTime() {\n    this.inputStartTime = new Time(this.getNowMs());\n    this.renderSheet();\n  }\n\n  private promoteRally() {\n    if (!this.inputStartTime) {\n      console.warn('cannot promote rally without inputStartTime');\n      return;\n    }\n    const nowMs = this.getNowMs();\n    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;\n    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);\n    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;\n    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;\n    this.gradebookMgr.project.cursor.rallyIdx = 0;\n\n    this.inputStartTime = null;\n    this.renderSheet();\n  }\n\n  private genSheet(): Cell[][] {\n    const project = this.gradebookMgr.project;\n    const cursor = project.cursor;\n    const rows = [];\n    const headerRow = [\n      new Cell('Server'),\n      new Cell('Set'),\n      new Cell('Game Score'),\n\n      new Cell('Start'),\n      new Cell('End'),\n      new Cell('Result'),\n      new Cell(`Winner's`),\n      // new Cell(`Winner's last shot`),\n      new Cell(`Loser's`),\n      // new Cell(`Loser's previous shot`),\n      new Cell('Plot'),\n      new Cell(`Winner's risk level`),\n    ];\n    rows.push(headerRow);\n\n    const myName = project.matchData.myName;\n    const oppoName = project.matchData.oppoName;\n    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();\n    rallyContexts.reverse();\n\n    const cursorAtTop = !this.gradebookMgr.getCurrentRally();\n    const hasInputStartTime = this.inputStartTime !== null;\n    const startTime = hasInputStartTime ?\n      formatSecondsToTimeString(this.inputStartTime!.ms) :\n      `<button id='input-start-time'>(Enter)</button>`;\n    const endTime = hasInputStartTime ?\n      `<button id='input-end-time'>(Enter)</button>` : '';\n    const setupInputStartTimeBtn = () => {\n      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.updateInputStartTime();\n      }\n    };\n    const setupInputEndTimeBtn = () => {\n      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.promoteRally();\n      }\n    };\n\n    // The latest rallyContext should only have score and not a rally.\n    const latestRallyCtx = rallyContexts[0];\n    const score = latestRallyCtx.scoreBeforeRally;\n    let latestPlot = latestRallyCtx.toPlot();\n    if (!latestPlot && 1 < rallyContexts.length) {\n      const prevRallyCtx = rallyContexts[1];\n      latestPlot = prevRallyCtx.getPlotForNextRally();\n    }\n\n    const row = [\n      new Cell(''),\n      new Cell(latestRallyCtx.toGameScoreStr()),\n      new Cell(score.toPointsStr()),\n\n      new Cell(startTime, makeOpts({\n        setupFunc: setupInputStartTimeBtn,\n        selected: cursorAtTop && !hasInputStartTime,\n      })),\n      new Cell(endTime, makeOpts({\n        setupFunc: setupInputEndTimeBtn,\n        selected: cursorAtTop && hasInputStartTime,\n        \n      })),\n      new Cell(''),\n      new Cell(''),\n      new Cell(''),\n      new Cell(latestPlot?.text, makeOpts({\n        alignRight: !latestPlot?.isMyPlot})),\n      new Cell(''),\n    ];\n    rows.push(row);\n\n    const ralliedContexts =  rallyContexts.slice(1);\n    ralliedContexts.forEach((rallyCtx, rallyIdx) => {\n      const rally = rallyCtx.rally;\n      const score = rallyCtx.scoreBeforeRally;\n      const rallyIsDoubleFault = rallyCtx.isDoubleFault();\n      const rallyIsPoint = (\n        rallyIsDoubleFault || rally.result === RallyResult.PtServer\n        || rally.result === RallyResult.PtReturner);\n      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||\n        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));\n      let plot;\n      if (rallyIsPoint) {\n        plot = rallyCtx.toPlot();\n      }\n      if (!plot && rallyIdx + 1 < ralliedContexts.length) {\n        const prevRallyCtx = ralliedContexts[rallyIdx + 1];\n        plot = prevRallyCtx.getPlotForNextRally();\n      }\n\n      const server = rally.isMyServe ? myName :\n          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;\n      const row = [\n        new Cell(\n          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(formatSecondsToTimeString(rally.startTime.ms)),\n        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),\n        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),\n            makeOpts({alignCenter: true})),\n        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({\n          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(plot?.text, makeOpts({\n          alignRight: !plot?.isMyPlot, removeTopBorder: !rallyIsPoint})),\n        new Cell(getRiskLevelStr(rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n      ];\n      row.forEach((cell, colIdx) => {\n        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);\n      });\n      rows.push(row);\n    });\n    return rows;\n  }\n}\n\nfunction mod(x = 0, y = 1) {\n  const res = x % y;\n  if (res < 0) {\n    return res + y;\n  }\n  return res;\n}\n\nfunction formatSecondsToTimeString(numMs: number): string {\n  const numSecs = Math.round(numMs / 1000)\n  const hours = Math.floor(numSecs / 3600);\n  const minutes = Math.floor((numSecs % 3600) / 60);\n  const seconds = numSecs % 60;\n\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n  const formattedSeconds = seconds.toString().padStart(2, '0');\n\n  if (hours === 0) {\n    return `${formattedMinutes}:${formattedSeconds}`;\n  } else {\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n\n// https://stackoverflow.com/a/54200105\nfunction extractYoutubeId(url: string){\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n   if (parts[2] === undefined) {\n    return {success: false, id: ''};\n   }\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};\n}\n\ncustomElements.define('gradebook-ui', GradebookUi)\n```\n</file>\n\n<reminder>\nAvoid repeating existing code, instead use `// ...existing code...` comments to represent regions of unchanged code.\nEach file's code block must start with a comment containing the filepath. This includes Markdown files.\n</reminder>\n<prompt>\nFix:\n- newId should use current date's string\n- clone the project by using toJson and deserialize\n- id field is wrong, use projectInfo\n- saveProject should be save\n</prompt>",
            "response": "I'll help fix the cloning implementation. Here's the step-by-step solution:\n\n1. Change newId generation to use date-based ID\n2. Use proper serialization/deserialization methods\n3. Fix the project structure and save method\n\n### /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n\nUpdate the cloneProject method:\n\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n// ...existing code...\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const date = new Date();\n    const newId = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}-${date.getHours().toString().padStart(2, '0')}-${date.getMinutes().toString().padStart(2, '0')}-${date.getSeconds().toString().padStart(2, '0')}`;\n    \n    // Clone by serializing and deserializing\n    const projectJson = this.gradebookMgr.project.toJson();\n    const clonedProject = this.gradebookMgr.project.deserialize(projectJson);\n    clonedProject.projectInfo.id = newId;\n    \n    await this.gradebookMgr.save(clonedProject);\n    window.location.href = `${window.location.pathname}?id=${newId}`;\n  }\n// ...existing code...\n```\n\nThe changes:\n1. Generate newId using formatted date string instead of UUID\n2. Use project's toJson() and deserialize() methods for proper cloning\n3. Set id on projectInfo instead of directly on project\n4. Use the correct save method from gradebookMgr"
          },
          "codeBlocks": [
            {
              "code": "// ...existing code...\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const date = new Date();\n    const newId = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}-${date.getHours().toString().padStart(2, '0')}-${date.getMinutes().toString().padStart(2, '0')}-${date.getSeconds().toString().padStart(2, '0')}`;\n    \n    // Clone by serializing and deserializing\n    const projectJson = this.gradebookMgr.project.toJson();\n    const clonedProject = this.gradebookMgr.project.deserialize(projectJson);\n    clonedProject.projectInfo.id = newId;\n    \n    await this.gradebookMgr.save(clonedProject);\n    window.location.href = `${window.location.pathname}?id=${newId}`;\n  }\n// ...existing code...\n",
              "resource": {
                "$mid": 1,
                "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "scheme": "file"
              },
              "language": "typescript",
              "markdownBeforeBlock": "I'll help fix the cloning implementation. Here's the step-by-step solution:\n\n1. Change newId generation to use date-based ID\n2. Use proper serialization/deserialization methods\n3. Fix the project structure and save method\n\n### [gradebook_ui.ts](file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts)\n\nUpdate the cloneProject method:\n\n"
            }
          ],
          "messages": [
            {
              "role": "user",
              "content": "Fix:\n- newId should use current date's string\n- clone the project by using toJson and deserialize\n- id field is wrong, use projectInfo\n- saveProject should be save"
            },
            {
              "role": "assistant",
              "content": "I'll help fix the cloning implementation. Here's the step-by-step solution:\n\n1. Change newId generation to use date-based ID\n2. Use proper serialization/deserialization methods\n3. Fix the project structure and save method\n\n### /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n\nUpdate the cloneProject method:\n\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n// ...existing code...\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const date = new Date();\n    const newId = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}-${date.getHours().toString().padStart(2, '0')}-${date.getMinutes().toString().padStart(2, '0')}-${date.getSeconds().toString().padStart(2, '0')}`;\n    \n    // Clone by serializing and deserializing\n    const projectJson = this.gradebookMgr.project.toJson();\n    const clonedProject = this.gradebookMgr.project.deserialize(projectJson);\n    clonedProject.projectInfo.id = newId;\n    \n    await this.gradebookMgr.save(clonedProject);\n    window.location.href = `${window.location.pathname}?id=${newId}`;\n  }\n// ...existing code...\n```\n\nThe changes:\n1. Generate newId using formatted date string instead of UUID\n2. Use project's toJson() and deserialize() methods for proper cloning\n3. Set id on projectInfo instead of directly on project\n4. Use the correct save method from gradebookMgr"
            }
          ],
          "modelMessageId": "520ce5c7-7370-4e41-a4cb-d83bcba5269f",
          "responseId": "cdc1d7e5-a9b4-46a5-81b0-63e19422a884",
          "sessionId": "9ebcb46b-2747-4861-8196-e4505dcab712",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "workingSet": [
        {
          "$mid": 1,
          "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "scheme": "file"
        }
      ],
      "contentReferences": [],
      "codeCitations": [],
      "timestamp": 1735670457162
    },
    {
      "requestId": "request_46e5478f-9720-4673-a5d5-2394850cb996",
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 212
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 5,
              "endColumn": 36
            },
            "text": "- Use (new Date()).toISOString() for newId\n- Instead of cloning, just update the id in this.gradebookMgr.project.projectInfo\n- clear the owner field\n- save without any argument\n- update href to use # instead of ?",
            "kind": "text"
          }
        ],
        "text": "- Use (new Date()).toISOString() for newId\n- Instead of cloning, just update the id in this.gradebookMgr.project.projectInfo\n- clear the owner field\n- save without any argument\n- update href to use # instead of ?"
      },
      "variableData": {
        "variables": [
          {
            "value": {
              "$mid": 1,
              "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
              "scheme": "file"
            },
            "id": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "name": "gradebook_ui.ts",
            "isFile": true,
            "isDynamic": true
          }
        ]
      },
      "response": [
        {
          "value": "I'll help simplify the cloning implementation. Here's the updated version:\n\n### [gradebook_ui.ts](file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts)\n\nUpdate the cloneProject method with simpler cloning logic:\n\n```typescript\n",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "scheme": "file"
          }
        },
        {
          "value": "// ...existing code...\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const newId = (new Date()).toISOString();\n    \n    this.gradebookMgr.project.projectInfo.id = newId;\n    this.gradebookMgr.project.projectInfo.owner = '';\n    \n    await this.gradebookMgr.save();\n    window.location.href = `${window.location.pathname}#${newId}`;\n  }\n// ...existing code...\n```\n\nThe changes:\n1. Use toISOString() for newId generation\n2. Directly modify the existing project's id and owner\n3. Save current project without arguments\n4. Use hash (#) instead of query param (?) in URL",
          "supportThemeIcons": false,
          "supportHtml": false
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
            "scheme": "file"
          },
          "edits": [
            [],
            [
              {
                "text": "import { matchKey } from \"../key-match/key_match\";",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 1,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";",
                "range": {
                  "startLineNumber": 2,
                  "startColumn": 1,
                  "endLineNumber": 2,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";",
                "range": {
                  "startLineNumber": 3,
                  "startColumn": 1,
                  "endLineNumber": 3,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { GradebookMgr } from \"./gradebook_mgr\";",
                "range": {
                  "startLineNumber": 4,
                  "startColumn": 1,
                  "endLineNumber": 4,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";",
                "range": {
                  "startLineNumber": 5,
                  "startColumn": 1,
                  "endLineNumber": 5,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { EphemeralBanner } from \"../ephemeral-banner\";",
                "range": {
                  "startLineNumber": 6,
                  "startColumn": 1,
                  "endLineNumber": 6,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";",
                "range": {
                  "startLineNumber": 7,
                  "startColumn": 1,
                  "endLineNumber": 7,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";",
                "range": {
                  "startLineNumber": 8,
                  "startColumn": 1,
                  "endLineNumber": 8,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "import { Time } from \"./models/Time\";",
                "range": {
                  "startLineNumber": 9,
                  "startColumn": 1,
                  "endLineNumber": 9,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 10,
                  "startColumn": 1,
                  "endLineNumber": 10,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 11,
                  "startColumn": 1,
                  "endLineNumber": 11,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "// Top-level UI to handle everything",
                "range": {
                  "startLineNumber": 12,
                  "startColumn": 1,
                  "endLineNumber": 12,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "export class GradebookUi extends HTMLElement {",
                "range": {
                  "startLineNumber": 13,
                  "startColumn": 1,
                  "endLineNumber": 13,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;",
                "range": {
                  "startLineNumber": 14,
                  "startColumn": 1,
                  "endLineNumber": 14,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 15,
                  "startColumn": 1,
                  "endLineNumber": 15,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private inputStartTime: Time | null = null;",
                "range": {
                  "startLineNumber": 16,
                  "startColumn": 1,
                  "endLineNumber": 16,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private gradebookMgr = new GradebookMgr;",
                "range": {
                  "startLineNumber": 17,
                  "startColumn": 1,
                  "endLineNumber": 17,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 18,
                  "startColumn": 1,
                  "endLineNumber": 18,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private matchSheetUi: MatchSheetUi = new MatchSheetUi;",
                "range": {
                  "startLineNumber": 19,
                  "startColumn": 1,
                  "endLineNumber": 19,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private banner: EphemeralBanner = new EphemeralBanner;",
                "range": {
                  "startLineNumber": 20,
                  "startColumn": 1,
                  "endLineNumber": 20,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 21,
                  "startColumn": 1,
                  "endLineNumber": 21,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  connectedCallback() {",
                "range": {
                  "startLineNumber": 22,
                  "startColumn": 1,
                  "endLineNumber": 22,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.innerHTML = `Loading project data.`;",
                "range": {
                  "startLineNumber": 23,
                  "startColumn": 1,
                  "endLineNumber": 23,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 24,
                  "startColumn": 1,
                  "endLineNumber": 24,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // IFrame steals the focus on click; is polling the best we can do?",
                "range": {
                  "startLineNumber": 25,
                  "startColumn": 1,
                  "endLineNumber": 25,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    setInterval(() => {",
                "range": {
                  "startLineNumber": 26,
                  "startColumn": 1,
                  "endLineNumber": 26,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {",
                "range": {
                  "startLineNumber": 27,
                  "startColumn": 1,
                  "endLineNumber": 27,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        const elt = document.activeElement as HTMLIFrameElement;",
                "range": {
                  "startLineNumber": 28,
                  "startColumn": 1,
                  "endLineNumber": 28,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        elt.blur();",
                "range": {
                  "startLineNumber": 29,
                  "startColumn": 1,
                  "endLineNumber": 29,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 30,
                  "startColumn": 1,
                  "endLineNumber": 30,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }, 1000);",
                "range": {
                  "startLineNumber": 31,
                  "startColumn": 1,
                  "endLineNumber": 31,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 32,
                  "startColumn": 1,
                  "endLineNumber": 32,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 33,
                  "startColumn": 1,
                  "endLineNumber": 33,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  // Must call this to load the editor",
                "range": {
                  "startLineNumber": 34,
                  "startColumn": 1,
                  "endLineNumber": 34,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  async loadOrCreateProjectInUi(id: string) {",
                "range": {
                  "startLineNumber": 35,
                  "startColumn": 1,
                  "endLineNumber": 35,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);",
                "range": {
                  "startLineNumber": 36,
                  "startColumn": 1,
                  "endLineNumber": 36,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 37,
                  "startColumn": 1,
                  "endLineNumber": 37,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.innerHTML = `",
                "range": {
                  "startLineNumber": 38,
                  "startColumn": 1,
                  "endLineNumber": 38,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <style>",
                "range": {
                  "startLineNumber": 39,
                  "startColumn": 1,
                  "endLineNumber": 39,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      #youtube-container {",
                "range": {
                  "startLineNumber": 40,
                  "startColumn": 1,
                  "endLineNumber": 40,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: sticky;",
                "range": {
                  "startLineNumber": 41,
                  "startColumn": 1,
                  "endLineNumber": 41,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        top: 0;",
                "range": {
                  "startLineNumber": 42,
                  "startColumn": 1,
                  "endLineNumber": 42,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: flex;",
                "range": {
                  "startLineNumber": 43,
                  "startColumn": 1,
                  "endLineNumber": 43,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        align-items: flex-start;",
                "range": {
                  "startLineNumber": 44,
                  "startColumn": 1,
                  "endLineNumber": 44,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 45,
                  "startColumn": 1,
                  "endLineNumber": 45,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-container {",
                "range": {
                  "startLineNumber": 46,
                  "startColumn": 1,
                  "endLineNumber": 46,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: relative;",
                "range": {
                  "startLineNumber": 47,
                  "startColumn": 1,
                  "endLineNumber": 47,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 48,
                  "startColumn": 1,
                  "endLineNumber": 48,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      #menu-button {",
                "range": {
                  "startLineNumber": 49,
                  "startColumn": 1,
                  "endLineNumber": 49,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background: none;",
                "range": {
                  "startLineNumber": 50,
                  "startColumn": 1,
                  "endLineNumber": 50,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border: none;",
                "range": {
                  "startLineNumber": 51,
                  "startColumn": 1,
                  "endLineNumber": 51,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        font-size: 24px;",
                "range": {
                  "startLineNumber": 52,
                  "startColumn": 1,
                  "endLineNumber": 52,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        padding: 10px;",
                "range": {
                  "startLineNumber": 53,
                  "startColumn": 1,
                  "endLineNumber": 53,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cursor: pointer;",
                "range": {
                  "startLineNumber": 54,
                  "startColumn": 1,
                  "endLineNumber": 54,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        margin-left: 10px;",
                "range": {
                  "startLineNumber": 55,
                  "startColumn": 1,
                  "endLineNumber": 55,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 56,
                  "startColumn": 1,
                  "endLineNumber": 56,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-content {",
                "range": {
                  "startLineNumber": 57,
                  "startColumn": 1,
                  "endLineNumber": 57,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: none;",
                "range": {
                  "startLineNumber": 58,
                  "startColumn": 1,
                  "endLineNumber": 58,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        position: absolute;",
                "range": {
                  "startLineNumber": 59,
                  "startColumn": 1,
                  "endLineNumber": 59,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        right: 0;",
                "range": {
                  "startLineNumber": 60,
                  "startColumn": 1,
                  "endLineNumber": 60,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background-color: white;",
                "range": {
                  "startLineNumber": 61,
                  "startColumn": 1,
                  "endLineNumber": 61,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        min-width: 160px;",
                "range": {
                  "startLineNumber": 62,
                  "startColumn": 1,
                  "endLineNumber": 62,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);",
                "range": {
                  "startLineNumber": 63,
                  "startColumn": 1,
                  "endLineNumber": 63,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        z-index: 1;",
                "range": {
                  "startLineNumber": 64,
                  "startColumn": 1,
                  "endLineNumber": 64,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border-radius: 4px;",
                "range": {
                  "startLineNumber": 65,
                  "startColumn": 1,
                  "endLineNumber": 65,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 66,
                  "startColumn": 1,
                  "endLineNumber": 66,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-container:hover .menu-content {",
                "range": {
                  "startLineNumber": 67,
                  "startColumn": 1,
                  "endLineNumber": 67,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        display: block;",
                "range": {
                  "startLineNumber": 68,
                  "startColumn": 1,
                  "endLineNumber": 68,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 69,
                  "startColumn": 1,
                  "endLineNumber": 69,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-content button {",
                "range": {
                  "startLineNumber": 70,
                  "startColumn": 1,
                  "endLineNumber": 70,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        width: 100%;",
                "range": {
                  "startLineNumber": 71,
                  "startColumn": 1,
                  "endLineNumber": 71,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        padding: 12px 16px;",
                "range": {
                  "startLineNumber": 72,
                  "startColumn": 1,
                  "endLineNumber": 72,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        border: none;",
                "range": {
                  "startLineNumber": 73,
                  "startColumn": 1,
                  "endLineNumber": 73,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background: none;",
                "range": {
                  "startLineNumber": 74,
                  "startColumn": 1,
                  "endLineNumber": 74,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        text-align: left;",
                "range": {
                  "startLineNumber": 75,
                  "startColumn": 1,
                  "endLineNumber": 75,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cursor: pointer;",
                "range": {
                  "startLineNumber": 76,
                  "startColumn": 1,
                  "endLineNumber": 76,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 77,
                  "startColumn": 1,
                  "endLineNumber": 77,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      .menu-content button:hover {",
                "range": {
                  "startLineNumber": 78,
                  "startColumn": 1,
                  "endLineNumber": 78,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        background-color: #f1f1f1;",
                "range": {
                  "startLineNumber": 79,
                  "startColumn": 1,
                  "endLineNumber": 79,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 80,
                  "startColumn": 1,
                  "endLineNumber": 80,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      </style>",
                "range": {
                  "startLineNumber": 81,
                  "startColumn": 1,
                  "endLineNumber": 81,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <ephemeral-banner></ephemeral-banner>",
                "range": {
                  "startLineNumber": 82,
                  "startColumn": 1,
                  "endLineNumber": 82,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <div id='youtube-container'>",
                "range": {
                  "startLineNumber": 83,
                  "startColumn": 1,
                  "endLineNumber": 83,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        <youtube-player-ui></youtube-player-ui>",
                "range": {
                  "startLineNumber": 84,
                  "startColumn": 1,
                  "endLineNumber": 84,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        <div class=\"menu-container\">",
                "range": {
                  "startLineNumber": 85,
                  "startColumn": 1,
                  "endLineNumber": 85,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          <button id='menu-button'>â˜° Menu</button>",
                "range": {
                  "startLineNumber": 86,
                  "startColumn": 1,
                  "endLineNumber": 86,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          <div class=\"menu-content\">",
                "range": {
                  "startLineNumber": 87,
                  "startColumn": 1,
                  "endLineNumber": 87,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            <button id='add-youtube-btn'>Add youtube video</button>",
                "range": {
                  "startLineNumber": 88,
                  "startColumn": 1,
                  "endLineNumber": 88,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          </div>",
                "range": {
                  "startLineNumber": 89,
                  "startColumn": 1,
                  "endLineNumber": 89,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        </div>",
                "range": {
                  "startLineNumber": 90,
                  "startColumn": 1,
                  "endLineNumber": 90,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      </div>",
                "range": {
                  "startLineNumber": 91,
                  "startColumn": 1,
                  "endLineNumber": 91,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      <div><match-sheet-ui></match-sheet-ui></div>",
                "range": {
                  "startLineNumber": 92,
                  "startColumn": 1,
                  "endLineNumber": 92,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    `;",
                "range": {
                  "startLineNumber": 93,
                  "startColumn": 1,
                  "endLineNumber": 93,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;",
                "range": {
                  "startLineNumber": 94,
                  "startColumn": 1,
                  "endLineNumber": 94,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;",
                "range": {
                  "startLineNumber": 95,
                  "startColumn": 1,
                  "endLineNumber": 95,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {",
                "range": {
                  "startLineNumber": 96,
                  "startColumn": 1,
                  "endLineNumber": 96,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (cellLoc.rowIdx < 2) {",
                "range": {
                  "startLineNumber": 97,
                  "startColumn": 1,
                  "endLineNumber": 97,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return;",
                "range": {
                  "startLineNumber": 98,
                  "startColumn": 1,
                  "endLineNumber": 98,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 99,
                  "startColumn": 1,
                  "endLineNumber": 99,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;",
                "range": {
                  "startLineNumber": 100,
                  "startColumn": 1,
                  "endLineNumber": 100,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;",
                "range": {
                  "startLineNumber": 101,
                  "startColumn": 1,
                  "endLineNumber": 101,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.renderSheet();",
                "range": {
                  "startLineNumber": 102,
                  "startColumn": 1,
                  "endLineNumber": 102,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 103,
                  "startColumn": 1,
                  "endLineNumber": 103,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 104,
                  "startColumn": 1,
                  "endLineNumber": 104,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 105,
                  "startColumn": 1,
                  "endLineNumber": 105,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;",
                "range": {
                  "startLineNumber": 106,
                  "startColumn": 1,
                  "endLineNumber": 106,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.updateYoutubePlayer();",
                "range": {
                  "startLineNumber": 107,
                  "startColumn": 1,
                  "endLineNumber": 107,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 108,
                  "startColumn": 1,
                  "endLineNumber": 108,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 109,
                  "startColumn": 1,
                  "endLineNumber": 109,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();",
                "range": {
                  "startLineNumber": 110,
                  "startColumn": 1,
                  "endLineNumber": 110,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return finalProjectId;",
                "range": {
                  "startLineNumber": 111,
                  "startColumn": 1,
                  "endLineNumber": 111,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 112,
                  "startColumn": 1,
                  "endLineNumber": 112,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 113,
                  "startColumn": 1,
                  "endLineNumber": 113,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  getVideoPlayerUi() {",
                "range": {
                  "startLineNumber": 114,
                  "startColumn": 1,
                  "endLineNumber": 114,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return this.youtubePlayerUi",
                "range": {
                  "startLineNumber": 115,
                  "startColumn": 1,
                  "endLineNumber": 115,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 116,
                  "startColumn": 1,
                  "endLineNumber": 116,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  handleKeydown(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 117,
                  "startColumn": 1,
                  "endLineNumber": 117,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.handleKeydownWithoutChanges(evt);",
                "range": {
                  "startLineNumber": 118,
                  "startColumn": 1,
                  "endLineNumber": 118,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.handleKeydownWithSheetChanges(evt);",
                "range": {
                  "startLineNumber": 119,
                  "startColumn": 1,
                  "endLineNumber": 119,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 120,
                  "startColumn": 1,
                  "endLineNumber": 120,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 121,
                  "startColumn": 1,
                  "endLineNumber": 121,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  async handleKeydownWithoutChanges(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 122,
                  "startColumn": 1,
                  "endLineNumber": 122,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {",
                "range": {
                  "startLineNumber": 123,
                  "startColumn": 1,
                  "endLineNumber": 123,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().toggleVideoPlay();",
                "range": {
                  "startLineNumber": 124,
                  "startColumn": 1,
                  "endLineNumber": 124,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'y')) {",
                "range": {
                  "startLineNumber": 125,
                  "startColumn": 1,
                  "endLineNumber": 125,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.obtainYoutubeUrl();",
                "range": {
                  "startLineNumber": 126,
                  "startColumn": 1,
                  "endLineNumber": 126,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'z')) {",
                "range": {
                  "startLineNumber": 127,
                  "startColumn": 1,
                  "endLineNumber": 127,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);",
                "range": {
                  "startLineNumber": 128,
                  "startColumn": 1,
                  "endLineNumber": 128,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'x')) {",
                "range": {
                  "startLineNumber": 129,
                  "startColumn": 1,
                  "endLineNumber": 129,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().incrementPlaybackRate(0.2);",
                "range": {
                  "startLineNumber": 130,
                  "startColumn": 1,
                  "endLineNumber": 130,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'a')) {",
                "range": {
                  "startLineNumber": 131,
                  "startColumn": 1,
                  "endLineNumber": 131,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().resetPlaybackRate();",
                "range": {
                  "startLineNumber": 132,
                  "startColumn": 1,
                  "endLineNumber": 132,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'l')) {",
                "range": {
                  "startLineNumber": 133,
                  "startColumn": 1,
                  "endLineNumber": 133,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(1.5);",
                "range": {
                  "startLineNumber": 134,
                  "startColumn": 1,
                  "endLineNumber": 134,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'j')) {",
                "range": {
                  "startLineNumber": 135,
                  "startColumn": 1,
                  "endLineNumber": 135,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(-3);",
                "range": {
                  "startLineNumber": 136,
                  "startColumn": 1,
                  "endLineNumber": 136,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, ';')) {",
                "range": {
                  "startLineNumber": 137,
                  "startColumn": 1,
                  "endLineNumber": 137,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(5);",
                "range": {
                  "startLineNumber": 138,
                  "startColumn": 1,
                  "endLineNumber": 138,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'h')) {",
                "range": {
                  "startLineNumber": 139,
                  "startColumn": 1,
                  "endLineNumber": 139,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().move(-5);",
                "range": {
                  "startLineNumber": 140,
                  "startColumn": 1,
                  "endLineNumber": 140,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'f')) {",
                "range": {
                  "startLineNumber": 141,
                  "startColumn": 1,
                  "endLineNumber": 141,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const width = this.getVideoPlayerUi().getIframeWidth();",
                "range": {
                  "startLineNumber": 142,
                  "startColumn": 1,
                  "endLineNumber": 142,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      let wantWidth = width < 1000 ? width * 4 : width / 4;",
                "range": {
                  "startLineNumber": 143,
                  "startColumn": 1,
                  "endLineNumber": 143,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.getVideoPlayerUi().setIframeDims(wantWidth);",
                "range": {
                  "startLineNumber": 144,
                  "startColumn": 1,
                  "endLineNumber": 144,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+s')) {",
                "range": {
                  "startLineNumber": 145,
                  "startColumn": 1,
                  "endLineNumber": 145,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      evt.preventDefault();",
                "range": {
                  "startLineNumber": 146,
                  "startColumn": 1,
                  "endLineNumber": 146,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.banner.inProgress('Saving');",
                "range": {
                  "startLineNumber": 147,
                  "startColumn": 1,
                  "endLineNumber": 147,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const failureMsg = await this.gradebookMgr.save();",
                "range": {
                  "startLineNumber": 148,
                  "startColumn": 1,
                  "endLineNumber": 148,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (failureMsg) {",
                "range": {
                  "startLineNumber": 149,
                  "startColumn": 1,
                  "endLineNumber": 149,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.banner.failure(failureMsg);",
                "range": {
                  "startLineNumber": 150,
                  "startColumn": 1,
                  "endLineNumber": 150,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 151,
                  "startColumn": 1,
                  "endLineNumber": 151,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.banner.success('Saved!');",
                "range": {
                  "startLineNumber": 152,
                  "startColumn": 1,
                  "endLineNumber": 152,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 153,
                  "startColumn": 1,
                  "endLineNumber": 153,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+shift+s')) {",
                "range": {
                  "startLineNumber": 154,
                  "startColumn": 1,
                  "endLineNumber": 154,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      evt.preventDefault();",
                "range": {
                  "startLineNumber": 155,
                  "startColumn": 1,
                  "endLineNumber": 155,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      await this.cloneProject();",
                "range": {
                  "startLineNumber": 156,
                  "startColumn": 1,
                  "endLineNumber": 156,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 157,
                  "startColumn": 1,
                  "endLineNumber": 157,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 158,
                  "startColumn": 1,
                  "endLineNumber": 158,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 159,
                  "startColumn": 1,
                  "endLineNumber": 159,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    evt.preventDefault();",
                "range": {
                  "startLineNumber": 160,
                  "startColumn": 1,
                  "endLineNumber": 160,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 161,
                  "startColumn": 1,
                  "endLineNumber": 161,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 162,
                  "startColumn": 1,
                  "endLineNumber": 162,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private async cloneProject() {",
                "range": {
                  "startLineNumber": 163,
                  "startColumn": 1,
                  "endLineNumber": 163,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.banner.inProgress('Cloning project...');",
                "range": {
                  "startLineNumber": 164,
                  "startColumn": 1,
                  "endLineNumber": 164,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const newId = (new Date()).toISOString();",
                "range": {
                  "startLineNumber": 165,
                  "startColumn": 1,
                  "endLineNumber": 165,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 166,
                  "startColumn": 1,
                  "endLineNumber": 166,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.projectInfo.id = newId;",
                "range": {
                  "startLineNumber": 167,
                  "startColumn": 1,
                  "endLineNumber": 167,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.projectInfo.owner = '';",
                "range": {
                  "startLineNumber": 168,
                  "startColumn": 1,
                  "endLineNumber": 168,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ",
                "range": {
                  "startLineNumber": 169,
                  "startColumn": 1,
                  "endLineNumber": 169,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    await this.gradebookMgr.save();",
                "range": {
                  "startLineNumber": 170,
                  "startColumn": 1,
                  "endLineNumber": 170,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    window.location.href = `${window.location.pathname}#${newId}`;",
                "range": {
                  "startLineNumber": 171,
                  "startColumn": 1,
                  "endLineNumber": 171,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 172,
                  "startColumn": 1,
                  "endLineNumber": 172,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 173,
                  "startColumn": 1,
                  "endLineNumber": 173,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  handleKeydownWithSheetChanges(evt: KeyboardEvent) {",
                "range": {
                  "startLineNumber": 174,
                  "startColumn": 1,
                  "endLineNumber": 174,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (matchKey(evt, 'up')) {",
                "range": {
                  "startLineNumber": 175,
                  "startColumn": 1,
                  "endLineNumber": 175,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 176,
                  "startColumn": 1,
                  "endLineNumber": 176,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'down')) {",
                "range": {
                  "startLineNumber": 177,
                  "startColumn": 1,
                  "endLineNumber": 177,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(1);",
                "range": {
                  "startLineNumber": 178,
                  "startColumn": 1,
                  "endLineNumber": 178,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, `\\\\`)) {",
                "range": {
                  "startLineNumber": 179,
                  "startColumn": 1,
                  "endLineNumber": 179,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.tabSelectedCell();",
                "range": {
                  "startLineNumber": 180,
                  "startColumn": 1,
                  "endLineNumber": 180,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, `shift+|`)) {",
                "range": {
                  "startLineNumber": 181,
                  "startColumn": 1,
                  "endLineNumber": 181,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.tabSelectedCell(true);",
                "range": {
                  "startLineNumber": 182,
                  "startColumn": 1,
                  "endLineNumber": 182,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {",
                "range": {
                  "startLineNumber": 183,
                  "startColumn": 1,
                  "endLineNumber": 183,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 184,
                  "startColumn": 1,
                  "endLineNumber": 184,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {",
                "range": {
                  "startLineNumber": 185,
                  "startColumn": 1,
                  "endLineNumber": 185,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(-1);",
                "range": {
                  "startLineNumber": 186,
                  "startColumn": 1,
                  "endLineNumber": 186,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'backspace')) {",
                "range": {
                  "startLineNumber": 187,
                  "startColumn": 1,
                  "endLineNumber": 187,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.removeCurrRally();",
                "range": {
                  "startLineNumber": 188,
                  "startColumn": 1,
                  "endLineNumber": 188,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'cmd+z')) {",
                "range": {
                  "startLineNumber": 189,
                  "startColumn": 1,
                  "endLineNumber": 189,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (this.inputStartTime) {",
                "range": {
                  "startLineNumber": 190,
                  "startColumn": 1,
                  "endLineNumber": 190,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.inputStartTime = null;",
                "range": {
                  "startLineNumber": 191,
                  "startColumn": 1,
                  "endLineNumber": 191,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 192,
                  "startColumn": 1,
                  "endLineNumber": 192,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (matchKey(evt, 'enter')) {",
                "range": {
                  "startLineNumber": 193,
                  "startColumn": 1,
                  "endLineNumber": 193,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.enterSelectedCell();",
                "range": {
                  "startLineNumber": 194,
                  "startColumn": 1,
                  "endLineNumber": 194,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else {",
                "range": {
                  "startLineNumber": 195,
                  "startColumn": 1,
                  "endLineNumber": 195,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 196,
                  "startColumn": 1,
                  "endLineNumber": 196,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 197,
                  "startColumn": 1,
                  "endLineNumber": 197,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 198,
                  "startColumn": 1,
                  "endLineNumber": 198,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    evt.preventDefault();",
                "range": {
                  "startLineNumber": 199,
                  "startColumn": 1,
                  "endLineNumber": 199,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 200,
                  "startColumn": 1,
                  "endLineNumber": 200,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 201,
                  "startColumn": 1,
                  "endLineNumber": 201,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private enterSelectedCell() {",
                "range": {
                  "startLineNumber": 202,
                  "startColumn": 1,
                  "endLineNumber": 202,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rally = this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 203,
                  "startColumn": 1,
                  "endLineNumber": 203,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!rally) {",
                "range": {
                  "startLineNumber": 204,
                  "startColumn": 1,
                  "endLineNumber": 204,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (this.inputStartTime) {",
                "range": {
                  "startLineNumber": 205,
                  "startColumn": 1,
                  "endLineNumber": 205,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.promoteRally();",
                "range": {
                  "startLineNumber": 206,
                  "startColumn": 1,
                  "endLineNumber": 206,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        return;",
                "range": {
                  "startLineNumber": 207,
                  "startColumn": 1,
                  "endLineNumber": 207,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 208,
                  "startColumn": 1,
                  "endLineNumber": 208,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.updateInputStartTime();",
                "range": {
                  "startLineNumber": 209,
                  "startColumn": 1,
                  "endLineNumber": 209,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 210,
                  "startColumn": 1,
                  "endLineNumber": 210,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 211,
                  "startColumn": 1,
                  "endLineNumber": 211,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = this.gradebookMgr.project.cursor;",
                "range": {
                  "startLineNumber": 212,
                  "startColumn": 1,
                  "endLineNumber": 212,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (cursor.colIdx === START_TIME_COL) {",
                "range": {
                  "startLineNumber": 213,
                  "startColumn": 1,
                  "endLineNumber": 213,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.youtubePlayerUi.moveTo(rally.startTime.ms);",
                "range": {
                  "startLineNumber": 214,
                  "startColumn": 1,
                  "endLineNumber": 214,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 215,
                  "startColumn": 1,
                  "endLineNumber": 215,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === END_TIME_COL) {",
                "range": {
                  "startLineNumber": 216,
                  "startColumn": 1,
                  "endLineNumber": 216,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.youtubePlayerUi.moveTo(rally.endTime.ms);",
                "range": {
                  "startLineNumber": 217,
                  "startColumn": 1,
                  "endLineNumber": 217,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 218,
                  "startColumn": 1,
                  "endLineNumber": 218,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === RESULT_COL) {",
                "range": {
                  "startLineNumber": 219,
                  "startColumn": 1,
                  "endLineNumber": 219,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {",
                "range": {
                  "startLineNumber": 220,
                  "startColumn": 1,
                  "endLineNumber": 220,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 221,
                  "startColumn": 1,
                  "endLineNumber": 221,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      } else {",
                "range": {
                  "startLineNumber": 222,
                  "startColumn": 1,
                  "endLineNumber": 222,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 223,
                  "startColumn": 1,
                  "endLineNumber": 223,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 224,
                  "startColumn": 1,
                  "endLineNumber": 224,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {",
                "range": {
                  "startLineNumber": 225,
                  "startColumn": 1,
                  "endLineNumber": 225,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveColIdx(1);",
                "range": {
                  "startLineNumber": 226,
                  "startColumn": 1,
                  "endLineNumber": 226,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {",
                "range": {
                  "startLineNumber": 227,
                  "startColumn": 1,
                  "endLineNumber": 227,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      this.gradebookMgr.moveRallyIdx(-1);",
                "range": {
                  "startLineNumber": 228,
                  "startColumn": 1,
                  "endLineNumber": 228,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === SERVER_COL) {",
                "range": {
                  "startLineNumber": 229,
                  "startColumn": 1,
                  "endLineNumber": 229,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const name = prompt(`Enter server's name`);",
                "range": {
                  "startLineNumber": 230,
                  "startColumn": 1,
                  "endLineNumber": 230,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (name) {",
                "range": {
                  "startLineNumber": 231,
                  "startColumn": 1,
                  "endLineNumber": 231,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        if (rally.isMyServe) {",
                "range": {
                  "startLineNumber": 232,
                  "startColumn": 1,
                  "endLineNumber": 232,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          this.gradebookMgr.project.matchData.myName = name;",
                "range": {
                  "startLineNumber": 233,
                  "startColumn": 1,
                  "endLineNumber": 233,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        } else {",
                "range": {
                  "startLineNumber": 234,
                  "startColumn": 1,
                  "endLineNumber": 234,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          this.gradebookMgr.project.matchData.oppoName = name;",
                "range": {
                  "startLineNumber": 235,
                  "startColumn": 1,
                  "endLineNumber": 235,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        }",
                "range": {
                  "startLineNumber": 236,
                  "startColumn": 1,
                  "endLineNumber": 236,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 237,
                  "startColumn": 1,
                  "endLineNumber": 237,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 238,
                  "startColumn": 1,
                  "endLineNumber": 238,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 239,
                  "startColumn": 1,
                  "endLineNumber": 239,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private tabSelectedCell(opposite = false) {",
                "range": {
                  "startLineNumber": 240,
                  "startColumn": 1,
                  "endLineNumber": 240,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rally = this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 241,
                  "startColumn": 1,
                  "endLineNumber": 241,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!rally) {",
                "range": {
                  "startLineNumber": 242,
                  "startColumn": 1,
                  "endLineNumber": 242,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 243,
                  "startColumn": 1,
                  "endLineNumber": 243,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 244,
                  "startColumn": 1,
                  "endLineNumber": 244,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = this.gradebookMgr.project.cursor;",
                "range": {
                  "startLineNumber": 245,
                  "startColumn": 1,
                  "endLineNumber": 245,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (cursor.colIdx === RESULT_COL) {",
                "range": {
                  "startLineNumber": 246,
                  "startColumn": 1,
                  "endLineNumber": 246,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const idx = rallyResultToIndex.get(rally.result);",
                "range": {
                  "startLineNumber": 247,
                  "startColumn": 1,
                  "endLineNumber": 247,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;",
                "range": {
                  "startLineNumber": 248,
                  "startColumn": 1,
                  "endLineNumber": 248,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const nextIdx = next % rallyResultToIndex.size;",
                "range": {
                  "startLineNumber": 249,
                  "startColumn": 1,
                  "endLineNumber": 249,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.result = rallyResultVals[nextIdx];",
                "range": {
                  "startLineNumber": 250,
                  "startColumn": 1,
                  "endLineNumber": 250,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {",
                "range": {
                  "startLineNumber": 251,
                  "startColumn": 1,
                  "endLineNumber": 251,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const ratingChange = opposite ? 1 : -1;",
                "range": {
                  "startLineNumber": 252,
                  "startColumn": 1,
                  "endLineNumber": 252,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.stat.winnerLastShotQuality = mod(",
                "range": {
                  "startLineNumber": 253,
                  "startColumn": 1,
                  "endLineNumber": 253,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);",
                "range": {
                  "startLineNumber": 254,
                  "startColumn": 1,
                  "endLineNumber": 254,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {",
                "range": {
                  "startLineNumber": 255,
                  "startColumn": 1,
                  "endLineNumber": 255,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const ratingChange = opposite ? -1 : 1;",
                "range": {
                  "startLineNumber": 256,
                  "startColumn": 1,
                  "endLineNumber": 256,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.stat.loserPreviousShotQuality = mod(",
                "range": {
                  "startLineNumber": 257,
                  "startColumn": 1,
                  "endLineNumber": 257,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);",
                "range": {
                  "startLineNumber": 258,
                  "startColumn": 1,
                  "endLineNumber": 258,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    } else if (cursor.colIdx === SERVER_COL) {",
                "range": {
                  "startLineNumber": 259,
                  "startColumn": 1,
                  "endLineNumber": 259,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rally.isMyServe = !rally.isMyServe;",
                "range": {
                  "startLineNumber": 260,
                  "startColumn": 1,
                  "endLineNumber": 260,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 261,
                  "startColumn": 1,
                  "endLineNumber": 261,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 262,
                  "startColumn": 1,
                  "endLineNumber": 262,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 263,
                  "startColumn": 1,
                  "endLineNumber": 263,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private renderSheet() {",
                "range": {
                  "startLineNumber": 264,
                  "startColumn": 1,
                  "endLineNumber": 264,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.matchSheetUi.render(this.genSheet());",
                "range": {
                  "startLineNumber": 265,
                  "startColumn": 1,
                  "endLineNumber": 265,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 266,
                  "startColumn": 1,
                  "endLineNumber": 266,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 267,
                  "startColumn": 1,
                  "endLineNumber": 267,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private obtainYoutubeUrl() {",
                "range": {
                  "startLineNumber": 268,
                  "startColumn": 1,
                  "endLineNumber": 268,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const url = prompt('Enter url');",
                "range": {
                  "startLineNumber": 269,
                  "startColumn": 1,
                  "endLineNumber": 269,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!url) {",
                "range": {
                  "startLineNumber": 270,
                  "startColumn": 1,
                  "endLineNumber": 270,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 271,
                  "startColumn": 1,
                  "endLineNumber": 271,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 272,
                  "startColumn": 1,
                  "endLineNumber": 272,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const res = extractYoutubeId(url);",
                "range": {
                  "startLineNumber": 273,
                  "startColumn": 1,
                  "endLineNumber": 273,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!res.success) {",
                "range": {
                  "startLineNumber": 274,
                  "startColumn": 1,
                  "endLineNumber": 274,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 275,
                  "startColumn": 1,
                  "endLineNumber": 275,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 276,
                  "startColumn": 1,
                  "endLineNumber": 276,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.matchData.urls.push(url);",
                "range": {
                  "startLineNumber": 277,
                  "startColumn": 1,
                  "endLineNumber": 277,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.updateYoutubePlayer();",
                "range": {
                  "startLineNumber": 278,
                  "startColumn": 1,
                  "endLineNumber": 278,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 279,
                  "startColumn": 1,
                  "endLineNumber": 279,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 280,
                  "startColumn": 1,
                  "endLineNumber": 280,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private updateYoutubePlayer() {",
                "range": {
                  "startLineNumber": 281,
                  "startColumn": 1,
                  "endLineNumber": 281,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (this.gradebookMgr.project.matchData.urls.length < 1) {",
                "range": {
                  "startLineNumber": 282,
                  "startColumn": 1,
                  "endLineNumber": 282,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 283,
                  "startColumn": 1,
                  "endLineNumber": 283,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 284,
                  "startColumn": 1,
                  "endLineNumber": 284,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);",
                "range": {
                  "startLineNumber": 285,
                  "startColumn": 1,
                  "endLineNumber": 285,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!success) {",
                "range": {
                  "startLineNumber": 286,
                  "startColumn": 1,
                  "endLineNumber": 286,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 287,
                  "startColumn": 1,
                  "endLineNumber": 287,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 288,
                  "startColumn": 1,
                  "endLineNumber": 288,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.youtubePlayerUi.initYoutubePlayer(id);",
                "range": {
                  "startLineNumber": 289,
                  "startColumn": 1,
                  "endLineNumber": 289,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 290,
                  "startColumn": 1,
                  "endLineNumber": 290,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 291,
                  "startColumn": 1,
                  "endLineNumber": 291,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private getNowMs() {",
                "range": {
                  "startLineNumber": 292,
                  "startColumn": 1,
                  "endLineNumber": 292,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();",
                "range": {
                  "startLineNumber": 293,
                  "startColumn": 1,
                  "endLineNumber": 293,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return Math.round(nowSec * 1000);",
                "range": {
                  "startLineNumber": 294,
                  "startColumn": 1,
                  "endLineNumber": 294,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 295,
                  "startColumn": 1,
                  "endLineNumber": 295,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 296,
                  "startColumn": 1,
                  "endLineNumber": 296,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private updateInputStartTime() {",
                "range": {
                  "startLineNumber": 297,
                  "startColumn": 1,
                  "endLineNumber": 297,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.inputStartTime = new Time(this.getNowMs());",
                "range": {
                  "startLineNumber": 298,
                  "startColumn": 1,
                  "endLineNumber": 298,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 299,
                  "startColumn": 1,
                  "endLineNumber": 299,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 300,
                  "startColumn": 1,
                  "endLineNumber": 300,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 301,
                  "startColumn": 1,
                  "endLineNumber": 301,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private promoteRally() {",
                "range": {
                  "startLineNumber": 302,
                  "startColumn": 1,
                  "endLineNumber": 302,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!this.inputStartTime) {",
                "range": {
                  "startLineNumber": 303,
                  "startColumn": 1,
                  "endLineNumber": 303,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      console.warn('cannot promote rally without inputStartTime');",
                "range": {
                  "startLineNumber": 304,
                  "startColumn": 1,
                  "endLineNumber": 304,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      return;",
                "range": {
                  "startLineNumber": 305,
                  "startColumn": 1,
                  "endLineNumber": 305,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 306,
                  "startColumn": 1,
                  "endLineNumber": 306,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const nowMs = this.getNowMs();",
                "range": {
                  "startLineNumber": 307,
                  "startColumn": 1,
                  "endLineNumber": 307,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;",
                "range": {
                  "startLineNumber": 308,
                  "startColumn": 1,
                  "endLineNumber": 308,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);",
                "range": {
                  "startLineNumber": 309,
                  "startColumn": 1,
                  "endLineNumber": 309,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;",
                "range": {
                  "startLineNumber": 310,
                  "startColumn": 1,
                  "endLineNumber": 310,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;",
                "range": {
                  "startLineNumber": 311,
                  "startColumn": 1,
                  "endLineNumber": 311,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.gradebookMgr.project.cursor.rallyIdx = 0;",
                "range": {
                  "startLineNumber": 312,
                  "startColumn": 1,
                  "endLineNumber": 312,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 313,
                  "startColumn": 1,
                  "endLineNumber": 313,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.inputStartTime = null;",
                "range": {
                  "startLineNumber": 314,
                  "startColumn": 1,
                  "endLineNumber": 314,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    this.renderSheet();",
                "range": {
                  "startLineNumber": 315,
                  "startColumn": 1,
                  "endLineNumber": 315,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 316,
                  "startColumn": 1,
                  "endLineNumber": 316,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 317,
                  "startColumn": 1,
                  "endLineNumber": 317,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  private genSheet(): Cell[][] {",
                "range": {
                  "startLineNumber": 318,
                  "startColumn": 1,
                  "endLineNumber": 318,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const project = this.gradebookMgr.project;",
                "range": {
                  "startLineNumber": 319,
                  "startColumn": 1,
                  "endLineNumber": 319,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursor = project.cursor;",
                "range": {
                  "startLineNumber": 320,
                  "startColumn": 1,
                  "endLineNumber": 320,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rows = [];",
                "range": {
                  "startLineNumber": 321,
                  "startColumn": 1,
                  "endLineNumber": 321,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const headerRow = [",
                "range": {
                  "startLineNumber": 322,
                  "startColumn": 1,
                  "endLineNumber": 322,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Server'),",
                "range": {
                  "startLineNumber": 323,
                  "startColumn": 1,
                  "endLineNumber": 323,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Set'),",
                "range": {
                  "startLineNumber": 324,
                  "startColumn": 1,
                  "endLineNumber": 324,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Game Score'),",
                "range": {
                  "startLineNumber": 325,
                  "startColumn": 1,
                  "endLineNumber": 325,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 326,
                  "startColumn": 1,
                  "endLineNumber": 326,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Start'),",
                "range": {
                  "startLineNumber": 327,
                  "startColumn": 1,
                  "endLineNumber": 327,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('End'),",
                "range": {
                  "startLineNumber": 328,
                  "startColumn": 1,
                  "endLineNumber": 328,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Result'),",
                "range": {
                  "startLineNumber": 329,
                  "startColumn": 1,
                  "endLineNumber": 329,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Winner's`),",
                "range": {
                  "startLineNumber": 330,
                  "startColumn": 1,
                  "endLineNumber": 330,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      // new Cell(`Winner's last shot`),",
                "range": {
                  "startLineNumber": 331,
                  "startColumn": 1,
                  "endLineNumber": 331,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Loser's`),",
                "range": {
                  "startLineNumber": 332,
                  "startColumn": 1,
                  "endLineNumber": 332,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      // new Cell(`Loser's previous shot`),",
                "range": {
                  "startLineNumber": 333,
                  "startColumn": 1,
                  "endLineNumber": 333,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell('Plot'),",
                "range": {
                  "startLineNumber": 334,
                  "startColumn": 1,
                  "endLineNumber": 334,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(`Winner's risk level`),",
                "range": {
                  "startLineNumber": 335,
                  "startColumn": 1,
                  "endLineNumber": 335,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ];",
                "range": {
                  "startLineNumber": 336,
                  "startColumn": 1,
                  "endLineNumber": 336,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rows.push(headerRow);",
                "range": {
                  "startLineNumber": 337,
                  "startColumn": 1,
                  "endLineNumber": 337,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 338,
                  "startColumn": 1,
                  "endLineNumber": 338,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const myName = project.matchData.myName;",
                "range": {
                  "startLineNumber": 339,
                  "startColumn": 1,
                  "endLineNumber": 339,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const oppoName = project.matchData.oppoName;",
                "range": {
                  "startLineNumber": 340,
                  "startColumn": 1,
                  "endLineNumber": 340,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();",
                "range": {
                  "startLineNumber": 341,
                  "startColumn": 1,
                  "endLineNumber": 341,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rallyContexts.reverse();",
                "range": {
                  "startLineNumber": 342,
                  "startColumn": 1,
                  "endLineNumber": 342,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 343,
                  "startColumn": 1,
                  "endLineNumber": 343,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const cursorAtTop = !this.gradebookMgr.getCurrentRally();",
                "range": {
                  "startLineNumber": 344,
                  "startColumn": 1,
                  "endLineNumber": 344,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const hasInputStartTime = this.inputStartTime !== null;",
                "range": {
                  "startLineNumber": 345,
                  "startColumn": 1,
                  "endLineNumber": 345,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const startTime = hasInputStartTime ?",
                "range": {
                  "startLineNumber": 346,
                  "startColumn": 1,
                  "endLineNumber": 346,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      formatSecondsToTimeString(this.inputStartTime!.ms) :",
                "range": {
                  "startLineNumber": 347,
                  "startColumn": 1,
                  "endLineNumber": 347,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      `<button id='input-start-time'>(Enter)</button>`;",
                "range": {
                  "startLineNumber": 348,
                  "startColumn": 1,
                  "endLineNumber": 348,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const endTime = hasInputStartTime ?",
                "range": {
                  "startLineNumber": 349,
                  "startColumn": 1,
                  "endLineNumber": 349,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      `<button id='input-end-time'>(Enter)</button>` : '';",
                "range": {
                  "startLineNumber": 350,
                  "startColumn": 1,
                  "endLineNumber": 350,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const setupInputStartTimeBtn = () => {",
                "range": {
                  "startLineNumber": 351,
                  "startColumn": 1,
                  "endLineNumber": 351,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 352,
                  "startColumn": 1,
                  "endLineNumber": 352,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (btn) {",
                "range": {
                  "startLineNumber": 353,
                  "startColumn": 1,
                  "endLineNumber": 353,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        btn.onclick = () => this.updateInputStartTime();",
                "range": {
                  "startLineNumber": 354,
                  "startColumn": 1,
                  "endLineNumber": 354,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 355,
                  "startColumn": 1,
                  "endLineNumber": 355,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    };",
                "range": {
                  "startLineNumber": 356,
                  "startColumn": 1,
                  "endLineNumber": 356,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const setupInputEndTimeBtn = () => {",
                "range": {
                  "startLineNumber": 357,
                  "startColumn": 1,
                  "endLineNumber": 357,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;",
                "range": {
                  "startLineNumber": 358,
                  "startColumn": 1,
                  "endLineNumber": 358,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (btn) {",
                "range": {
                  "startLineNumber": 359,
                  "startColumn": 1,
                  "endLineNumber": 359,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        btn.onclick = () => this.promoteRally();",
                "range": {
                  "startLineNumber": 360,
                  "startColumn": 1,
                  "endLineNumber": 360,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 361,
                  "startColumn": 1,
                  "endLineNumber": 361,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    };",
                "range": {
                  "startLineNumber": 362,
                  "startColumn": 1,
                  "endLineNumber": 362,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 363,
                  "startColumn": 1,
                  "endLineNumber": 363,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    // The latest rallyContext should only have score and not a rally.",
                "range": {
                  "startLineNumber": 364,
                  "startColumn": 1,
                  "endLineNumber": 364,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const latestRallyCtx = rallyContexts[0];",
                "range": {
                  "startLineNumber": 365,
                  "startColumn": 1,
                  "endLineNumber": 365,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const score = latestRallyCtx.scoreBeforeRally;",
                "range": {
                  "startLineNumber": 366,
                  "startColumn": 1,
                  "endLineNumber": 366,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    let latestPlot = latestRallyCtx.toPlot();",
                "range": {
                  "startLineNumber": 367,
                  "startColumn": 1,
                  "endLineNumber": 367,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    if (!latestPlot && 1 < rallyContexts.length) {",
                "range": {
                  "startLineNumber": 368,
                  "startColumn": 1,
                  "endLineNumber": 368,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const prevRallyCtx = rallyContexts[1];",
                "range": {
                  "startLineNumber": 369,
                  "startColumn": 1,
                  "endLineNumber": 369,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      latestPlot = prevRallyCtx.getPlotForNextRally();",
                "range": {
                  "startLineNumber": 370,
                  "startColumn": 1,
                  "endLineNumber": 370,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    }",
                "range": {
                  "startLineNumber": 371,
                  "startColumn": 1,
                  "endLineNumber": 371,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 372,
                  "startColumn": 1,
                  "endLineNumber": 372,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const row = [",
                "range": {
                  "startLineNumber": 373,
                  "startColumn": 1,
                  "endLineNumber": 373,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 374,
                  "startColumn": 1,
                  "endLineNumber": 374,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(latestRallyCtx.toGameScoreStr()),",
                "range": {
                  "startLineNumber": 375,
                  "startColumn": 1,
                  "endLineNumber": 375,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(score.toPointsStr()),",
                "range": {
                  "startLineNumber": 376,
                  "startColumn": 1,
                  "endLineNumber": 376,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 377,
                  "startColumn": 1,
                  "endLineNumber": 377,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(startTime, makeOpts({",
                "range": {
                  "startLineNumber": 378,
                  "startColumn": 1,
                  "endLineNumber": 378,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        setupFunc: setupInputStartTimeBtn,",
                "range": {
                  "startLineNumber": 379,
                  "startColumn": 1,
                  "endLineNumber": 379,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        selected: cursorAtTop && !hasInputStartTime,",
                "range": {
                  "startLineNumber": 380,
                  "startColumn": 1,
                  "endLineNumber": 380,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      })),",
                "range": {
                  "startLineNumber": 381,
                  "startColumn": 1,
                  "endLineNumber": 381,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(endTime, makeOpts({",
                "range": {
                  "startLineNumber": 382,
                  "startColumn": 1,
                  "endLineNumber": 382,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        setupFunc: setupInputEndTimeBtn,",
                "range": {
                  "startLineNumber": 383,
                  "startColumn": 1,
                  "endLineNumber": 383,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        selected: cursorAtTop && hasInputStartTime,",
                "range": {
                  "startLineNumber": 384,
                  "startColumn": 1,
                  "endLineNumber": 384,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        ",
                "range": {
                  "startLineNumber": 385,
                  "startColumn": 1,
                  "endLineNumber": 385,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      })),",
                "range": {
                  "startLineNumber": 386,
                  "startColumn": 1,
                  "endLineNumber": 386,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 387,
                  "startColumn": 1,
                  "endLineNumber": 387,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 388,
                  "startColumn": 1,
                  "endLineNumber": 388,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 389,
                  "startColumn": 1,
                  "endLineNumber": 389,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(latestPlot?.text, makeOpts({",
                "range": {
                  "startLineNumber": 390,
                  "startColumn": 1,
                  "endLineNumber": 390,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !latestPlot?.isMyPlot})),",
                "range": {
                  "startLineNumber": 391,
                  "startColumn": 1,
                  "endLineNumber": 391,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      new Cell(''),",
                "range": {
                  "startLineNumber": 392,
                  "startColumn": 1,
                  "endLineNumber": 392,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ];",
                "range": {
                  "startLineNumber": 393,
                  "startColumn": 1,
                  "endLineNumber": 393,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    rows.push(row);",
                "range": {
                  "startLineNumber": 394,
                  "startColumn": 1,
                  "endLineNumber": 394,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 395,
                  "startColumn": 1,
                  "endLineNumber": 395,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    const ralliedContexts =  rallyContexts.slice(1);",
                "range": {
                  "startLineNumber": 396,
                  "startColumn": 1,
                  "endLineNumber": 396,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    ralliedContexts.forEach((rallyCtx, rallyIdx) => {",
                "range": {
                  "startLineNumber": 397,
                  "startColumn": 1,
                  "endLineNumber": 397,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rally = rallyCtx.rally;",
                "range": {
                  "startLineNumber": 398,
                  "startColumn": 1,
                  "endLineNumber": 398,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const score = rallyCtx.scoreBeforeRally;",
                "range": {
                  "startLineNumber": 399,
                  "startColumn": 1,
                  "endLineNumber": 399,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rallyIsDoubleFault = rallyCtx.isDoubleFault();",
                "range": {
                  "startLineNumber": 400,
                  "startColumn": 1,
                  "endLineNumber": 400,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const rallyIsPoint = (",
                "range": {
                  "startLineNumber": 401,
                  "startColumn": 1,
                  "endLineNumber": 401,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        rallyIsDoubleFault || rally.result === RallyResult.PtServer",
                "range": {
                  "startLineNumber": 402,
                  "startColumn": 1,
                  "endLineNumber": 402,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        || rally.result === RallyResult.PtReturner);",
                "range": {
                  "startLineNumber": 403,
                  "startColumn": 1,
                  "endLineNumber": 403,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||",
                "range": {
                  "startLineNumber": 404,
                  "startColumn": 1,
                  "endLineNumber": 404,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));",
                "range": {
                  "startLineNumber": 405,
                  "startColumn": 1,
                  "endLineNumber": 405,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      let plot;",
                "range": {
                  "startLineNumber": 406,
                  "startColumn": 1,
                  "endLineNumber": 406,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (rallyIsPoint) {",
                "range": {
                  "startLineNumber": 407,
                  "startColumn": 1,
                  "endLineNumber": 407,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        plot = rallyCtx.toPlot();",
                "range": {
                  "startLineNumber": 408,
                  "startColumn": 1,
                  "endLineNumber": 408,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 409,
                  "startColumn": 1,
                  "endLineNumber": 409,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      if (!plot && rallyIdx + 1 < ralliedContexts.length) {",
                "range": {
                  "startLineNumber": 410,
                  "startColumn": 1,
                  "endLineNumber": 410,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        const prevRallyCtx = ralliedContexts[rallyIdx + 1];",
                "range": {
                  "startLineNumber": 411,
                  "startColumn": 1,
                  "endLineNumber": 411,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        plot = prevRallyCtx.getPlotForNextRally();",
                "range": {
                  "startLineNumber": 412,
                  "startColumn": 1,
                  "endLineNumber": 412,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      }",
                "range": {
                  "startLineNumber": 413,
                  "startColumn": 1,
                  "endLineNumber": 413,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 414,
                  "startColumn": 1,
                  "endLineNumber": 414,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const server = rally.isMyServe ? myName :",
                "range": {
                  "startLineNumber": 415,
                  "startColumn": 1,
                  "endLineNumber": 415,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;",
                "range": {
                  "startLineNumber": 416,
                  "startColumn": 1,
                  "endLineNumber": 416,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      const row = [",
                "range": {
                  "startLineNumber": 417,
                  "startColumn": 1,
                  "endLineNumber": 417,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(",
                "range": {
                  "startLineNumber": 418,
                  "startColumn": 1,
                  "endLineNumber": 418,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 419,
                  "startColumn": 1,
                  "endLineNumber": 419,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 420,
                  "startColumn": 1,
                  "endLineNumber": 420,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),",
                "range": {
                  "startLineNumber": 421,
                  "startColumn": 1,
                  "endLineNumber": 421,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(formatSecondsToTimeString(rally.startTime.ms)),",
                "range": {
                  "startLineNumber": 422,
                  "startColumn": 1,
                  "endLineNumber": 422,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),",
                "range": {
                  "startLineNumber": 423,
                  "startColumn": 1,
                  "endLineNumber": 423,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),",
                "range": {
                  "startLineNumber": 424,
                  "startColumn": 1,
                  "endLineNumber": 424,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "            makeOpts({alignCenter: true})),",
                "range": {
                  "startLineNumber": 425,
                  "startColumn": 1,
                  "endLineNumber": 425,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 426,
                  "startColumn": 1,
                  "endLineNumber": 426,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 427,
                  "startColumn": 1,
                  "endLineNumber": 427,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 428,
                  "startColumn": 1,
                  "endLineNumber": 428,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 429,
                  "startColumn": 1,
                  "endLineNumber": 429,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(plot?.text, makeOpts({",
                "range": {
                  "startLineNumber": 430,
                  "startColumn": 1,
                  "endLineNumber": 430,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "          alignRight: !plot?.isMyPlot, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 431,
                  "startColumn": 1,
                  "endLineNumber": 431,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        new Cell(getRiskLevelStr(rallyCtx), makeOpts({",
                "range": {
                  "startLineNumber": 432,
                  "startColumn": 1,
                  "endLineNumber": 432,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),",
                "range": {
                  "startLineNumber": 433,
                  "startColumn": 1,
                  "endLineNumber": 433,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      ];",
                "range": {
                  "startLineNumber": 434,
                  "startColumn": 1,
                  "endLineNumber": 434,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      row.forEach((cell, colIdx) => {",
                "range": {
                  "startLineNumber": 435,
                  "startColumn": 1,
                  "endLineNumber": 435,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);",
                "range": {
                  "startLineNumber": 436,
                  "startColumn": 1,
                  "endLineNumber": 436,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      });",
                "range": {
                  "startLineNumber": 437,
                  "startColumn": 1,
                  "endLineNumber": 437,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "      rows.push(row);",
                "range": {
                  "startLineNumber": 438,
                  "startColumn": 1,
                  "endLineNumber": 438,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    });",
                "range": {
                  "startLineNumber": 439,
                  "startColumn": 1,
                  "endLineNumber": 439,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return rows;",
                "range": {
                  "startLineNumber": 440,
                  "startColumn": 1,
                  "endLineNumber": 440,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 441,
                  "startColumn": 1,
                  "endLineNumber": 441,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 442,
                  "startColumn": 1,
                  "endLineNumber": 442,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 443,
                  "startColumn": 1,
                  "endLineNumber": 443,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "function mod(x = 0, y = 1) {",
                "range": {
                  "startLineNumber": 444,
                  "startColumn": 1,
                  "endLineNumber": 444,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const res = x % y;",
                "range": {
                  "startLineNumber": 445,
                  "startColumn": 1,
                  "endLineNumber": 445,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  if (res < 0) {",
                "range": {
                  "startLineNumber": 446,
                  "startColumn": 1,
                  "endLineNumber": 446,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return res + y;",
                "range": {
                  "startLineNumber": 447,
                  "startColumn": 1,
                  "endLineNumber": 447,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 448,
                  "startColumn": 1,
                  "endLineNumber": 448,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  return res;",
                "range": {
                  "startLineNumber": 449,
                  "startColumn": 1,
                  "endLineNumber": 449,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 450,
                  "startColumn": 1,
                  "endLineNumber": 450,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 451,
                  "startColumn": 1,
                  "endLineNumber": 451,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "function formatSecondsToTimeString(numMs: number): string {",
                "range": {
                  "startLineNumber": 452,
                  "startColumn": 1,
                  "endLineNumber": 452,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const numSecs = Math.round(numMs / 1000)",
                "range": {
                  "startLineNumber": 453,
                  "startColumn": 1,
                  "endLineNumber": 453,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const hours = Math.floor(numSecs / 3600);",
                "range": {
                  "startLineNumber": 454,
                  "startColumn": 1,
                  "endLineNumber": 454,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const minutes = Math.floor((numSecs % 3600) / 60);",
                "range": {
                  "startLineNumber": 455,
                  "startColumn": 1,
                  "endLineNumber": 455,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const seconds = numSecs % 60;",
                "range": {
                  "startLineNumber": 456,
                  "startColumn": 1,
                  "endLineNumber": 456,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 457,
                  "startColumn": 1,
                  "endLineNumber": 457,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const formattedHours = hours.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 458,
                  "startColumn": 1,
                  "endLineNumber": 458,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const formattedMinutes = minutes.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 459,
                  "startColumn": 1,
                  "endLineNumber": 459,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  const formattedSeconds = seconds.toString().padStart(2, '0');",
                "range": {
                  "startLineNumber": 460,
                  "startColumn": 1,
                  "endLineNumber": 460,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 461,
                  "startColumn": 1,
                  "endLineNumber": 461,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  if (hours === 0) {",
                "range": {
                  "startLineNumber": 462,
                  "startColumn": 1,
                  "endLineNumber": 462,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return `${formattedMinutes}:${formattedSeconds}`;",
                "range": {
                  "startLineNumber": 463,
                  "startColumn": 1,
                  "endLineNumber": 463,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  } else {",
                "range": {
                  "startLineNumber": 464,
                  "startColumn": 1,
                  "endLineNumber": 464,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;",
                "range": {
                  "startLineNumber": 465,
                  "startColumn": 1,
                  "endLineNumber": 465,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "  }",
                "range": {
                  "startLineNumber": 466,
                  "startColumn": 1,
                  "endLineNumber": 466,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 467,
                  "startColumn": 1,
                  "endLineNumber": 467,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 468,
                  "startColumn": 1,
                  "endLineNumber": 468,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "// https://stackoverflow.com/a/54200105",
                "range": {
                  "startLineNumber": 469,
                  "startColumn": 1,
                  "endLineNumber": 469,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "function extractYoutubeId(url: string){",
                "range": {
                  "startLineNumber": 470,
                  "startColumn": 1,
                  "endLineNumber": 470,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);",
                "range": {
                  "startLineNumber": 471,
                  "startColumn": 1,
                  "endLineNumber": 471,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "   if (parts[2] === undefined) {",
                "range": {
                  "startLineNumber": 472,
                  "startColumn": 1,
                  "endLineNumber": 472,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "    return {success: false, id: ''};",
                "range": {
                  "startLineNumber": 473,
                  "startColumn": 1,
                  "endLineNumber": 473,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "   }",
                "range": {
                  "startLineNumber": 474,
                  "startColumn": 1,
                  "endLineNumber": 474,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};",
                "range": {
                  "startLineNumber": 475,
                  "startColumn": 1,
                  "endLineNumber": 475,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "}",
                "range": {
                  "startLineNumber": 476,
                  "startColumn": 1,
                  "endLineNumber": 476,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 477,
                  "startColumn": 1,
                  "endLineNumber": 477,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "customElements.define('gradebook-ui', GradebookUi)",
                "range": {
                  "startLineNumber": 478,
                  "startColumn": 1,
                  "endLineNumber": 478,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 479,
                  "startColumn": 1,
                  "endLineNumber": 479,
                  "endColumn": 1073741825
                }
              }
            ],
            [
              {
                "text": "",
                "range": {
                  "startLineNumber": 479,
                  "startColumn": 1,
                  "endLineNumber": 483,
                  "endColumn": 1
                }
              }
            ],
            []
          ],
          "done": true
        }
      ],
      "responseId": "response_d8cef63e-5771-42d9-bce6-c40620877f57",
      "isHidden": false,
      "result": {
        "timings": {
          "firstProgress": 9763,
          "totalElapsed": 29422
        },
        "metadata": {
          "edits": {
            "workingSet": [
              {
                "uri": {
                  "$mid": 1,
                  "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                  "scheme": "file"
                },
                "text": "import { matchKey } from \"../key-match/key_match\";\nimport { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";\nimport { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";\nimport { GradebookMgr } from \"./gradebook_mgr\";\nimport { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";\nimport { EphemeralBanner } from \"../ephemeral-banner\";\nimport { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";\nimport { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";\nimport { Time } from \"./models/Time\";\n\n\n// Top-level UI to handle everything\nexport class GradebookUi extends HTMLElement {\n  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;\n\n  private inputStartTime: Time | null = null;\n  private gradebookMgr = new GradebookMgr;\n\n  private matchSheetUi: MatchSheetUi = new MatchSheetUi;\n  private banner: EphemeralBanner = new EphemeralBanner;\n\n  connectedCallback() {\n    this.innerHTML = `Loading project data.`;\n\n    // IFrame steals the focus on click; is polling the best we can do?\n    setInterval(() => {\n      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {\n        const elt = document.activeElement as HTMLIFrameElement;\n        elt.blur();\n      }\n    }, 1000);\n  }\n\n  // Must call this to load the editor\n  async loadOrCreateProjectInUi(id: string) {\n    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);\n\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      .menu-container {\n        position: relative;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      .menu-content {\n        display: none;\n        position: absolute;\n        right: 0;\n        background-color: white;\n        min-width: 160px;\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n        z-index: 1;\n        border-radius: 4px;\n      }\n      .menu-container:hover .menu-content {\n        display: block;\n      }\n      .menu-content button {\n        width: 100%;\n        padding: 12px 16px;\n        border: none;\n        background: none;\n        text-align: left;\n        cursor: pointer;\n      }\n      .menu-content button:hover {\n        background-color: #f1f1f1;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <div class=\"menu-container\">\n          <button id='menu-button'>â˜° Menu</button>\n          <div class=\"menu-content\">\n            <button id='add-youtube-btn'>Add youtube video</button>\n          </div>\n        </div>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n    `;\n    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;\n    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;\n    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {\n      if (cellLoc.rowIdx < 2) {\n        return;\n      }\n      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;\n      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;\n      this.renderSheet();\n    });\n    this.renderSheet();\n\n    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;\n    this.updateYoutubePlayer();\n\n    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;\n    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();\n    return finalProjectId;\n  }\n\n  getVideoPlayerUi() {\n    return this.youtubePlayerUi\n  }\n  handleKeydown(evt: KeyboardEvent) {\n    this.handleKeydownWithoutChanges(evt);\n    this.handleKeydownWithSheetChanges(evt);\n  }\n\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    } else if (matchKey(evt, 'y')) {\n      this.obtainYoutubeUrl();\n    } else if (matchKey(evt, 'z')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);\n    } else if (matchKey(evt, 'x')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(0.2);\n    } else if (matchKey(evt, 'a')) {\n      this.getVideoPlayerUi().resetPlaybackRate();\n    } else if (matchKey(evt, 'l')) {\n      this.getVideoPlayerUi().move(1.5);\n    } else if (matchKey(evt, 'j')) {\n      this.getVideoPlayerUi().move(-3);\n    } else if (matchKey(evt, ';')) {\n      this.getVideoPlayerUi().move(5);\n    } else if (matchKey(evt, 'h')) {\n      this.getVideoPlayerUi().move(-5);\n    } else if (matchKey(evt, 'f')) {\n      const width = this.getVideoPlayerUi().getIframeWidth();\n      let wantWidth = width < 1000 ? width * 4 : width / 4;\n      this.getVideoPlayerUi().setIframeDims(wantWidth);\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else if (matchKey(evt, 'cmd+shift+s')) {\n      evt.preventDefault();\n      await this.cloneProject();\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const date = new Date();\n    const newId = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}-${date.getHours().toString().padStart(2, '0')}-${date.getMinutes().toString().padStart(2, '0')}-${date.getSeconds().toString().padStart(2, '0')}`;\n    \n    // Clone by serializing and deserializing\n    const projectJson = this.gradebookMgr.project.toJson();\n    const clonedProject = this.gradebookMgr.project.deserialize(projectJson);\n    clonedProject.projectInfo.id = newId;\n    \n    await this.gradebookMgr.save(clonedProject);\n    window.location.href = `${window.location.pathname}?id=${newId}`;\n  }\n\n  handleKeydownWithSheetChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'up')) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (matchKey(evt, 'down')) {\n      this.gradebookMgr.moveRallyIdx(1);\n    } else if (matchKey(evt, `\\\\`)) {\n      this.tabSelectedCell();\n    } else if (matchKey(evt, `shift+|`)) {\n      this.tabSelectedCell(true);\n    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {\n      this.gradebookMgr.moveColIdx(-1);\n    } else if (matchKey(evt, 'backspace')) {\n      this.gradebookMgr.removeCurrRally();\n    } else if (matchKey(evt, 'cmd+z')) {\n      if (this.inputStartTime) {\n        this.inputStartTime = null;\n      }\n    } else if (matchKey(evt, 'enter')) {\n      this.enterSelectedCell();\n    } else {\n      return;\n    }\n    this.renderSheet();\n    evt.preventDefault();\n  }\n\n  private enterSelectedCell() {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      if (this.inputStartTime) {\n        this.promoteRally();\n        return;\n      }\n      this.updateInputStartTime();\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === START_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.startTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === END_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.endTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === RESULT_COL) {\n      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {\n        this.gradebookMgr.moveColIdx(1);\n      } else {\n        this.gradebookMgr.moveRallyIdx(-1);\n      }\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      const name = prompt(`Enter server's name`);\n      if (name) {\n        if (rally.isMyServe) {\n          this.gradebookMgr.project.matchData.myName = name;\n        } else {\n          this.gradebookMgr.project.matchData.oppoName = name;\n        }\n      }\n    }\n  }\n  private tabSelectedCell(opposite = false) {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === RESULT_COL) {\n      const idx = rallyResultToIndex.get(rally.result);\n      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;\n      const nextIdx = next % rallyResultToIndex.size;\n      rally.result = rallyResultVals[nextIdx];\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      const ratingChange = opposite ? 1 : -1;\n      rally.stat.winnerLastShotQuality = mod(\n        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      const ratingChange = opposite ? -1 : 1;\n      rally.stat.loserPreviousShotQuality = mod(\n        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      rally.isMyServe = !rally.isMyServe;\n    }\n  }\n\n  private renderSheet() {\n    this.matchSheetUi.render(this.genSheet());\n  }\n\n  private obtainYoutubeUrl() {\n    const url = prompt('Enter url');\n    if (!url) {\n      return;\n    }\n    const res = extractYoutubeId(url);\n    if (!res.success) {\n      return;\n    }\n    this.gradebookMgr.project.matchData.urls.push(url);\n    this.updateYoutubePlayer();\n  }\n\n  private updateYoutubePlayer() {\n    if (this.gradebookMgr.project.matchData.urls.length < 1) {\n      return;\n    }\n    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);\n    if (!success) {\n      return;\n    }\n    this.youtubePlayerUi.initYoutubePlayer(id);\n  }\n\n  private getNowMs() {\n    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();\n    return Math.round(nowSec * 1000);\n  }\n\n  private updateInputStartTime() {\n    this.inputStartTime = new Time(this.getNowMs());\n    this.renderSheet();\n  }\n\n  private promoteRally() {\n    if (!this.inputStartTime) {\n      console.warn('cannot promote rally without inputStartTime');\n      return;\n    }\n    const nowMs = this.getNowMs();\n    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;\n    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);\n    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;\n    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;\n    this.gradebookMgr.project.cursor.rallyIdx = 0;\n\n    this.inputStartTime = null;\n    this.renderSheet();\n  }\n\n  private genSheet(): Cell[][] {\n    const project = this.gradebookMgr.project;\n    const cursor = project.cursor;\n    const rows = [];\n    const headerRow = [\n      new Cell('Server'),\n      new Cell('Set'),\n      new Cell('Game Score'),\n\n      new Cell('Start'),\n      new Cell('End'),\n      new Cell('Result'),\n      new Cell(`Winner's`),\n      // new Cell(`Winner's last shot`),\n      new Cell(`Loser's`),\n      // new Cell(`Loser's previous shot`),\n      new Cell('Plot'),\n      new Cell(`Winner's risk level`),\n    ];\n    rows.push(headerRow);\n\n    const myName = project.matchData.myName;\n    const oppoName = project.matchData.oppoName;\n    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();\n    rallyContexts.reverse();\n\n    const cursorAtTop = !this.gradebookMgr.getCurrentRally();\n    const hasInputStartTime = this.inputStartTime !== null;\n    const startTime = hasInputStartTime ?\n      formatSecondsToTimeString(this.inputStartTime!.ms) :\n      `<button id='input-start-time'>(Enter)</button>`;\n    const endTime = hasInputStartTime ?\n      `<button id='input-end-time'>(Enter)</button>` : '';\n    const setupInputStartTimeBtn = () => {\n      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.updateInputStartTime();\n      }\n    };\n    const setupInputEndTimeBtn = () => {\n      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.promoteRally();\n      }\n    };\n\n    // The latest rallyContext should only have score and not a rally.\n    const latestRallyCtx = rallyContexts[0];\n    const score = latestRallyCtx.scoreBeforeRally;\n    let latestPlot = latestRallyCtx.toPlot();\n    if (!latestPlot && 1 < rallyContexts.length) {\n      const prevRallyCtx = rallyContexts[1];\n      latestPlot = prevRallyCtx.getPlotForNextRally();\n    }\n\n    const row = [\n      new Cell(''),\n      new Cell(latestRallyCtx.toGameScoreStr()),\n      new Cell(score.toPointsStr()),\n\n      new Cell(startTime, makeOpts({\n        setupFunc: setupInputStartTimeBtn,\n        selected: cursorAtTop && !hasInputStartTime,\n      })),\n      new Cell(endTime, makeOpts({\n        setupFunc: setupInputEndTimeBtn,\n        selected: cursorAtTop && hasInputStartTime,\n        \n      })),\n      new Cell(''),\n      new Cell(''),\n      new Cell(''),\n      new Cell(latestPlot?.text, makeOpts({\n        alignRight: !latestPlot?.isMyPlot})),\n      new Cell(''),\n    ];\n    rows.push(row);\n\n    const ralliedContexts =  rallyContexts.slice(1);\n    ralliedContexts.forEach((rallyCtx, rallyIdx) => {\n      const rally = rallyCtx.rally;\n      const score = rallyCtx.scoreBeforeRally;\n      const rallyIsDoubleFault = rallyCtx.isDoubleFault();\n      const rallyIsPoint = (\n        rallyIsDoubleFault || rally.result === RallyResult.PtServer\n        || rally.result === RallyResult.PtReturner);\n      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||\n        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));\n      let plot;\n      if (rallyIsPoint) {\n        plot = rallyCtx.toPlot();\n      }\n      if (!plot && rallyIdx + 1 < ralliedContexts.length) {\n        const prevRallyCtx = ralliedContexts[rallyIdx + 1];\n        plot = prevRallyCtx.getPlotForNextRally();\n      }\n\n      const server = rally.isMyServe ? myName :\n          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;\n      const row = [\n        new Cell(\n          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(formatSecondsToTimeString(rally.startTime.ms)),\n        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),\n        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),\n            makeOpts({alignCenter: true})),\n        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({\n          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(plot?.text, makeOpts({\n          alignRight: !plot?.isMyPlot, removeTopBorder: !rallyIsPoint})),\n        new Cell(getRiskLevelStr(rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n      ];\n      row.forEach((cell, colIdx) => {\n        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);\n      });\n      rows.push(row);\n    });\n    return rows;\n  }\n}\n\nfunction mod(x = 0, y = 1) {\n  const res = x % y;\n  if (res < 0) {\n    return res + y;\n  }\n  return res;\n}\n\nfunction formatSecondsToTimeString(numMs: number): string {\n  const numSecs = Math.round(numMs / 1000)\n  const hours = Math.floor(numSecs / 3600);\n  const minutes = Math.floor((numSecs % 3600) / 60);\n  const seconds = numSecs % 60;\n\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n  const formattedSeconds = seconds.toString().padStart(2, '0');\n\n  if (hours === 0) {\n    return `${formattedMinutes}:${formattedSeconds}`;\n  } else {\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n\n// https://stackoverflow.com/a/54200105\nfunction extractYoutubeId(url: string){\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n   if (parts[2] === undefined) {\n    return {success: false, id: ''};\n   }\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};\n}\n\ncustomElements.define('gradebook-ui', GradebookUi)\n",
                "languageId": "typescript",
                "version": 3365,
                "state": 1
              }
            ],
            "request": "<file>\n\n<status>I applied your suggestions for this file but haven't decided yet if I accept or reject them. Here is the updated file:</status>\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\nimport { matchKey } from \"../key-match/key_match\";\nimport { YoutubePlayerUi } from \"../youtube-player/youtube_player_ui\";\nimport { Cell, CellLoc, makeOpts, MatchSheetUi } from \"./match_sheet_ui\";\nimport { GradebookMgr } from \"./gradebook_mgr\";\nimport { END_TIME_COL, LOSER_PREVIOUS_SHOT_COL, RATING_SCALE, RESULT_COL, SERVER_COL, START_TIME_COL, WINNER_LAST_SHOT_COL } from \"./constants\";\nimport { EphemeralBanner } from \"../ephemeral-banner\";\nimport { getRiskLevelStr, getShotRatingStr } from \"./models/risk_level\";\nimport { RallyResult, rallyResultToIndex, rallyResultVals } from \"./models/rally\";\nimport { Time } from \"./models/Time\";\n\n\n// Top-level UI to handle everything\nexport class GradebookUi extends HTMLElement {\n  private youtubePlayerUi: YoutubePlayerUi = new YoutubePlayerUi;\n\n  private inputStartTime: Time | null = null;\n  private gradebookMgr = new GradebookMgr;\n\n  private matchSheetUi: MatchSheetUi = new MatchSheetUi;\n  private banner: EphemeralBanner = new EphemeralBanner;\n\n  connectedCallback() {\n    this.innerHTML = `Loading project data.`;\n\n    // IFrame steals the focus on click; is polling the best we can do?\n    setInterval(() => {\n      if (document.activeElement && document.activeElement.tagName == \"IFRAME\") {\n        const elt = document.activeElement as HTMLIFrameElement;\n        elt.blur();\n      }\n    }, 1000);\n  }\n\n  // Must call this to load the editor\n  async loadOrCreateProjectInUi(id: string) {\n    const finalProjectId = await this.gradebookMgr.loadOrCreateProject(id);\n\n    this.innerHTML = `\n      <style>\n      #youtube-container {\n        position: sticky;\n        top: 0;\n        display: flex;\n        align-items: flex-start;\n      }\n      .menu-container {\n        position: relative;\n      }\n      #menu-button {\n        background: none;\n        border: none;\n        font-size: 24px;\n        padding: 10px;\n        cursor: pointer;\n        margin-left: 10px;\n      }\n      .menu-content {\n        display: none;\n        position: absolute;\n        right: 0;\n        background-color: white;\n        min-width: 160px;\n        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n        z-index: 1;\n        border-radius: 4px;\n      }\n      .menu-container:hover .menu-content {\n        display: block;\n      }\n      .menu-content button {\n        width: 100%;\n        padding: 12px 16px;\n        border: none;\n        background: none;\n        text-align: left;\n        cursor: pointer;\n      }\n      .menu-content button:hover {\n        background-color: #f1f1f1;\n      }\n      </style>\n      <ephemeral-banner></ephemeral-banner>\n      <div id='youtube-container'>\n        <youtube-player-ui></youtube-player-ui>\n        <div class=\"menu-container\">\n          <button id='menu-button'>â˜° Menu</button>\n          <div class=\"menu-content\">\n            <button id='add-youtube-btn'>Add youtube video</button>\n          </div>\n        </div>\n      </div>\n      <div><match-sheet-ui></match-sheet-ui></div>\n    `;\n    this.banner = this.querySelector('ephemeral-banner') as EphemeralBanner;\n    this.matchSheetUi = this.querySelector('match-sheet-ui')! as MatchSheetUi;\n    this.matchSheetUi.onCellClick((cellLoc: CellLoc) => {\n      if (cellLoc.rowIdx < 2) {\n        return;\n      }\n      this.gradebookMgr.project.cursor.rallyIdx = cellLoc.rowIdx - 2;\n      this.gradebookMgr.project.cursor.colIdx = cellLoc.colIdx;\n      this.renderSheet();\n    });\n    this.renderSheet();\n\n    this.youtubePlayerUi = this.querySelector('youtube-player-ui')! as YoutubePlayerUi;\n    this.updateYoutubePlayer();\n\n    const addYoutubeBtn = this.querySelector('#add-youtube-btn')! as HTMLButtonElement;\n    addYoutubeBtn.onclick = _ => this.obtainYoutubeUrl();\n    return finalProjectId;\n  }\n\n  getVideoPlayerUi() {\n    return this.youtubePlayerUi\n  }\n  handleKeydown(evt: KeyboardEvent) {\n    this.handleKeydownWithoutChanges(evt);\n    this.handleKeydownWithSheetChanges(evt);\n  }\n\n  async handleKeydownWithoutChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'space') || matchKey(evt, 'k')) {\n      this.getVideoPlayerUi().toggleVideoPlay();\n    } else if (matchKey(evt, 'y')) {\n      this.obtainYoutubeUrl();\n    } else if (matchKey(evt, 'z')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(-0.2);\n    } else if (matchKey(evt, 'x')) {\n      this.getVideoPlayerUi().incrementPlaybackRate(0.2);\n    } else if (matchKey(evt, 'a')) {\n      this.getVideoPlayerUi().resetPlaybackRate();\n    } else if (matchKey(evt, 'l')) {\n      this.getVideoPlayerUi().move(1.5);\n    } else if (matchKey(evt, 'j')) {\n      this.getVideoPlayerUi().move(-3);\n    } else if (matchKey(evt, ';')) {\n      this.getVideoPlayerUi().move(5);\n    } else if (matchKey(evt, 'h')) {\n      this.getVideoPlayerUi().move(-5);\n    } else if (matchKey(evt, 'f')) {\n      const width = this.getVideoPlayerUi().getIframeWidth();\n      let wantWidth = width < 1000 ? width * 4 : width / 4;\n      this.getVideoPlayerUi().setIframeDims(wantWidth);\n    } else if (matchKey(evt, 'cmd+s')) {\n      evt.preventDefault();\n      this.banner.inProgress('Saving');\n      const failureMsg = await this.gradebookMgr.save();\n      if (failureMsg) {\n        this.banner.failure(failureMsg);\n      } else {\n        this.banner.success('Saved!');\n      }\n    } else if (matchKey(evt, 'cmd+shift+s')) {\n      evt.preventDefault();\n      await this.cloneProject();\n    } else {\n      return;\n    }\n    evt.preventDefault();\n  }\n\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const date = new Date();\n    const newId = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}-${date.getHours().toString().padStart(2, '0')}-${date.getMinutes().toString().padStart(2, '0')}-${date.getSeconds().toString().padStart(2, '0')}`;\n    \n    // Clone by serializing and deserializing\n    const projectJson = this.gradebookMgr.project.toJson();\n    const clonedProject = this.gradebookMgr.project.deserialize(projectJson);\n    clonedProject.projectInfo.id = newId;\n    \n    await this.gradebookMgr.save(clonedProject);\n    window.location.href = `${window.location.pathname}?id=${newId}`;\n  }\n\n  handleKeydownWithSheetChanges(evt: KeyboardEvent) {\n    if (matchKey(evt, 'up')) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (matchKey(evt, 'down')) {\n      this.gradebookMgr.moveRallyIdx(1);\n    } else if (matchKey(evt, `\\\\`)) {\n      this.tabSelectedCell();\n    } else if (matchKey(evt, `shift+|`)) {\n      this.tabSelectedCell(true);\n    } else if (matchKey(evt, 'tab') || matchKey(evt, 'right')) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (matchKey(evt, 'shift+tab') || matchKey(evt, 'left')) {\n      this.gradebookMgr.moveColIdx(-1);\n    } else if (matchKey(evt, 'backspace')) {\n      this.gradebookMgr.removeCurrRally();\n    } else if (matchKey(evt, 'cmd+z')) {\n      if (this.inputStartTime) {\n        this.inputStartTime = null;\n      }\n    } else if (matchKey(evt, 'enter')) {\n      this.enterSelectedCell();\n    } else {\n      return;\n    }\n    this.renderSheet();\n    evt.preventDefault();\n  }\n\n  private enterSelectedCell() {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      if (this.inputStartTime) {\n        this.promoteRally();\n        return;\n      }\n      this.updateInputStartTime();\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === START_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.startTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === END_TIME_COL) {\n      this.youtubePlayerUi.moveTo(rally.endTime.ms);\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === RESULT_COL) {\n      if (rally.result === RallyResult.PtReturner || rally.result === RallyResult.PtServer) {\n        this.gradebookMgr.moveColIdx(1);\n      } else {\n        this.gradebookMgr.moveRallyIdx(-1);\n      }\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      this.gradebookMgr.moveColIdx(1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      this.gradebookMgr.moveRallyIdx(-1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      const name = prompt(`Enter server's name`);\n      if (name) {\n        if (rally.isMyServe) {\n          this.gradebookMgr.project.matchData.myName = name;\n        } else {\n          this.gradebookMgr.project.matchData.oppoName = name;\n        }\n      }\n    }\n  }\n  private tabSelectedCell(opposite = false) {\n    const rally = this.gradebookMgr.getCurrentRally();\n    if (!rally) {\n      return;\n    }\n    const cursor = this.gradebookMgr.project.cursor;\n    if (cursor.colIdx === RESULT_COL) {\n      const idx = rallyResultToIndex.get(rally.result);\n      const next = opposite ? idx - 1 : idx + 1 + rallyResultToIndex.size;\n      const nextIdx = next % rallyResultToIndex.size;\n      rally.result = rallyResultVals[nextIdx];\n    } else if (cursor.colIdx === WINNER_LAST_SHOT_COL) {\n      const ratingChange = opposite ? 1 : -1;\n      rally.stat.winnerLastShotQuality = mod(\n        rally.stat.winnerLastShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === LOSER_PREVIOUS_SHOT_COL) {\n      const ratingChange = opposite ? -1 : 1;\n      rally.stat.loserPreviousShotQuality = mod(\n        rally.stat.loserPreviousShotQuality + ratingChange, RATING_SCALE + 1);\n    } else if (cursor.colIdx === SERVER_COL) {\n      rally.isMyServe = !rally.isMyServe;\n    }\n  }\n\n  private renderSheet() {\n    this.matchSheetUi.render(this.genSheet());\n  }\n\n  private obtainYoutubeUrl() {\n    const url = prompt('Enter url');\n    if (!url) {\n      return;\n    }\n    const res = extractYoutubeId(url);\n    if (!res.success) {\n      return;\n    }\n    this.gradebookMgr.project.matchData.urls.push(url);\n    this.updateYoutubePlayer();\n  }\n\n  private updateYoutubePlayer() {\n    if (this.gradebookMgr.project.matchData.urls.length < 1) {\n      return;\n    }\n    const {success, id} = extractYoutubeId(this.gradebookMgr.project.matchData.urls[0]);\n    if (!success) {\n      return;\n    }\n    this.youtubePlayerUi.initYoutubePlayer(id);\n  }\n\n  private getNowMs() {\n    const nowSec = this.youtubePlayerUi.youtubePlayer.getCurrentTime();\n    return Math.round(nowSec * 1000);\n  }\n\n  private updateInputStartTime() {\n    this.inputStartTime = new Time(this.getNowMs());\n    this.renderSheet();\n  }\n\n  private promoteRally() {\n    if (!this.inputStartTime) {\n      console.warn('cannot promote rally without inputStartTime');\n      return;\n    }\n    const nowMs = this.getNowMs();\n    const guessRes = nowMs - this.inputStartTime.ms < 3500 ? RallyResult.Fault : RallyResult.PtServer;\n    this.gradebookMgr.project.matchData.addRally(this.inputStartTime, new Time(nowMs), guessRes);\n    this.gradebookMgr.project.cursor.rallyIdx = this.gradebookMgr.getRelevantRallies().length - 1;\n    this.gradebookMgr.project.cursor.colIdx = RESULT_COL;\n    this.gradebookMgr.project.cursor.rallyIdx = 0;\n\n    this.inputStartTime = null;\n    this.renderSheet();\n  }\n\n  private genSheet(): Cell[][] {\n    const project = this.gradebookMgr.project;\n    const cursor = project.cursor;\n    const rows = [];\n    const headerRow = [\n      new Cell('Server'),\n      new Cell('Set'),\n      new Cell('Game Score'),\n\n      new Cell('Start'),\n      new Cell('End'),\n      new Cell('Result'),\n      new Cell(`Winner's`),\n      // new Cell(`Winner's last shot`),\n      new Cell(`Loser's`),\n      // new Cell(`Loser's previous shot`),\n      new Cell('Plot'),\n      new Cell(`Winner's risk level`),\n    ];\n    rows.push(headerRow);\n\n    const myName = project.matchData.myName;\n    const oppoName = project.matchData.oppoName;\n    const rallyContexts = this.gradebookMgr.project.matchData.getRallyContexts();\n    rallyContexts.reverse();\n\n    const cursorAtTop = !this.gradebookMgr.getCurrentRally();\n    const hasInputStartTime = this.inputStartTime !== null;\n    const startTime = hasInputStartTime ?\n      formatSecondsToTimeString(this.inputStartTime!.ms) :\n      `<button id='input-start-time'>(Enter)</button>`;\n    const endTime = hasInputStartTime ?\n      `<button id='input-end-time'>(Enter)</button>` : '';\n    const setupInputStartTimeBtn = () => {\n      const btn = this.querySelector('#input-start-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.updateInputStartTime();\n      }\n    };\n    const setupInputEndTimeBtn = () => {\n      const btn = this.querySelector('#input-end-time') as HTMLButtonElement;\n      if (btn) {\n        btn.onclick = () => this.promoteRally();\n      }\n    };\n\n    // The latest rallyContext should only have score and not a rally.\n    const latestRallyCtx = rallyContexts[0];\n    const score = latestRallyCtx.scoreBeforeRally;\n    let latestPlot = latestRallyCtx.toPlot();\n    if (!latestPlot && 1 < rallyContexts.length) {\n      const prevRallyCtx = rallyContexts[1];\n      latestPlot = prevRallyCtx.getPlotForNextRally();\n    }\n\n    const row = [\n      new Cell(''),\n      new Cell(latestRallyCtx.toGameScoreStr()),\n      new Cell(score.toPointsStr()),\n\n      new Cell(startTime, makeOpts({\n        setupFunc: setupInputStartTimeBtn,\n        selected: cursorAtTop && !hasInputStartTime,\n      })),\n      new Cell(endTime, makeOpts({\n        setupFunc: setupInputEndTimeBtn,\n        selected: cursorAtTop && hasInputStartTime,\n        \n      })),\n      new Cell(''),\n      new Cell(''),\n      new Cell(''),\n      new Cell(latestPlot?.text, makeOpts({\n        alignRight: !latestPlot?.isMyPlot})),\n      new Cell(''),\n    ];\n    rows.push(row);\n\n    const ralliedContexts =  rallyContexts.slice(1);\n    ralliedContexts.forEach((rallyCtx, rallyIdx) => {\n      const rally = rallyCtx.rally;\n      const score = rallyCtx.scoreBeforeRally;\n      const rallyIsDoubleFault = rallyCtx.isDoubleFault();\n      const rallyIsPoint = (\n        rallyIsDoubleFault || rally.result === RallyResult.PtServer\n        || rally.result === RallyResult.PtReturner);\n      const winnerIsMe = (rally.isMyServe && rally.result === RallyResult.PtServer) ||\n        (!rally.isMyServe && (rally.result === RallyResult.PtReturner || rallyIsDoubleFault));\n      let plot;\n      if (rallyIsPoint) {\n        plot = rallyCtx.toPlot();\n      }\n      if (!plot && rallyIdx + 1 < ralliedContexts.length) {\n        const prevRallyCtx = ralliedContexts[rallyIdx + 1];\n        plot = prevRallyCtx.getPlotForNextRally();\n      }\n\n      const server = rally.isMyServe ? myName :\n          `${\"\".padStart(myName.length, \"_\")}${oppoName}`;\n      const row = [\n        new Cell(\n          rallyIsPoint ? server : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyCtx.toGameScoreStr(), makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(rallyIsPoint ? score.toPointsStr() : '', makeOpts({ removeTopBorder: !rallyIsPoint })),\n        new Cell(formatSecondsToTimeString(rally.startTime.ms)),\n        new Cell(`${rally.getDurationStr()}`, makeOpts({alignRight: true})),\n        new Cell(rallyIdx > 0 ? rallyCtx.getResultSymbolStr() : rallyCtx.getResultStr(myName, oppoName),\n            makeOpts({alignCenter: true})),\n        new Cell(getShotRatingStr(true, rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(getShotRatingStr(false, rallyCtx), makeOpts({\n          alignRight: winnerIsMe, removeTopBorder: !rallyIsPoint})),\n        new Cell(plot?.text, makeOpts({\n          alignRight: !plot?.isMyPlot, removeTopBorder: !rallyIsPoint})),\n        new Cell(getRiskLevelStr(rallyCtx), makeOpts({\n        alignRight: !winnerIsMe, removeTopBorder: !rallyIsPoint})),\n      ];\n      row.forEach((cell, colIdx) => {\n        cell.opts.selected = (rallyIdx === cursor.rallyIdx) && (colIdx === cursor.colIdx);\n      });\n      rows.push(row);\n    });\n    return rows;\n  }\n}\n\nfunction mod(x = 0, y = 1) {\n  const res = x % y;\n  if (res < 0) {\n    return res + y;\n  }\n  return res;\n}\n\nfunction formatSecondsToTimeString(numMs: number): string {\n  const numSecs = Math.round(numMs / 1000)\n  const hours = Math.floor(numSecs / 3600);\n  const minutes = Math.floor((numSecs % 3600) / 60);\n  const seconds = numSecs % 60;\n\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n  const formattedSeconds = seconds.toString().padStart(2, '0');\n\n  if (hours === 0) {\n    return `${formattedMinutes}:${formattedSeconds}`;\n  } else {\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  }\n}\n\n// https://stackoverflow.com/a/54200105\nfunction extractYoutubeId(url: string){\n   const parts = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n   if (parts[2] === undefined) {\n    return {success: false, id: ''};\n   }\n   return {success: true, id: parts[2].split(/[^0-9a-z_\\-]/i)[0]};\n}\n\ncustomElements.define('gradebook-ui', GradebookUi)\n```\n</file>\n\n<reminder>\nAvoid repeating existing code, instead use `// ...existing code...` comments to represent regions of unchanged code.\nEach file's code block must start with a comment containing the filepath. This includes Markdown files.\n</reminder>\n<prompt>\n- Use (new Date()).toISOString() for newId\n- Instead of cloning, just update the id in this.gradebookMgr.project.projectInfo\n- clear the owner field\n- save without any argument\n- update href to use # instead of ?\n</prompt>",
            "response": "I'll help simplify the cloning implementation. Here's the updated version:\n\n### /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n\nUpdate the cloneProject method with simpler cloning logic:\n\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n// ...existing code...\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const newId = (new Date()).toISOString();\n    \n    this.gradebookMgr.project.projectInfo.id = newId;\n    this.gradebookMgr.project.projectInfo.owner = '';\n    \n    await this.gradebookMgr.save();\n    window.location.href = `${window.location.pathname}#${newId}`;\n  }\n// ...existing code...\n```\n\nThe changes:\n1. Use toISOString() for newId generation\n2. Directly modify the existing project's id and owner\n3. Save current project without arguments\n4. Use hash (#) instead of query param (?) in URL"
          },
          "codeBlocks": [
            {
              "code": "// ...existing code...\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const newId = (new Date()).toISOString();\n    \n    this.gradebookMgr.project.projectInfo.id = newId;\n    this.gradebookMgr.project.projectInfo.owner = '';\n    \n    await this.gradebookMgr.save();\n    window.location.href = `${window.location.pathname}#${newId}`;\n  }\n// ...existing code...\n",
              "resource": {
                "$mid": 1,
                "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
                "scheme": "file"
              },
              "language": "typescript",
              "markdownBeforeBlock": "I'll help simplify the cloning implementation. Here's the updated version:\n\n### [gradebook_ui.ts](file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts)\n\nUpdate the cloneProject method with simpler cloning logic:\n\n"
            }
          ],
          "messages": [
            {
              "role": "user",
              "content": "- Use (new Date()).toISOString() for newId\n- Instead of cloning, just update the id in this.gradebookMgr.project.projectInfo\n- clear the owner field\n- save without any argument\n- update href to use # instead of ?"
            },
            {
              "role": "assistant",
              "content": "I'll help simplify the cloning implementation. Here's the updated version:\n\n### /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n\nUpdate the cloneProject method with simpler cloning logic:\n\n```typescript\n// filepath: /Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts\n// ...existing code...\n  private async cloneProject() {\n    this.banner.inProgress('Cloning project...');\n    const newId = (new Date()).toISOString();\n    \n    this.gradebookMgr.project.projectInfo.id = newId;\n    this.gradebookMgr.project.projectInfo.owner = '';\n    \n    await this.gradebookMgr.save();\n    window.location.href = `${window.location.pathname}#${newId}`;\n  }\n// ...existing code...\n```\n\nThe changes:\n1. Use toISOString() for newId generation\n2. Directly modify the existing project's id and owner\n3. Save current project without arguments\n4. Use hash (#) instead of query param (?) in URL"
            }
          ],
          "modelMessageId": "58fa730a-0988-49da-8aa6-f1a1c4cef50d",
          "responseId": "e4b73081-6382-408f-9785-47f9dc681bff",
          "sessionId": "9ebcb46b-2747-4861-8196-e4505dcab712",
          "agentId": "github.copilot.editingSession"
        }
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editingSession",
        "description": "Edit files in your workspace",
        "metadata": {
          "themeIcon": {
            "id": "copilot"
          },
          "hasFollowups": false,
          "supportIssueReporting": false,
          "supportsSlowVariables": true
        },
        "name": "GitHubCopilot",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "slashCommands": [],
        "disambiguation": []
      },
      "workingSet": [
        {
          "$mid": 1,
          "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "scheme": "file"
        },
        {
          "$mid": 1,
          "fsPath": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "external": "file:///Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "path": "/Users/kris/code/match-grader/src/tsModules/match-grader/gradebook_ui.ts",
          "scheme": "file"
        }
      ],
      "contentReferences": [],
      "codeCitations": [],
      "timestamp": 1735670730899
    }
  ]
}